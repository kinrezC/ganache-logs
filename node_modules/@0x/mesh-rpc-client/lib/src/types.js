"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ContractEventKind;
(function (ContractEventKind) {
    ContractEventKind["ERC20TransferEvent"] = "ERC20TransferEvent";
    ContractEventKind["ERC20ApprovalEvent"] = "ERC20ApprovalEvent";
    ContractEventKind["ERC721TransferEvent"] = "ERC721TransferEvent";
    ContractEventKind["ERC721ApprovalEvent"] = "ERC721ApprovalEvent";
    ContractEventKind["ERC721ApprovalForAllEvent"] = "ERC721ApprovalForAllEvent";
    ContractEventKind["ERC1155ApprovalForAllEvent"] = "ERC1155ApprovalForAllEvent";
    ContractEventKind["ERC1155TransferSingleEvent"] = "ERC1155TransferSingleEvent";
    ContractEventKind["ERC1155TransferBatchEvent"] = "ERC1155TransferBatchEvent";
    ContractEventKind["ExchangeFillEvent"] = "ExchangeFillEvent";
    ContractEventKind["ExchangeCancelEvent"] = "ExchangeCancelEvent";
    ContractEventKind["ExchangeCancelUpToEvent"] = "ExchangeCancelUpToEvent";
    ContractEventKind["WethDepositEvent"] = "WethDepositEvent";
    ContractEventKind["WethWithdrawalEvent"] = "WethWithdrawalEvent";
})(ContractEventKind = exports.ContractEventKind || (exports.ContractEventKind = {}));
var OrderEventEndState;
(function (OrderEventEndState) {
    OrderEventEndState["Invalid"] = "INVALID";
    OrderEventEndState["Added"] = "ADDED";
    OrderEventEndState["Filled"] = "FILLED";
    OrderEventEndState["FullyFilled"] = "FULLY_FILLED";
    OrderEventEndState["Cancelled"] = "CANCELLED";
    OrderEventEndState["Expired"] = "EXPIRED";
    OrderEventEndState["Unfunded"] = "UNFUNDED";
    OrderEventEndState["FillabilityIncreased"] = "FILLABILITY_INCREASED";
})(OrderEventEndState = exports.OrderEventEndState || (exports.OrderEventEndState = {}));
var RejectedKind;
(function (RejectedKind) {
    RejectedKind["ZeroexValidation"] = "ZEROEX_VALIDATION";
    RejectedKind["MeshError"] = "MESH_ERROR";
    RejectedKind["MeshValidation"] = "MESH_VALIDATION";
})(RejectedKind = exports.RejectedKind || (exports.RejectedKind = {}));
var RejectedCode;
(function (RejectedCode) {
    RejectedCode["InternalError"] = "InternalError";
    RejectedCode["MaxOrderSizeExceeded"] = "MaxOrderSizeExceeded";
    RejectedCode["OrderAlreadyStored"] = "OrderAlreadyStored";
    RejectedCode["OrderForIncorrectChain"] = "OrderForIncorrectChain";
    RejectedCode["NetworkRequestFailed"] = "NetworkRequestFailed";
    RejectedCode["OrderHasInvalidMakerAssetAmount"] = "OrderHasInvalidMakerAssetAmount";
    RejectedCode["OrderHasInvalidTakerAssetAmount"] = "OrderHasInvalidTakerAssetAmount";
    RejectedCode["OrderExpired"] = "OrderExpired";
    RejectedCode["OrderFullyFilled"] = "OrderFullyFilled";
    RejectedCode["OrderCancelled"] = "OrderCancelled";
    RejectedCode["OrderUnfunded"] = "OrderUnfunded";
    RejectedCode["OrderHasInvalidMakerAssetData"] = "OrderHasInvalidMakerAssetData";
    RejectedCode["OrderHasInvalidTakerAssetData"] = "OrderHasInvalidTakerAssetData";
    RejectedCode["OrderHasInvalidSignature"] = "OrderHasInvalidSignature";
})(RejectedCode = exports.RejectedCode || (exports.RejectedCode = {}));
