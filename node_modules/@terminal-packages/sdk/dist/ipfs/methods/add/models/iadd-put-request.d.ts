import { MultihashTypes } from '../../../enums';
export interface IAddPutRequest {
    /**
     * The file string or blob data
     */
    fileStringOrBlob: string | Blob;
    /**
     * Add directory paths recursively. Default: “false”.
     */
    recursive?: boolean | undefined;
    /**
     * Write minimal output.
     */
    quiet?: boolean | undefined;
    /**
     * Write only final hash.
     */
    quieter?: boolean | undefined;
    /**
     * Write no output.
     */
    silent?: boolean | undefined;
    /**
     * Stream progress data.
     */
    progress?: boolean | undefined;
    /**
     * Use trickle-dag format for dag generation.
     */
    trickle?: boolean | undefined;
    /**
     * Only chunk and hash - do not write to disk.
     */
    onlyHash?: boolean | undefined;
    /**
     * Wrap files with a directory object.
     */
    wrapWithDirectory?: boolean | undefined;
    /**
     *  Include files that are hidden. Only takes effect on recursive add. chunker [string]: Chunking algorithm to use.
     */
    hidden?: boolean | undefined;
    /**
     * Pin this object when adding. Default: “true”.
     */
    pin?: boolean | undefined;
    /**
     * Use raw blocks for leaf nodes. (experimental).
     */
    rawLeaves?: boolean | undefined;
    /**
     * Add the file using filestore. (experimental).
     */
    nocopy?: boolean | undefined;
    /**
     * Check the filestore for pre-existing blocks. (experimental).
     */
    fscache?: boolean | undefined;
    /**
     * Cid version. Non-zero value will change default of ‘raw-leaves’ to true. (experimental). Default: “0”.
     */
    cidVersion?: number | undefined;
    /**
     * Hash function to use. Will set Cid version to 1 if used. (experimental). Default: “sha2-256”.
     */
    hash?: MultihashTypes | undefined;
}
