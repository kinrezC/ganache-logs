import { ApiService } from '../../../shared/api/api-service';
import { ITerminalIpfsOptions } from '../../models/iterminal-ipfs-options';
import { IObjectGetResponse, IObjectPutRequest, IObjectPutResponse, IObjectStatResponse } from './models';
export declare class IpfsObject {
    private _ipfsApiService;
    constructor(apiService: ApiService, apiUrl: string, options: ITerminalIpfsOptions);
    /**
     * Output the raw bytes of an IPFS object
     * @param multihash Key of the object to retrieve, in base58-encoded multihash format
     */
    data(multihash: string): Promise<string>;
    /**
     * Get and serialize the DAG node named by key
     * @param multihash Key of the object to retrieve, in base58-encoded multihash form
     */
    get(multihash: string): Promise<IObjectGetResponse>;
    /**
     * Get stats for the DAG node named by key
     * @param multihash Key of the object to retrieve, in base58-encoded multihash form
     */
    stat(multihash: string): Promise<IObjectStatResponse>;
    /**
     * Store input as a DAG object, print its key
     * @param objectPutRequest The object put request
     */
    put(objectPutRequest: IObjectPutRequest): Promise<IObjectPutResponse>;
}
