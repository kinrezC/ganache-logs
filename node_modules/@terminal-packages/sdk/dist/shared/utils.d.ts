import { ITerminalWindow } from './models/window';
export declare class Utils {
    static readonly UNKNOWN = "unknown";
    /**
     * Deep clone a object
     * @param object The object
     */
    static deepClone<T>(object: T): T;
    /**
     * Get window (will return undefined on all node process as window does not exist)
     */
    static getWindow(): ITerminalWindow | undefined;
    /**
     * Get FormData
     * Will return `form-data` for node and the `window.FormData()` for browsers
     */
    static getFormData(): Promise<FormData>;
    /**
     * To checksum address
     * @param address The address
     */
    static toChecksumAddress(address: string): string;
    /**
     * Parse the jsonrpc result
     * @param result The jsonrpc result
     */
    static parseJsonRPCResult(result: any): string | null;
    /**
     * Parse the data to string
     * @param data The data
     */
    static parseDataToString(data: any): string;
    /**
     * Parse data into string array
     * @param data The data
     */
    static parseDataIntoStringArray(data: any): string[];
    /**
     * Makes a string unreadable and fills it with `*`
     * @param data The data
     */
    static makeStringUnreadable(data: string): string;
}
