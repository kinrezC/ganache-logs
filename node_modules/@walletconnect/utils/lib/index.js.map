{"version":3,"sources":["webpack://WalletConnectUtils/webpack/universalModuleDefinition","webpack://WalletConnectUtils/webpack/bootstrap","webpack://WalletConnectUtils/./node_modules/@ethersproject/bytes/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/bytes/lib.esm/_version.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/logger/lib.esm/_version.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/logger/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/bignumber/lib.esm/_version.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/bignumber/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/bn.js/lib/bn.js","webpack://WalletConnectUtils/(webpack)/buildin/global.js","webpack://WalletConnectUtils/./node_modules/js-sha3/src/sha3.js","webpack://WalletConnectUtils/./src/index.ts","webpack://WalletConnectUtils/./node_modules/buffer/index.js","webpack://WalletConnectUtils/./node_modules/base64-js/index.js","webpack://WalletConnectUtils/./node_modules/ieee754/index.js","webpack://WalletConnectUtils/./node_modules/isarray/index.js","webpack://WalletConnectUtils/./node_modules/tslib/tslib.es6.js","webpack://WalletConnectUtils/./node_modules/bignumber.js/bignumber.js","webpack://WalletConnectUtils/(webpack)/buildin/module.js","webpack://WalletConnectUtils/./node_modules/process/browser.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/constants/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/strings/lib.esm/_version.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/strings/lib.esm/utf8.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/strings/lib.esm/bytes32.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/strings/lib.esm/idna.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/strings/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/keccak256/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/rlp/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/address/lib.esm/index.js","webpack://WalletConnectUtils/./node_modules/@ethersproject/address/lib.esm/_version.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","logger","isHexable","addSlice","array","slice","args","Array","arguments","Uint8Array","apply","isBytesLike","isHexString","length","isBytes","constructor","v","arrayify","options","checkSafeUint53","result","unshift","push","allowMissingPrefix","substring","toHexString","hex","hexPad","throwArgumentError","parseInt","concat","items","objects","map","item","reduce","accum","offset","set","stripZeros","start","zeroPad","match","HexCharacters","hexlify","Math","floor","toLowerCase","hexDataLength","data","hexDataSlice","endOffset","hexConcat","forEach","hexValue","trimmed","hexStripZeros","hexZeroPad","splitSignature","signature","_vs","recoveryParam","bytes","vs","joinSignature","version","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warn","error","off","LogLevel","_globalLogger","_normalizeError","missing","form","normalize","Error","join","String","fromCharCode","message","_checkNormalize","writable","logLevel","level","console","log","_log","levels","DEBUG","INFO","WARNING","code","params","errors","UNKNOWN_ERROR","messageDetails","keys","JSON","stringify","toString","reason","makeError","throwError","INVALID_ARGUMENT","argument","UNSUPPORTED_OPERATION","operation","NUMERIC_FAULT","fault","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","MISSING_NEW","censorship","permanent","globalLogger","NOT_IMPLEMENTED","NETWORK_ERROR","SERVER_ERROR","TIMEOUT","BUFFER_OVERRUN","CALL_EXCEPTION","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNPREDICTABLE_GAS_LIMIT","ERROR","OFF","_constructorGuard","MAX_SAFE","constructorGuard","checkNew","_hex","_isBigNumber","freeze","toBigNumber","toBN","fromTwos","toTwos","from","other","add","sub","isZero","throwFault","div","mul","mod","pow","maskn","eq","lt","lte","gt","gte","toNumber","toHex","zeros","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","e","parseHex","str","end","len","min","charCodeAt","parseBase","num","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","strip","toArray","ceil","j","w","limbLen","limbPow","total","word","imuln","_iaddn","copy","dest","clone","_expand","size","_normSign","inspect","groupSizes","groupBases","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","modn","idivn","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","width","abs","inotn","iaddn","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","Function","window","JS_SHA3_NO_NODE_JS","process","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","HEX_CHARS","SHIFT","RC","BITS","OUTPUT_TYPES","createOutputMethod","outputType","Keccak","update","createShakeOutputMethod","outputBits","createMethod","method","type","algorithms","methods","methodNames","algorithm","methodName","blocks","reset","block","blockCount","byteCount","outputBlocks","extraBytes","notString","ArrayBuffer","index","lastByteIndex","f","finalize","arrayBuffer","buffer","Uint32Array","digest","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","convertArrayBufferToUtf8","toUtf8String","convertArrayBufferToHex","noPrefix","removeHexPrefix","convertBufferToHex","addHexPrefix","convertUtf8ToArrayBuffer","utf8","toUtf8Bytes","convertUtf8ToHex","convertNumberToHex","sanitizeHex","convertHexToBuffer","convertHexToArrayBuffer","convertHexToNumber","removeHexLeadingZeros","startsWith","isEmptyString","trim","parseQueryString","queryString","pairs","substr","keyArr","valueArr","decodeURIComponent","isEmptyArray","Date","getTime","random","toChecksumAddress","address","getAddress","isValidAddress","test","document","location","getMetaOfAny","metaTags","getElementsByTagName","tag","attributes","getAttribute","filter","attr","includes","content","title","getName","description","url","origin","icons","links","link","rel","indexOf","href","absoluteHref","protocol","host","path","pathname","pop","absoluteUrl","getIcons","pathStart","pathEnd","undefined","requiredParams","values","handshakeTopic","parseRequiredParams","queryParams","bridge","parseQueryParams","originalFn","thisArg","Promise","resolve","reject","callArgs","err","txData","parseHexValues","txDataRPC","to","gasPrice","gasLimit","gas","nonce","prunable","event","signingMethods","stateMethods","request","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","obj","isBuffer","checked","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","utf16leToBytes","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","equals","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","checkOffset","ext","checkInt","objectWriteUInt16","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","parts","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","extendStatics","setPrototypeOf","__extends","__","__assign","assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","fulfilled","step","rejected","done","then","__generator","body","label","sent","trys","ops","verb","iterator","op","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","asyncIterator","resume","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","default","__importDefault","globalObject","BigNumber","isNumeric","hasSymbol","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","coeffToString","xc","yc","intCheck","toExponential","charAt","toFixedPoint","zs","configObject","convertBase","parseNumeric","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabet","caseChanged","isNum","search","toUpperCase","format","rm","id","ne","maxOrMin","normalise","sd","ni","rd","pows10","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","minimum","dp","rand","splice","sum","plus","toBaseOut","baseIn","baseOut","arrL","reverse","sign","callerIsToString","multiply","temp","xlo","xhi","klo","khi","aL","bL","subtract","more","prod","prodL","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","p1","p2","absoluteValue","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","times","integerValue","isEqualTo","isGreaterThan","isGreaterThanOrEqualTo","isLessThan","isLessThanOrEqualTo","isNegative","isPositive","minus","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","rep","toFixed","toFormat","g1","g2","intPart","fractionPart","intDigits","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","for","webpackPolyfill","deprecate","paths","children","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","browser","env","argv","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","HashZero","UnicodeNormalizationForm","getUtf8CodePoints","ignoreErrors","extraLength","overlongMask","nextChar","checkNormalize","escapeChar","_toEscapedUtf8String","_toUtf8String","toUtf8CodePoints","formatBytes32String","text","parseBytes32String","createTable","func","pair","comps","createRangeTable","matchMap","ranges","range","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","nameprep","codes","codesTableB2","codepoint","complex","_nameprepTableB2","NFKC","_nameprepTableC","_nameprepTableA1","keccak256","keccak_256","arrayifyInteger","encode","_encode","payload","child","getChecksumAddress","chars","hashed","ibanLookup","safeDigits","log10","LN10","ibanChecksum","expanded","checksum","isAddress","getIcapAddress","base36","getContractAddress","transaction"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,qBAAsB,GAAIH,GACP,iBAAZC,QACdA,QAA4B,mBAAID,IAEhCD,EAAyB,mBAAIC,IAR/B,CASGK,MAAM,WACT,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,iDClFrD,+qBAGA,MAAMC,EAAS,IAAI,ICHI,wBDKvB,SAASC,EAAUhB,GACf,QAAUA,EAAiB,YAE/B,SAASiB,EAASC,GACd,OAAIA,EAAMC,MACCD,GAEXA,EAAMC,MAAQ,WACV,IAAIC,EAAOC,MAAMV,UAAUQ,MAAMjC,KAAKoC,WACtC,OAAOL,EAAS,IAAIM,WAAWF,MAAMV,UAAUQ,MAAMK,MAAMN,EAAOE,MAE/DF,GAEJ,SAASO,EAAYzB,GACxB,OAAS0B,EAAY1B,MAAYA,EAAM2B,OAAS,IAAOC,EAAQ5B,GAE5D,SAAS4B,EAAQ5B,GACpB,GAAa,MAATA,EACA,OAAO,EAEX,GAAIA,EAAM6B,cAAgBN,WACtB,OAAO,EAEX,GAAuB,iBAAZ,EACP,OAAO,EAEX,GAAoB,MAAhBvB,EAAM2B,OACN,OAAO,EAEX,IAAK,IAAI5C,EAAI,EAAGA,EAAIiB,EAAM2B,OAAQ5C,IAAK,CACnC,IAAI+C,EAAI9B,EAAMjB,GACd,GAAI+C,EAAI,GAAKA,GAAK,KAAQA,EAAI,EAC1B,OAAO,EAGf,OAAO,EAEJ,SAASC,EAAS/B,EAAOgC,GAI5B,GAHKA,IACDA,EAAU,IAES,iBAAZ,EAAsB,CAC7BjB,EAAOkB,gBAAgBjC,EAAO,0BAC9B,IAAIkC,EAAS,GACb,KAAOlC,GACHkC,EAAOC,QAAgB,IAARnC,GACfA,GAAS,IAKb,OAHsB,IAAlBkC,EAAOP,QACPO,EAAOE,KAAK,GAETnB,EAAS,IAAIM,WAAWW,IAQnC,GANIF,EAAQK,oBAAyC,iBAAZ,GAAkD,OAA1BrC,EAAMsC,UAAU,EAAG,KAChFtC,EAAQ,KAAOA,GAEfgB,EAAUhB,KACVA,EAAQA,EAAMuC,eAEdb,EAAY1B,GAAQ,CACpB,IAAIwC,EAAMxC,EAAMsC,UAAU,GACtBE,EAAIb,OAAS,IACU,SAAnBK,EAAQS,OACRD,EAAM,MAAQA,EAAIF,UAAU,GAEJ,UAAnBN,EAAQS,OACbD,GAAO,IAGPzB,EAAO2B,mBAAmB,yBAA0B,QAAS1C,IAGrE,IAAIkC,EAAS,GACb,IAAK,IAAInD,EAAI,EAAGA,EAAIyD,EAAIb,OAAQ5C,GAAK,EACjCmD,EAAOE,KAAKO,SAASH,EAAIF,UAAUvD,EAAGA,EAAI,GAAI,KAElD,OAAOkC,EAAS,IAAIM,WAAWW,IAEnC,OAAIN,EAAQ5B,GACDiB,EAAS,IAAIM,WAAWvB,IAE5Be,EAAO2B,mBAAmB,yBAA0B,QAAS1C,GAEjE,SAAS4C,EAAOC,GACnB,IAAIC,EAAUD,EAAME,IAAIC,GAAQjB,EAASiB,IACrCrB,EAASmB,EAAQG,OAAO,CAACC,EAAOF,IAAUE,EAAQF,EAAKrB,OAAS,GAChEO,EAAS,IAAIX,WAAWI,GAK5B,OAJAmB,EAAQG,OAAO,CAACE,EAAQ1C,KACpByB,EAAOkB,IAAI3C,EAAQ0C,GACZA,EAAS1C,EAAOkB,QACxB,GACIV,EAASiB,GAEb,SAASmB,EAAWrD,GACvB,IAAIkC,EAASH,EAAS/B,GACtB,GAAsB,IAAlBkC,EAAOP,OACP,OAAOO,EAGX,IAAIoB,EAAQ,EACZ,KAAOA,EAAQpB,EAAOP,QAA4B,IAAlBO,EAAOoB,IACnCA,IAMJ,OAHIA,IACApB,EAASA,EAAOf,MAAMmC,IAEnBpB,EAEJ,SAASqB,EAAQvD,EAAO2B,IAC3B3B,EAAQ+B,EAAS/B,IACP2B,OAASA,GACfZ,EAAO2B,mBAAmB,qBAAsB,QAASpB,UAAU,IAEvE,IAAIY,EAAS,IAAIX,WAAWI,GAE5B,OADAO,EAAOkB,IAAIpD,EAAO2B,EAAS3B,EAAM2B,QAC1BV,EAASiB,GAEb,SAASR,EAAY1B,EAAO2B,GAC/B,QAAuB,iBAAZ,IAAyB3B,EAAMwD,MAAM,wBAG5C7B,GAAU3B,EAAM2B,SAAW,EAAI,EAAIA,GAK3C,MAAM8B,EAAgB,mBACf,SAASC,EAAQ1D,EAAOgC,GAI3B,GAHKA,IACDA,EAAU,IAES,iBAAZ,EAAsB,CAC7BjB,EAAOkB,gBAAgBjC,EAAO,yBAC9B,IAAIwC,EAAM,GACV,KAAOxC,GACHwC,EAAMiB,EAAsB,GAARzD,GAAgBwC,EACpCxC,EAAQ2D,KAAKC,MAAM5D,EAAQ,IAE/B,OAAIwC,EAAIb,QACAa,EAAIb,OAAS,IACba,EAAM,IAAMA,GAET,KAAOA,GAEX,OAKX,GAHIR,EAAQK,oBAAyC,iBAAZ,GAAkD,OAA1BrC,EAAMsC,UAAU,EAAG,KAChFtC,EAAQ,KAAOA,GAEfgB,EAAUhB,GACV,OAAOA,EAAMuC,cAEjB,GAAIb,EAAY1B,GAYZ,OAXIA,EAAM2B,OAAS,IACQ,SAAnBK,EAAQS,OACRzC,EAAQ,MAAQA,EAAMsC,UAAU,GAER,UAAnBN,EAAQS,OACbzC,GAAS,IAGTe,EAAO2B,mBAAmB,yBAA0B,QAAS1C,IAG9DA,EAAM6D,cAEjB,GAAIjC,EAAQ5B,GAAQ,CAChB,IAAIkC,EAAS,KACb,IAAK,IAAInD,EAAI,EAAGA,EAAIiB,EAAM2B,OAAQ5C,IAAK,CACnC,IAAI+C,EAAI9B,EAAMjB,GACdmD,GAAUuB,GAAmB,IAAJ3B,IAAa,GAAK2B,EAAkB,GAAJ3B,GAE7D,OAAOI,EAEX,OAAOnB,EAAO2B,mBAAmB,wBAAyB,QAAS1C,GAUhE,SAAS8D,EAAcC,GAC1B,GAAsB,iBAAX,EACPA,EAAOL,EAAQK,QAEd,IAAKrC,EAAYqC,IAAUA,EAAKpC,OAAS,EAC1C,OAAO,KAEX,OAAQoC,EAAKpC,OAAS,GAAK,EAExB,SAASqC,EAAaD,EAAMZ,EAAQc,GAQvC,MAPsB,iBAAX,EACPF,EAAOL,EAAQK,KAETrC,EAAYqC,IAAUA,EAAKpC,OAAS,IAC1CZ,EAAO2B,mBAAmB,kBAAmB,QAASqB,GAE1DZ,EAAS,EAAI,EAAIA,EACA,MAAbc,EACO,KAAOF,EAAKzB,UAAUa,EAAQ,EAAI,EAAIc,GAE1C,KAAOF,EAAKzB,UAAUa,GAE1B,SAASe,EAAUrB,GACtB,IAAIX,EAAS,KAIb,OAHAW,EAAMsB,QAASnB,IACXd,GAAUwB,EAAQV,GAAMV,UAAU,KAE/BJ,EAEJ,SAASkC,EAASpE,GACrB,IAAIqE,EAAUC,EAAcZ,EAAQ1D,EAAO,CAAEyC,OAAQ,UACrD,MAAgB,OAAZ4B,EACO,MAEJA,EAEJ,SAASC,EAActE,GACH,iBAAZ,IACPA,EAAQ0D,EAAQ1D,IAEf0B,EAAY1B,IACbe,EAAO2B,mBAAmB,qBAAsB,QAAS1C,GAE7DA,EAAQA,EAAMsC,UAAU,GACxB,IAAIa,EAAS,EACb,KAAOA,EAASnD,EAAM2B,QAA4B,MAAlB3B,EAAMmD,IAClCA,IAEJ,MAAO,KAAOnD,EAAMsC,UAAUa,GAE3B,SAASoB,EAAWvE,EAAO2B,GAU9B,IATuB,iBAAZ,EACP3B,EAAQ0D,EAAQ1D,GAEV0B,EAAY1B,IAClBe,EAAO2B,mBAAmB,qBAAsB,QAAS1C,GAEzDA,EAAM2B,OAAS,EAAIA,EAAS,GAC5BZ,EAAO2B,mBAAmB,qBAAsB,QAASpB,UAAU,IAEhEtB,EAAM2B,OAAS,EAAIA,EAAS,GAC/B3B,EAAQ,MAAQA,EAAMsC,UAAU,GAEpC,OAAOtC,EAEJ,SAASwE,EAAeC,GAC3B,IAAIvC,EAAS,CACTrC,EAAG,KACHiB,EAAG,KACH4D,IAAK,KACLC,cAAe,EACf7C,EAAG,GAEP,GAAIL,EAAYgD,GAAY,CACxB,IAAIG,EAAQ7C,EAAS0C,GACA,KAAjBG,EAAMjD,QACNZ,EAAO2B,mBAAmB,6CAA8C,YAAa+B,GAGzFvC,EAAOrC,EAAI6D,EAAQkB,EAAMzD,MAAM,EAAG,KAClCe,EAAOpB,EAAI4C,EAAQkB,EAAMzD,MAAM,GAAI,KAEnCe,EAAOJ,EAAI8C,EAAM,IACA,KAAb1C,EAAOJ,GAAyB,KAAbI,EAAOJ,IAC1BI,EAAOJ,EAAI,GAAMI,EAAOJ,EAAI,GAGhCI,EAAOyC,cAAiBzC,EAAOJ,EAAI,GAE/BI,EAAOyC,gBACPC,EAAM,KAAO,KAEjB1C,EAAOwC,IAAMhB,EAAQkB,EAAMzD,MAAM,GAAI,SAEpC,CA+BD,GA9BAe,EAAOrC,EAAI4E,EAAU5E,EACrBqC,EAAOpB,EAAI2D,EAAU3D,EACrBoB,EAAOJ,EAAI2C,EAAU3C,EACrBI,EAAOyC,cAAgBF,EAAUE,cACjCzC,EAAOwC,IAAMD,EAAUC,IAEP,MAAZxC,EAAOJ,GAA2B,IAAZI,EAAOJ,GAAuB,IAAZI,EAAOJ,IAC/CI,EAAOJ,EAAI,GAAMI,EAAOJ,EAAI,GAGJ,MAAxBI,EAAOyC,eAAqC,MAAZzC,EAAOJ,EACvCI,EAAOyC,cAAgB,EAAKzC,EAAOJ,EAAI,EAEV,MAAxBI,EAAOyC,eAAqC,MAAZzC,EAAOJ,EAC5CI,EAAOJ,EAAI,GAAKI,EAAOyC,cAEM,MAAxBzC,EAAOyC,eAAqC,MAAZzC,EAAOJ,GACxCI,EAAOJ,IAAM,GAAKI,EAAOyC,eACzB5D,EAAO2B,mBAAmB,qCAAsC,YAAa+B,GAIrE,MAAZvC,EAAOrC,IACPqC,EAAOrC,EAAI0E,EAAWrC,EAAOrC,EAAG,KAEpB,MAAZqC,EAAOpB,IACPoB,EAAOpB,EAAIyD,EAAWrC,EAAOpB,EAAG,KAIlB,MAAdoB,EAAOwC,IAAa,CACpBxC,EAAOwC,IAAMH,EAAWrC,EAAOwC,IAAK,IAChCxC,EAAOwC,IAAI/C,OAAS,IACpBZ,EAAO2B,mBAAmB,yBAA0B,YAAa+B,GAErE,IAAII,EAAK9C,EAASG,EAAOwC,KACrBC,EAAkBE,EAAG,IAAM,IAAO,EAAI,EACtC/C,EAAI,GAAKI,EAAOyC,cAEpBE,EAAG,IAAM,IACT,IAAI/D,EAAI4C,EAAQmB,GAEA,MAAZ3C,EAAOpB,EACPoB,EAAOpB,EAAIA,EAENoB,EAAOpB,IAAMA,GAClBC,EAAO2B,mBAAmB,2BAA4B,YAAa+B,GAEvD,MAAZvC,EAAOJ,EACPI,EAAOJ,EAAIA,EAENI,EAAOJ,IAAMA,GAClBf,EAAO2B,mBAAmB,2BAA4B,YAAa+B,GAElD,MAAjBE,EACAzC,EAAOyC,cAAgBA,EAElBzC,EAAOyC,gBAAkBA,GAC9B5D,EAAO2B,mBAAmB,uCAAwC,YAAa+B,GAevF,GAXgB,MAAZvC,EAAOJ,GAAqC,MAAxBI,EAAOyC,eAC3B5D,EAAO2B,mBAAmB,6DAA8D,YAAa+B,GAGxF,KAAbvC,EAAOJ,GAAyB,KAAbI,EAAOJ,GAC1Bf,EAAO2B,mBAAmB,4BAA6B,YAAa+B,IAGpEvC,EAAOrC,EAAE8B,OAAS,IAAMO,EAAOpB,EAAEa,OAAS,KAC1CZ,EAAO2B,mBAAmB,4BAA6B,YAAa+B,GAEtD,MAAdvC,EAAOwC,IAAa,CACpB,IAAIG,EAAK9C,EAASG,EAAOpB,GACrB+D,EAAG,IAAM,KACT9D,EAAO2B,mBAAmB,2BAA4B,YAAa+B,GAEnEvC,EAAOyC,gBACPE,EAAG,IAAM,KAEb3C,EAAOwC,IAAMhB,EAAQmB,IAG7B,OAAO3C,EAEJ,SAAS4C,EAAcL,GAE1B,OAAOf,EAAQd,EAAO,EADtB6B,EAAYD,EAAeC,IAEb5E,EACV4E,EAAU3D,EACT2D,EAAUE,cAAgB,OAAS,Y,6BExXrC,MAAMI,EAAU,wBCAvB,kCACA,IAAIC,GAAyB,EACzBC,GAAgB,EACpB,MAAMC,EAAY,CAAEC,MAAO,EAAG,QAAW,EAAGC,KAAM,EAAGC,KAAM,EAAGC,MAAO,EAAGC,IAAK,GAC7E,IAAIC,EAAWN,EAAmB,QAE9BO,EAAgB,KA4BpB,IAAIC,EA3BJ,WACI,IACI,IAAIC,EAAU,GAad,GAXA,CAAC,MAAO,MAAO,OAAQ,QAAQxB,QAASyB,IACpC,IACI,GAA+B,SAA3B,OAAOC,UAAUD,GACjB,MAAM,IAAIE,MAAM,iBAIxB,MAAOR,GACHK,EAAQvD,KAAKwD,MAGjBD,EAAQhE,OACR,MAAM,IAAImE,MAAM,WAAaH,EAAQI,KAAK,OAE9C,GAAIC,OAAOC,aAAa,KAAMJ,UAAU,SAAWG,OAAOC,aAAa,IAAM,KACzE,MAAM,IAAIH,MAAM,yBAGxB,MAAOR,GACH,OAAOA,EAAMY,QAEjB,OAAO,KAEWC,GACf,MAAM,EACT,YAAYpB,GACRtF,OAAOC,eAAef,KAAM,UAAW,CACnCgB,YAAY,EACZK,MAAO+E,EACPqB,UAAU,IAGlB,YAAYC,GACR,IAAIC,EAAQpB,EAAUmB,GACT,MAATC,EAIJd,EAAWc,EAHP3H,KAAK0G,KAAK,uBAAyBgB,GAK3C,KAAKA,EAAUjF,GACPoE,EAAWN,EAAUmB,IAGzBE,QAAQC,IAAIhF,MAAM+E,QAASnF,GAE/B,SAASA,GACLzC,KAAK8H,KAAK,EAAOC,OAAOC,MAAOvF,GAEnC,QAAQA,GACJzC,KAAK8H,KAAK,EAAOC,OAAOE,KAAMxF,GAElC,QAAQA,GACJzC,KAAK8H,KAAK,EAAOC,OAAOG,QAASzF,GAErC,UAAU8E,EAASY,EAAMC,GACrB,GAAI9B,EACA,OAAO,IAAIa,MAAM,iBAEhBgB,IACDA,EAAO,EAAOE,OAAOC,eAEpBF,IACDA,EAAS,IAEb,IAAIG,EAAiB,GACrBzH,OAAO0H,KAAKJ,GAAQ5C,QAAS7D,IACzB,IACI4G,EAAe9E,KAAK9B,EAAM,IAAM8G,KAAKC,UAAUN,EAAOzG,KAE1D,MAAOgF,GACH4B,EAAe9E,KAAK9B,EAAM,IAAM8G,KAAKC,UAAUN,EAAOzG,GAAKgH,gBAGnEJ,EAAe9E,KAAK,WAAazD,KAAKoG,SACtC,IAAIwC,EAASrB,EACTgB,EAAevF,SACfuE,GAAW,KAAOgB,EAAenB,KAAK,MAAQ,KAGlD,IAAIT,EAAQ,IAAIQ,MAAMI,GAMtB,OALAZ,EAAMiC,OAASA,EACfjC,EAAMwB,KAAOA,EACbrH,OAAO0H,KAAKJ,GAAQ5C,SAAQ,SAAU7D,GAClCgF,EAAMhF,GAAOyG,EAAOzG,MAEjBgF,EAEX,WAAWY,EAASY,EAAMC,GACtB,MAAMpI,KAAK6I,UAAUtB,EAASY,EAAMC,GAExC,mBAAmBb,EAAS5G,EAAMU,GAC9B,OAAOrB,KAAK8I,WAAWvB,EAAS,EAAOc,OAAOU,iBAAkB,CAC5DC,SAAUrI,EACVU,MAAOA,IAGf,eAAekG,GACI,MAAXA,IACAA,EAAU,+CAEVR,GACA/G,KAAK8I,WAAW,8CAA+C,EAAOT,OAAOY,sBAAuB,CAChGC,UAAW,6BAA8BjC,KAAMF,IAI3D,gBAAgB1F,EAAOkG,GACI,iBAAZ,IAGI,MAAXA,IACAA,EAAU,mBAEVlG,EAAQ,GAAKA,GAAS,mBACtBrB,KAAK8I,WAAWvB,EAAS,EAAOc,OAAOc,cAAe,CAClDD,UAAW,mBACXE,MAAO,oBACP/H,MAAOA,IAGXA,EAAQ,GACRrB,KAAK8I,WAAWvB,EAAS,EAAOc,OAAOc,cAAe,CAClDD,UAAW,mBACXE,MAAO,cACP/H,MAAOA,KAInB,mBAAmBgI,EAAOC,EAAe/B,GAEjCA,EADAA,EACU,KAAOA,EAGP,GAEV8B,EAAQC,GACRtJ,KAAK8I,WAAW,mBAAqBvB,EAAS,EAAOc,OAAOkB,iBAAkB,CAC1EF,MAAOA,EACPC,cAAeA,IAGnBD,EAAQC,GACRtJ,KAAK8I,WAAW,qBAAuBvB,EAAS,EAAOc,OAAOmB,oBAAqB,CAC/EH,MAAOA,EACPC,cAAeA,IAI3B,SAASG,EAAQC,GACTD,IAAW3I,QAAoB,MAAV2I,GACrBzJ,KAAK8I,WAAW,cAAe,EAAOT,OAAOsB,YAAa,CAAEhJ,KAAM+I,EAAK/I,OAG/E,cAAc8I,EAAQC,GACdD,IAAWC,EACX1J,KAAK8I,WAAW,qCAAuCL,KAAKC,UAAUgB,EAAK/I,MAAQ,6BAA8B,EAAO0H,OAAOY,sBAAuB,CAAEtI,KAAM8I,EAAO9I,KAAMuI,UAAW,QAEjLO,IAAW3I,QAAoB,MAAV2I,GAC1BzJ,KAAK8I,WAAW,cAAe,EAAOT,OAAOsB,YAAa,CAAEhJ,KAAM+I,EAAK/I,OAG/E,sBAII,OAHKmG,IACDA,EAAgB,IAAI,EAAOV,IAExBU,EAEX,qBAAqB8C,EAAYC,GAC7B,GAAIxD,EAAwB,CACxB,IAAKuD,EACD,OAEJ5J,KAAK8J,eAAehB,WAAW,6BAA8B,EAAOT,OAAOY,sBAAuB,CAC9FC,UAAW,kBAGnB5C,IAAkBsD,EAClBvD,IAA2BwD,GAGnC,EAAOxB,OAAS,CAIZC,cAAe,gBAEfyB,gBAAiB,kBAGjBd,sBAAuB,wBAEvBe,cAAe,gBAEfC,aAAc,eAEdC,QAAS,UAITC,eAAgB,iBAIhBhB,cAAe,gBAKfQ,YAAa,cAIbZ,iBAAkB,mBAIlBQ,iBAAkB,mBAIlBC,oBAAqB,sBAWrBY,eAAgB,iBAGhBC,mBAAoB,qBAGpBC,cAAe,gBAGfC,wBAAyB,0BAGzBC,wBAAyB,2BAE7B,EAAOzC,OAAS,CACZC,MAAO,QACPC,KAAM,OACNC,QAAS,UACTuC,MAAO,QACPC,IAAK,Q,sDCtQF,MAAMtE,EAAU,2BCYjBhE,EAAS,IAAI,IAAOgE,GACpBuE,EAAoB,GACpBC,EAAW,iBASV,MAAM,EACT,YAAYC,EAAkBhH,GAC1BzB,EAAO0I,oBAAqB,GACxBD,IAAqBF,GACrBvI,EAAO0G,WAAW,sDAAuD,IAAOT,OAAOY,sBAAuB,CAC1GC,UAAW,oBAGnBlJ,KAAK+K,KAAOlH,EACZ7D,KAAKgL,cAAe,EACpBlK,OAAOmK,OAAOjL,MAElB,SAASqB,GACL,OAAO6J,EAAYC,EAAKnL,MAAMoL,SAAS/J,IAE3C,OAAOA,GACH,OAAO6J,EAAYC,EAAKnL,MAAMqL,OAAOhK,IAEzC,MACI,MAAqB,MAAjBrB,KAAK+K,KAAK,GACH,EAAUO,KAAKtL,KAAK+K,KAAKpH,UAAU,IAEvC3D,KAEX,IAAIuL,GACA,OAAOL,EAAYC,EAAKnL,MAAMwL,IAAIL,EAAKI,KAE3C,IAAIA,GACA,OAAOL,EAAYC,EAAKnL,MAAMyL,IAAIN,EAAKI,KAE3C,IAAIA,GAKA,OAJQ,EAAUD,KAAKC,GACjBG,UACFC,EAAW,mBAAoB,OAE5BT,EAAYC,EAAKnL,MAAM4L,IAAIT,EAAKI,KAE3C,IAAIA,GACA,OAAOL,EAAYC,EAAKnL,MAAM6L,IAAIV,EAAKI,KAE3C,IAAIA,GACA,OAAOL,EAAYC,EAAKnL,MAAM8L,IAAIX,EAAKI,KAE3C,IAAIA,GACA,OAAOL,EAAYC,EAAKnL,MAAM+L,IAAIZ,EAAKI,KAE3C,MAAMlK,GACF,OAAO6J,EAAYC,EAAKnL,MAAMgM,MAAM3K,IAExC,GAAGkK,GACC,OAAOJ,EAAKnL,MAAMiM,GAAGd,EAAKI,IAE9B,GAAGA,GACC,OAAOJ,EAAKnL,MAAMkM,GAAGf,EAAKI,IAE9B,IAAIA,GACA,OAAOJ,EAAKnL,MAAMmM,IAAIhB,EAAKI,IAE/B,GAAGA,GACC,OAAOJ,EAAKnL,MAAMoM,GAAGjB,EAAKI,IAE9B,IAAIA,GACA,OAAOJ,EAAKnL,MAAMqM,IAAIlB,EAAKI,IAE/B,SACI,OAAOJ,EAAKnL,MAAM0L,SAEtB,WACI,IACI,OAAOP,EAAKnL,MAAMsM,WAEtB,MAAO3F,GACHgF,EAAW,WAAY,WAAY3L,KAAK2I,YAE5C,OAAO,KAEX,WAKI,OAHyB,IAArBhG,UAAUK,QACVZ,EAAO0G,WAAW,gDAAiD,IAAOT,OAAOmB,oBAAqB,IAEnG2B,EAAKnL,MAAM2I,SAAS,IAE/B,cACI,OAAO3I,KAAK+K,KAEhB,YAAY1J,GACR,OAAIA,aAAiB,EACVA,EAEY,iBAAZ,EACHA,EAAMwD,MAAM,kBACL,IAAI,EAAU8F,EAAmB4B,EAAMlL,IAE9CA,EAAMwD,MAAM,cACL,IAAI,EAAU8F,EAAmB4B,EAAM,IAAI,KAAGlL,KAElDe,EAAO2B,mBAAmB,2BAA4B,QAAS1C,GAEnD,iBAAZ,GACHA,EAAQ,GACRsK,EAAW,YAAa,iBAAkBtK,IAE1CA,GAASuJ,GAAYvJ,IAAUuJ,IAC/Be,EAAW,WAAY,iBAAkBtK,GAEtC,EAAUiK,KAAKjE,OAAOhG,KAEV,iBAAZ,EACA,EAAUiK,KAAKjK,EAAMsH,YAE5B,kBAAQtH,GACD,EAAUiK,KAAK,kBAAQjK,IAE9BA,EAAM0J,MAAQ,sBAAY1J,EAAM0J,MACzB,EAAUO,KAAKjK,EAAM0J,MAE5B1J,EAAMuC,aAEiB,iBADvBvC,EAAQA,EAAMuC,eAEH,EAAU0H,KAAKjK,GAGvBe,EAAO2B,mBAAmB,0BAA2B,QAAS1C,GAEzE,mBAAmBA,GACf,SAAUA,IAASA,EAAM2J,eAIjC,SAASuB,EAAMlL,GAEX,GAAuB,iBAAZ,EACP,OAAOkL,EAAMlL,EAAMsH,SAAS,KAGhC,GAAiB,MAAbtH,EAAM,GAUN,MANiB,OAFjBA,EAAQA,EAAMsC,UAAU,IAEd,IACNvB,EAAO2B,mBAAmB,cAAe,QAAS1C,GAKxC,UAFdA,EAAQkL,EAAMlL,IAGHA,EAGJ,IAAMA,EAOjB,GAJ8B,OAA1BA,EAAMsC,UAAU,EAAG,KACnBtC,EAAQ,KAAOA,GAGL,OAAVA,EACA,MAAO,OAOX,IAJIA,EAAM2B,OAAS,IACf3B,EAAQ,MAAQA,EAAMsC,UAAU,IAG7BtC,EAAM2B,OAAS,GAA+B,SAA1B3B,EAAMsC,UAAU,EAAG,IAC1CtC,EAAQ,KAAOA,EAAMsC,UAAU,GAEnC,OAAOtC,EAEX,SAAS6J,EAAY7J,GACjB,OAAO,EAAUiK,KAAKiB,EAAMlL,IAEhC,SAAS8J,EAAK9J,GACV,IAAIwC,EAAM,EAAUyH,KAAKjK,GAAOuC,cAChC,MAAe,MAAXC,EAAI,GACG,IAAK,KAAG,IAAMA,EAAIF,UAAU,GAAI,IAEpC,IAAI,KAAGE,EAAIF,UAAU,GAAI,IAEpC,SAASgI,EAAWvC,EAAOF,EAAW7H,GAClC,IAAI+G,EAAS,CAAEgB,MAAOA,EAAOF,UAAWA,GAIxC,OAHa,MAAT7H,IACA+G,EAAO/G,MAAQA,GAEZe,EAAO0G,WAAWM,EAAO,IAAOf,OAAOc,cAAef,GC5MlD,IAAI,IAAOhC,GAGb,EAAUkF,KAAK,GACR,EAAUA,MAAM,GASpC,IAAIkB,EAAQ,IACZ,KAAOA,EAAMxJ,OAAS,KAClBwJ,GAASA,ECnBb,mC,iBCAA,2BACE,aAGA,SAASC,EAAQC,EAAKC,GACpB,IAAKD,EAAK,MAAM,IAAIvF,MAAMwF,GAAO,oBAKnC,SAASC,EAAUC,EAAMC,GACvBD,EAAKE,OAASD,EACd,IAAIE,EAAW,aACfA,EAAShL,UAAY8K,EAAU9K,UAC/B6K,EAAK7K,UAAY,IAAIgL,EACrBH,EAAK7K,UAAUkB,YAAc2J,EAK/B,SAASI,EAAIC,EAAQC,EAAMC,GACzB,GAAIH,EAAGI,KAAKH,GACV,OAAOA,EAGTlN,KAAKsN,SAAW,EAChBtN,KAAKuN,MAAQ,KACbvN,KAAKgD,OAAS,EAGdhD,KAAKwN,IAAM,KAEI,OAAXN,IACW,OAATC,GAA0B,OAATA,IACnBC,EAASD,EACTA,EAAO,IAGTnN,KAAKyN,MAAMP,GAAU,EAAGC,GAAQ,GAAIC,GAAU,OAYlD,IAAIM,EATkB,iBAAX7N,EACTA,EAAOD,QAAUqN,EAEjBrN,EAAQqN,GAAKA,EAGfA,EAAGA,GAAKA,EACRA,EAAGU,SAAW,GAGd,IACED,EAAS,EAAQ,IAAUA,OAC3B,MAAOE,IAoIT,SAASC,EAAUC,EAAKnJ,EAAOoJ,GAG7B,IAFA,IAAI7M,EAAI,EACJ8M,EAAMhJ,KAAKiJ,IAAIH,EAAI9K,OAAQ+K,GACtB3N,EAAIuE,EAAOvE,EAAI4N,EAAK5N,IAAK,CAChC,IAAIK,EAAIqN,EAAII,WAAW9N,GAAK,GAE5Bc,IAAM,EAIJA,GADET,GAAK,IAAMA,GAAK,GACbA,EAAI,GAAK,GAGLA,GAAK,IAAMA,GAAK,GACpBA,EAAI,GAAK,GAIL,GAAJA,EAGT,OAAOS,EAiCT,SAASiN,EAAWL,EAAKnJ,EAAOoJ,EAAKlC,GAGnC,IAFA,IAAI3K,EAAI,EACJ8M,EAAMhJ,KAAKiJ,IAAIH,EAAI9K,OAAQ+K,GACtB3N,EAAIuE,EAAOvE,EAAI4N,EAAK5N,IAAK,CAChC,IAAIK,EAAIqN,EAAII,WAAW9N,GAAK,GAE5Bc,GAAK2K,EAIH3K,GADET,GAAK,GACFA,EAAI,GAAK,GAGLA,GAAK,GACTA,EAAI,GAAK,GAITA,EAGT,OAAOS,EA5MT+L,EAAGI,KAAO,SAAee,GACvB,OAAIA,aAAenB,GAIJ,OAARmB,GAA+B,iBAARA,GAC5BA,EAAIlL,YAAYyK,WAAaV,EAAGU,UAAYjL,MAAM2L,QAAQD,EAAIb,QAGlEN,EAAGqB,IAAM,SAAcC,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTvB,EAAGgB,IAAM,SAAcM,EAAMC,GAC3B,OAAID,EAAKE,IAAID,GAAS,EAAUD,EACzBC,GAGTvB,EAAGjL,UAAUyL,MAAQ,SAAeP,EAAQC,EAAMC,GAChD,GAAsB,iBAAXF,EACT,OAAOlN,KAAK0O,YAAYxB,EAAQC,EAAMC,GAGxC,GAAsB,iBAAXF,EACT,OAAOlN,KAAK2O,WAAWzB,EAAQC,EAAMC,GAG1B,QAATD,IACFA,EAAO,IAETV,EAAOU,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,IAGnD,IAAIxI,EAAQ,EACM,OAFlBuI,EAASA,EAAOvE,WAAWiG,QAAQ,OAAQ,KAEhC,IACTjK,IAGW,KAATwI,EACFnN,KAAK6O,UAAU3B,EAAQvI,GAEvB3E,KAAK8O,WAAW5B,EAAQC,EAAMxI,GAGd,MAAduI,EAAO,KACTlN,KAAKsN,SAAW,GAGlBtN,KAAK+O,QAEU,OAAX3B,GAEJpN,KAAK2O,WAAW3O,KAAKgP,UAAW7B,EAAMC,IAGxCH,EAAGjL,UAAU0M,YAAc,SAAsBxB,EAAQC,EAAMC,GACzDF,EAAS,IACXlN,KAAKsN,SAAW,EAChBJ,GAAUA,GAERA,EAAS,UACXlN,KAAKuN,MAAQ,CAAW,SAATL,GACflN,KAAKgD,OAAS,GACLkK,EAAS,kBAClBlN,KAAKuN,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,UAEzBlN,KAAKgD,OAAS,IAEdyJ,EAAOS,EAAS,kBAChBlN,KAAKuN,MAAQ,CACF,SAATL,EACCA,EAAS,SAAa,SACvB,GAEFlN,KAAKgD,OAAS,GAGD,OAAXoK,GAGJpN,KAAK2O,WAAW3O,KAAKgP,UAAW7B,EAAMC,IAGxCH,EAAGjL,UAAU2M,WAAa,SAAqBzB,EAAQC,EAAMC,GAG3D,GADAX,EAAgC,iBAAlBS,EAAOlK,QACjBkK,EAAOlK,QAAU,EAGnB,OAFAhD,KAAKuN,MAAQ,CAAE,GACfvN,KAAKgD,OAAS,EACPhD,KAGTA,KAAKgD,OAASgC,KAAKiK,KAAK/B,EAAOlK,OAAS,GACxChD,KAAKuN,MAAQ,IAAI7K,MAAM1C,KAAKgD,QAC5B,IAAK,IAAI5C,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAC/BJ,KAAKuN,MAAMnN,GAAK,EAGlB,IAAI8O,EAAGC,EACHvI,EAAM,EACV,GAAe,OAAXwG,EACF,IAAKhN,EAAI8M,EAAOlK,OAAS,EAAGkM,EAAI,EAAG9O,GAAK,EAAGA,GAAK,EAC9C+O,EAAIjC,EAAO9M,GAAM8M,EAAO9M,EAAI,IAAM,EAAM8M,EAAO9M,EAAI,IAAM,GACzDJ,KAAKuN,MAAM2B,IAAOC,GAAKvI,EAAO,SAC9B5G,KAAKuN,MAAM2B,EAAI,GAAMC,IAAO,GAAKvI,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPsI,UAGC,GAAe,OAAX9B,EACT,IAAKhN,EAAI,EAAG8O,EAAI,EAAG9O,EAAI8M,EAAOlK,OAAQ5C,GAAK,EACzC+O,EAAIjC,EAAO9M,GAAM8M,EAAO9M,EAAI,IAAM,EAAM8M,EAAO9M,EAAI,IAAM,GACzDJ,KAAKuN,MAAM2B,IAAOC,GAAKvI,EAAO,SAC9B5G,KAAKuN,MAAM2B,EAAI,GAAMC,IAAO,GAAKvI,EAAQ,UACzCA,GAAO,KACI,KACTA,GAAO,GACPsI,KAIN,OAAOlP,KAAK+O,SA2Bd9B,EAAGjL,UAAU6M,UAAY,SAAoB3B,EAAQvI,GAEnD3E,KAAKgD,OAASgC,KAAKiK,MAAM/B,EAAOlK,OAAS2B,GAAS,GAClD3E,KAAKuN,MAAQ,IAAI7K,MAAM1C,KAAKgD,QAC5B,IAAK,IAAI5C,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAC/BJ,KAAKuN,MAAMnN,GAAK,EAGlB,IAAI8O,EAAGC,EAEHvI,EAAM,EACV,IAAKxG,EAAI8M,EAAOlK,OAAS,EAAGkM,EAAI,EAAG9O,GAAKuE,EAAOvE,GAAK,EAClD+O,EAAItB,EAASX,EAAQ9M,EAAGA,EAAI,GAC5BJ,KAAKuN,MAAM2B,IAAOC,GAAKvI,EAAO,SAE9B5G,KAAKuN,MAAM2B,EAAI,IAAMC,IAAO,GAAKvI,EAAO,SACxCA,GAAO,KACI,KACTA,GAAO,GACPsI,KAGA9O,EAAI,IAAMuE,IACZwK,EAAItB,EAASX,EAAQvI,EAAOvE,EAAI,GAChCJ,KAAKuN,MAAM2B,IAAOC,GAAKvI,EAAO,SAC9B5G,KAAKuN,MAAM2B,EAAI,IAAMC,IAAO,GAAKvI,EAAO,SAE1C5G,KAAK+O,SA2BP9B,EAAGjL,UAAU8M,WAAa,SAAqB5B,EAAQC,EAAMxI,GAE3D3E,KAAKuN,MAAQ,CAAE,GACfvN,KAAKgD,OAAS,EAGd,IAAK,IAAIoM,EAAU,EAAGC,EAAU,EAAGA,GAAW,SAAWA,GAAWlC,EAClEiC,IAEFA,IACAC,EAAWA,EAAUlC,EAAQ,EAO7B,IALA,IAAImC,EAAQpC,EAAOlK,OAAS2B,EACxBmH,EAAMwD,EAAQF,EACdrB,EAAM/I,KAAKiJ,IAAIqB,EAAOA,EAAQxD,GAAOnH,EAErC4K,EAAO,EACFnP,EAAIuE,EAAOvE,EAAI2N,EAAK3N,GAAKgP,EAChCG,EAAOpB,EAAUjB,EAAQ9M,EAAGA,EAAIgP,EAASjC,GAEzCnN,KAAKwP,MAAMH,GACPrP,KAAKuN,MAAM,GAAKgC,EAAO,SACzBvP,KAAKuN,MAAM,IAAMgC,EAEjBvP,KAAKyP,OAAOF,GAIhB,GAAY,IAARzD,EAAW,CACb,IAAIC,EAAM,EAGV,IAFAwD,EAAOpB,EAAUjB,EAAQ9M,EAAG8M,EAAOlK,OAAQmK,GAEtC/M,EAAI,EAAGA,EAAI0L,EAAK1L,IACnB2L,GAAOoB,EAGTnN,KAAKwP,MAAMzD,GACP/L,KAAKuN,MAAM,GAAKgC,EAAO,SACzBvP,KAAKuN,MAAM,IAAMgC,EAEjBvP,KAAKyP,OAAOF,KAKlBtC,EAAGjL,UAAU0N,KAAO,SAAeC,GACjCA,EAAKpC,MAAQ,IAAI7K,MAAM1C,KAAKgD,QAC5B,IAAK,IAAI5C,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAC/BuP,EAAKpC,MAAMnN,GAAKJ,KAAKuN,MAAMnN,GAE7BuP,EAAK3M,OAAShD,KAAKgD,OACnB2M,EAAKrC,SAAWtN,KAAKsN,SACrBqC,EAAKnC,IAAMxN,KAAKwN,KAGlBP,EAAGjL,UAAU4N,MAAQ,WACnB,IAAI1O,EAAI,IAAI+L,EAAG,MAEf,OADAjN,KAAK0P,KAAKxO,GACHA,GAGT+L,EAAGjL,UAAU6N,QAAU,SAAkBC,GACvC,KAAO9P,KAAKgD,OAAS8M,GACnB9P,KAAKuN,MAAMvN,KAAKgD,UAAY,EAE9B,OAAOhD,MAITiN,EAAGjL,UAAU+M,MAAQ,WACnB,KAAO/O,KAAKgD,OAAS,GAAqC,IAAhChD,KAAKuN,MAAMvN,KAAKgD,OAAS,IACjDhD,KAAKgD,SAEP,OAAOhD,KAAK+P,aAGd9C,EAAGjL,UAAU+N,UAAY,WAKvB,OAHoB,IAAhB/P,KAAKgD,QAAkC,IAAlBhD,KAAKuN,MAAM,KAClCvN,KAAKsN,SAAW,GAEXtN,MAGTiN,EAAGjL,UAAUgO,QAAU,WACrB,OAAQhQ,KAAKwN,IAAM,UAAY,SAAWxN,KAAK2I,SAAS,IAAM,KAiChE,IAAI6D,EAAQ,CACV,GACA,IACA,KACA,MACA,OACA,QACA,SACA,UACA,WACA,YACA,aACA,cACA,eACA,gBACA,iBACA,kBACA,mBACA,oBACA,qBACA,sBACA,uBACA,wBACA,yBACA,0BACA,2BACA,6BAGEyD,EAAa,CACf,EAAG,EACH,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EACvB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGhBC,EAAa,CACf,EAAG,EACH,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAC5D,SAAU,IAAU,SAAU,SAAU,SAAU,QAAS,SAC3D,SAAU,SAAU,SAAU,SAAU,KAAU,QAAS,QAC3D,QAAS,QAAS,QAAS,SAAU,SAAU,SAAU,SACzD,MAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAsjB9D,SAASC,EAAYC,EAAMhC,EAAKiC,GAC9BA,EAAI/C,SAAWc,EAAId,SAAW8C,EAAK9C,SACnC,IAAIU,EAAOoC,EAAKpN,OAASoL,EAAIpL,OAAU,EACvCqN,EAAIrN,OAASgL,EACbA,EAAOA,EAAM,EAAK,EAGlB,IAAIsC,EAAoB,EAAhBF,EAAK7C,MAAM,GACfgD,EAAmB,EAAfnC,EAAIb,MAAM,GACdrM,EAAIoP,EAAIC,EAERC,EAAS,SAAJtP,EACLuP,EAASvP,EAAI,SAAa,EAC9BmP,EAAI9C,MAAM,GAAKiD,EAEf,IAAK,IAAIE,EAAI,EAAGA,EAAI1C,EAAK0C,IAAK,CAM5B,IAHA,IAAIC,EAASF,IAAU,GACnBG,EAAgB,SAARH,EACRI,EAAO7L,KAAKiJ,IAAIyC,EAAGtC,EAAIpL,OAAS,GAC3BkM,EAAIlK,KAAKsJ,IAAI,EAAGoC,EAAIN,EAAKpN,OAAS,GAAIkM,GAAK2B,EAAM3B,IAAK,CAC7D,IAAI9O,EAAKsQ,EAAIxB,EAAK,EAIlByB,IADAzP,GAFAoP,EAAoB,EAAhBF,EAAK7C,MAAMnN,KACfmQ,EAAmB,EAAfnC,EAAIb,MAAM2B,IACF0B,GACG,SAAa,EAC5BA,EAAY,SAAJ1P,EAEVmP,EAAI9C,MAAMmD,GAAa,EAARE,EACfH,EAAiB,EAATE,EAQV,OANc,IAAVF,EACFJ,EAAI9C,MAAMmD,GAAa,EAARD,EAEfJ,EAAIrN,SAGCqN,EAAItB,QAzlBb9B,EAAGjL,UAAU2G,SAAW,SAAmBwE,EAAM2D,GAI/C,IAAIT,EACJ,GAHAS,EAAoB,EAAVA,GAAe,EAGZ,MAJb3D,EAAOA,GAAQ,KAIa,QAATA,EAAgB,CACjCkD,EAAM,GAGN,IAFA,IAAIzJ,EAAM,EACN6J,EAAQ,EACHrQ,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAAK,CACpC,IAAI+O,EAAInP,KAAKuN,MAAMnN,GACfmP,GAA+B,UAArBJ,GAAKvI,EAAO6J,IAAmB9H,SAAS,IAGpD0H,EADY,KADdI,EAAStB,IAAO,GAAKvI,EAAQ,WACVxG,IAAMJ,KAAKgD,OAAS,EAC/BwJ,EAAM,EAAI+C,EAAKvM,QAAUuM,EAAOc,EAEhCd,EAAOc,GAEfzJ,GAAO,IACI,KACTA,GAAO,GACPxG,KAMJ,IAHc,IAAVqQ,IACFJ,EAAMI,EAAM9H,SAAS,IAAM0H,GAEtBA,EAAIrN,OAAS8N,GAAY,GAC9BT,EAAM,IAAMA,EAKd,OAHsB,IAAlBrQ,KAAKsN,WACP+C,EAAM,IAAMA,GAEPA,EAGT,GAAIlD,KAAiB,EAAPA,IAAaA,GAAQ,GAAKA,GAAQ,GAAI,CAElD,IAAI4D,EAAYd,EAAW9C,GAEvB6D,EAAYd,EAAW/C,GAC3BkD,EAAM,GACN,IAAI5P,EAAIT,KAAK4P,QAEb,IADAnP,EAAE6M,SAAW,GACL7M,EAAEiL,UAAU,CAClB,IAAIxK,EAAIT,EAAEwQ,KAAKD,GAAWrI,SAASwE,GAMjCkD,GALF5P,EAAIA,EAAEyQ,MAAMF,IAELtF,SAGCxK,EAAImP,EAFJ7D,EAAMuE,EAAY7P,EAAE8B,QAAU9B,EAAImP,EAQ5C,IAHIrQ,KAAK0L,WACP2E,EAAM,IAAMA,GAEPA,EAAIrN,OAAS8N,GAAY,GAC9BT,EAAM,IAAMA,EAKd,OAHsB,IAAlBrQ,KAAKsN,WACP+C,EAAM,IAAMA,GAEPA,EAGT5D,GAAO,EAAO,oCAGhBQ,EAAGjL,UAAUsK,SAAW,WACtB,IAAI6E,EAAMnR,KAAKuN,MAAM,GASrB,OARoB,IAAhBvN,KAAKgD,OACPmO,GAAuB,SAAhBnR,KAAKuN,MAAM,GACO,IAAhBvN,KAAKgD,QAAkC,IAAlBhD,KAAKuN,MAAM,GAEzC4D,GAAO,iBAAoC,SAAhBnR,KAAKuN,MAAM,GAC7BvN,KAAKgD,OAAS,GACvByJ,GAAO,EAAO,8CAEU,IAAlBzM,KAAKsN,UAAmB6D,EAAMA,GAGxClE,EAAGjL,UAAUoP,OAAS,WACpB,OAAOpR,KAAK2I,SAAS,KAGvBsE,EAAGjL,UAAUqP,SAAW,SAAmBjE,EAAQpK,GAEjD,OADAyJ,OAAyB,IAAXiB,GACP1N,KAAKsR,YAAY5D,EAAQN,EAAQpK,IAG1CiK,EAAGjL,UAAUgN,QAAU,SAAkB5B,EAAQpK,GAC/C,OAAOhD,KAAKsR,YAAY5O,MAAO0K,EAAQpK,IAGzCiK,EAAGjL,UAAUsP,YAAc,SAAsBC,EAAWnE,EAAQpK,GAClE,IAAIwO,EAAaxR,KAAKwR,aAClBC,EAAYzO,GAAUgC,KAAKsJ,IAAI,EAAGkD,GACtC/E,EAAO+E,GAAcC,EAAW,yCAChChF,EAAOgF,EAAY,EAAG,+BAEtBzR,KAAK+O,QACL,IAGIwB,EAAGnQ,EAHHsR,EAA0B,OAAXtE,EACfuE,EAAM,IAAIJ,EAAUE,GAGpBG,EAAI5R,KAAK4P,QACb,GAAK8B,EAYE,CACL,IAAKtR,EAAI,GAAIwR,EAAElG,SAAUtL,IACvBmQ,EAAIqB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIvR,GAAKmQ,EAGX,KAAOnQ,EAAIqR,EAAWrR,IACpBuR,EAAIvR,GAAK,MArBM,CAEjB,IAAKA,EAAI,EAAGA,EAAIqR,EAAYD,EAAYpR,IACtCuR,EAAIvR,GAAK,EAGX,IAAKA,EAAI,GAAIwR,EAAElG,SAAUtL,IACvBmQ,EAAIqB,EAAEC,MAAM,KACZD,EAAEE,OAAO,GAETH,EAAIF,EAAYrR,EAAI,GAAKmQ,EAe7B,OAAOoB,GAGL3M,KAAK+M,MACP9E,EAAGjL,UAAUgQ,WAAa,SAAqB7C,GAC7C,OAAO,GAAKnK,KAAK+M,MAAM5C,IAGzBlC,EAAGjL,UAAUgQ,WAAa,SAAqB7C,GAC7C,IAAI7N,EAAI6N,EACJjO,EAAI,EAiBR,OAhBII,GAAK,OACPJ,GAAK,GACLI,KAAO,IAELA,GAAK,KACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAELA,GAAK,IACPJ,GAAK,EACLI,KAAO,GAEFJ,EAAII,GAIf2L,EAAGjL,UAAUiQ,UAAY,SAAoB9C,GAE3C,GAAU,IAANA,EAAS,OAAO,GAEpB,IAAI7N,EAAI6N,EACJjO,EAAI,EAoBR,OAnBqB,IAAZ,KAAJI,KACHJ,GAAK,GACLI,KAAO,IAEU,IAAV,IAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,GAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,KACHJ,GAAK,EACLI,KAAO,GAES,IAAT,EAAJA,IACHJ,IAEKA,GAIT+L,EAAGjL,UAAUkQ,UAAY,WACvB,IAAI/C,EAAInP,KAAKuN,MAAMvN,KAAKgD,OAAS,GAC7BmP,EAAKnS,KAAKgS,WAAW7C,GACzB,OAA2B,IAAnBnP,KAAKgD,OAAS,GAAUmP,GAiBlClF,EAAGjL,UAAUoQ,SAAW,WACtB,GAAIpS,KAAK0L,SAAU,OAAO,EAG1B,IADA,IAAIxK,EAAI,EACCd,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAAK,CACpC,IAAImQ,EAAIvQ,KAAKiS,UAAUjS,KAAKuN,MAAMnN,IAElC,GADAc,GAAKqP,EACK,KAANA,EAAU,MAEhB,OAAOrP,GAGT+L,EAAGjL,UAAUwP,WAAa,WACxB,OAAOxM,KAAKiK,KAAKjP,KAAKkS,YAAc,IAGtCjF,EAAGjL,UAAUqJ,OAAS,SAAiBgH,GACrC,OAAsB,IAAlBrS,KAAKsN,SACAtN,KAAKsS,MAAMC,MAAMF,GAAOG,MAAM,GAEhCxS,KAAK4P,SAGd3C,EAAGjL,UAAUoJ,SAAW,SAAmBiH,GACzC,OAAIrS,KAAKyS,MAAMJ,EAAQ,GACdrS,KAAK0S,KAAKL,GAAOG,MAAM,GAAGG,OAE5B3S,KAAK4P,SAGd3C,EAAGjL,UAAU4Q,MAAQ,WACnB,OAAyB,IAAlB5S,KAAKsN,UAIdL,EAAGjL,UAAU6Q,IAAM,WACjB,OAAO7S,KAAK4P,QAAQ+C,QAGtB1F,EAAGjL,UAAU2Q,KAAO,WAKlB,OAJK3S,KAAK0L,WACR1L,KAAKsN,UAAY,GAGZtN,MAITiN,EAAGjL,UAAU8Q,KAAO,SAAe1E,GACjC,KAAOpO,KAAKgD,OAASoL,EAAIpL,QACvBhD,KAAKuN,MAAMvN,KAAKgD,UAAY,EAG9B,IAAK,IAAI5C,EAAI,EAAGA,EAAIgO,EAAIpL,OAAQ5C,IAC9BJ,KAAKuN,MAAMnN,GAAKJ,KAAKuN,MAAMnN,GAAKgO,EAAIb,MAAMnN,GAG5C,OAAOJ,KAAK+O,SAGd9B,EAAGjL,UAAU+Q,IAAM,SAAc3E,GAE/B,OADA3B,EAA0C,IAAlCzM,KAAKsN,SAAWc,EAAId,WACrBtN,KAAK8S,KAAK1E,IAInBnB,EAAGjL,UAAUgR,GAAK,SAAa5E,GAC7B,OAAIpO,KAAKgD,OAASoL,EAAIpL,OAAehD,KAAK4P,QAAQmD,IAAI3E,GAC/CA,EAAIwB,QAAQmD,IAAI/S,OAGzBiN,EAAGjL,UAAUiR,IAAM,SAAc7E,GAC/B,OAAIpO,KAAKgD,OAASoL,EAAIpL,OAAehD,KAAK4P,QAAQkD,KAAK1E,GAChDA,EAAIwB,QAAQkD,KAAK9S,OAI1BiN,EAAGjL,UAAUkR,MAAQ,SAAgB9E,GAEnC,IAAImC,EAEFA,EADEvQ,KAAKgD,OAASoL,EAAIpL,OAChBoL,EAEApO,KAGN,IAAK,IAAII,EAAI,EAAGA,EAAImQ,EAAEvN,OAAQ5C,IAC5BJ,KAAKuN,MAAMnN,GAAKJ,KAAKuN,MAAMnN,GAAKgO,EAAIb,MAAMnN,GAK5C,OAFAJ,KAAKgD,OAASuN,EAAEvN,OAEThD,KAAK+O,SAGd9B,EAAGjL,UAAUmR,KAAO,SAAe/E,GAEjC,OADA3B,EAA0C,IAAlCzM,KAAKsN,SAAWc,EAAId,WACrBtN,KAAKkT,MAAM9E,IAIpBnB,EAAGjL,UAAUoR,IAAM,SAAchF,GAC/B,OAAIpO,KAAKgD,OAASoL,EAAIpL,OAAehD,KAAK4P,QAAQuD,KAAK/E,GAChDA,EAAIwB,QAAQuD,KAAKnT,OAG1BiN,EAAGjL,UAAUqR,KAAO,SAAejF,GACjC,OAAIpO,KAAKgD,OAASoL,EAAIpL,OAAehD,KAAK4P,QAAQsD,MAAM9E,GACjDA,EAAIwB,QAAQsD,MAAMlT,OAI3BiN,EAAGjL,UAAUsR,MAAQ,SAAgBlF,GAEnC,IAAIkC,EACAC,EACAvQ,KAAKgD,OAASoL,EAAIpL,QACpBsN,EAAItQ,KACJuQ,EAAInC,IAEJkC,EAAIlC,EACJmC,EAAIvQ,MAGN,IAAK,IAAII,EAAI,EAAGA,EAAImQ,EAAEvN,OAAQ5C,IAC5BJ,KAAKuN,MAAMnN,GAAKkQ,EAAE/C,MAAMnN,GAAKmQ,EAAEhD,MAAMnN,GAGvC,GAAIJ,OAASsQ,EACX,KAAOlQ,EAAIkQ,EAAEtN,OAAQ5C,IACnBJ,KAAKuN,MAAMnN,GAAKkQ,EAAE/C,MAAMnN,GAM5B,OAFAJ,KAAKgD,OAASsN,EAAEtN,OAEThD,KAAK+O,SAGd9B,EAAGjL,UAAUuR,KAAO,SAAenF,GAEjC,OADA3B,EAA0C,IAAlCzM,KAAKsN,SAAWc,EAAId,WACrBtN,KAAKsT,MAAMlF,IAIpBnB,EAAGjL,UAAUwR,IAAM,SAAcpF,GAC/B,OAAIpO,KAAKgD,OAASoL,EAAIpL,OAAehD,KAAK4P,QAAQ2D,KAAKnF,GAChDA,EAAIwB,QAAQ2D,KAAKvT,OAG1BiN,EAAGjL,UAAUyR,KAAO,SAAerF,GACjC,OAAIpO,KAAKgD,OAASoL,EAAIpL,OAAehD,KAAK4P,QAAQ0D,MAAMlF,GACjDA,EAAIwB,QAAQ0D,MAAMtT,OAI3BiN,EAAGjL,UAAUuQ,MAAQ,SAAgBF,GACnC5F,EAAwB,iBAAV4F,GAAsBA,GAAS,GAE7C,IAAIqB,EAAsC,EAAxB1O,KAAKiK,KAAKoD,EAAQ,IAChCsB,EAAWtB,EAAQ,GAGvBrS,KAAK6P,QAAQ6D,GAETC,EAAW,GACbD,IAIF,IAAK,IAAItT,EAAI,EAAGA,EAAIsT,EAAatT,IAC/BJ,KAAKuN,MAAMnN,GAAsB,UAAhBJ,KAAKuN,MAAMnN,GAS9B,OALIuT,EAAW,IACb3T,KAAKuN,MAAMnN,IAAMJ,KAAKuN,MAAMnN,GAAM,UAAc,GAAKuT,GAIhD3T,KAAK+O,SAGd9B,EAAGjL,UAAU0Q,KAAO,SAAeL,GACjC,OAAOrS,KAAK4P,QAAQ2C,MAAMF,IAI5BpF,EAAGjL,UAAU4R,KAAO,SAAeC,EAAKnH,GACtCD,EAAsB,iBAARoH,GAAoBA,GAAO,GAEzC,IAAIjN,EAAOiN,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAUjB,OARA7T,KAAK6P,QAAQjJ,EAAM,GAGjB5G,KAAKuN,MAAM3G,GADT8F,EACgB1M,KAAKuN,MAAM3G,GAAQ,GAAKkN,EAExB9T,KAAKuN,MAAM3G,KAAS,GAAKkN,GAGtC9T,KAAK+O,SAId9B,EAAGjL,UAAU+R,KAAO,SAAe3F,GACjC,IAAIlN,EAkBAoP,EAAGC,EAfP,GAAsB,IAAlBvQ,KAAKsN,UAAmC,IAAjBc,EAAId,SAI7B,OAHAtN,KAAKsN,SAAW,EAChBpM,EAAIlB,KAAKgU,KAAK5F,GACdpO,KAAKsN,UAAY,EACVtN,KAAK+P,YAGP,GAAsB,IAAlB/P,KAAKsN,UAAmC,IAAjBc,EAAId,SAIpC,OAHAc,EAAId,SAAW,EACfpM,EAAIlB,KAAKgU,KAAK5F,GACdA,EAAId,SAAW,EACRpM,EAAE6O,YAKP/P,KAAKgD,OAASoL,EAAIpL,QACpBsN,EAAItQ,KACJuQ,EAAInC,IAEJkC,EAAIlC,EACJmC,EAAIvQ,MAIN,IADA,IAAIyQ,EAAQ,EACHrQ,EAAI,EAAGA,EAAImQ,EAAEvN,OAAQ5C,IAC5Bc,GAAkB,EAAboP,EAAE/C,MAAMnN,KAAwB,EAAbmQ,EAAEhD,MAAMnN,IAAUqQ,EAC1CzQ,KAAKuN,MAAMnN,GAAS,SAAJc,EAChBuP,EAAQvP,IAAM,GAEhB,KAAiB,IAAVuP,GAAerQ,EAAIkQ,EAAEtN,OAAQ5C,IAClCc,GAAkB,EAAboP,EAAE/C,MAAMnN,IAAUqQ,EACvBzQ,KAAKuN,MAAMnN,GAAS,SAAJc,EAChBuP,EAAQvP,IAAM,GAIhB,GADAlB,KAAKgD,OAASsN,EAAEtN,OACF,IAAVyN,EACFzQ,KAAKuN,MAAMvN,KAAKgD,QAAUyN,EAC1BzQ,KAAKgD,cAEA,GAAIsN,IAAMtQ,KACf,KAAOI,EAAIkQ,EAAEtN,OAAQ5C,IACnBJ,KAAKuN,MAAMnN,GAAKkQ,EAAE/C,MAAMnN,GAI5B,OAAOJ,MAITiN,EAAGjL,UAAUwJ,IAAM,SAAc4C,GAC/B,IAAIuD,EACJ,OAAqB,IAAjBvD,EAAId,UAAoC,IAAlBtN,KAAKsN,UAC7Bc,EAAId,SAAW,EACfqE,EAAM3R,KAAKyL,IAAI2C,GACfA,EAAId,UAAY,EACTqE,GACmB,IAAjBvD,EAAId,UAAoC,IAAlBtN,KAAKsN,UACpCtN,KAAKsN,SAAW,EAChBqE,EAAMvD,EAAI3C,IAAIzL,MACdA,KAAKsN,SAAW,EACTqE,GAGL3R,KAAKgD,OAASoL,EAAIpL,OAAehD,KAAK4P,QAAQmE,KAAK3F,GAEhDA,EAAIwB,QAAQmE,KAAK/T,OAI1BiN,EAAGjL,UAAUgS,KAAO,SAAe5F,GAEjC,GAAqB,IAAjBA,EAAId,SAAgB,CACtBc,EAAId,SAAW,EACf,IAAIpM,EAAIlB,KAAK+T,KAAK3F,GAElB,OADAA,EAAId,SAAW,EACRpM,EAAE6O,YAGJ,GAAsB,IAAlB/P,KAAKsN,SAId,OAHAtN,KAAKsN,SAAW,EAChBtN,KAAK+T,KAAK3F,GACVpO,KAAKsN,SAAW,EACTtN,KAAK+P,YAId,IAWIO,EAAGC,EAXH9B,EAAMzO,KAAKyO,IAAIL,GAGnB,GAAY,IAARK,EAIF,OAHAzO,KAAKsN,SAAW,EAChBtN,KAAKgD,OAAS,EACdhD,KAAKuN,MAAM,GAAK,EACTvN,KAKLyO,EAAM,GACR6B,EAAItQ,KACJuQ,EAAInC,IAEJkC,EAAIlC,EACJmC,EAAIvQ,MAIN,IADA,IAAIyQ,EAAQ,EACHrQ,EAAI,EAAGA,EAAImQ,EAAEvN,OAAQ5C,IAE5BqQ,GADAvP,GAAkB,EAAboP,EAAE/C,MAAMnN,KAAwB,EAAbmQ,EAAEhD,MAAMnN,IAAUqQ,IAC7B,GACbzQ,KAAKuN,MAAMnN,GAAS,SAAJc,EAElB,KAAiB,IAAVuP,GAAerQ,EAAIkQ,EAAEtN,OAAQ5C,IAElCqQ,GADAvP,GAAkB,EAAboP,EAAE/C,MAAMnN,IAAUqQ,IACV,GACbzQ,KAAKuN,MAAMnN,GAAS,SAAJc,EAIlB,GAAc,IAAVuP,GAAerQ,EAAIkQ,EAAEtN,QAAUsN,IAAMtQ,KACvC,KAAOI,EAAIkQ,EAAEtN,OAAQ5C,IACnBJ,KAAKuN,MAAMnN,GAAKkQ,EAAE/C,MAAMnN,GAU5B,OANAJ,KAAKgD,OAASgC,KAAKsJ,IAAItO,KAAKgD,OAAQ5C,GAEhCkQ,IAAMtQ,OACRA,KAAKsN,SAAW,GAGXtN,KAAK+O,SAId9B,EAAGjL,UAAUyJ,IAAM,SAAc2C,GAC/B,OAAOpO,KAAK4P,QAAQoE,KAAK5F,IA+C3B,IAAI6F,EAAc,SAAsB7D,EAAMhC,EAAKiC,GACjD,IAIIG,EACA0D,EACA/B,EANA7B,EAAIF,EAAK7C,MACTgD,EAAInC,EAAIb,MACR1M,EAAIwP,EAAI9C,MACR9M,EAAI,EAIJ0T,EAAY,EAAP7D,EAAE,GACP8D,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhE,EAAE,GACPiE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnE,EAAE,GACPoE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtE,EAAE,GACPuE,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPzE,EAAE,GACP0E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP5E,EAAE,GACP6E,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP/E,EAAE,GACPgF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPlF,EAAE,GACPmF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPrF,EAAE,GACPsF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPxF,EAAE,GACPyF,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP1F,EAAE,GACP2F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAP7F,EAAE,GACP8F,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPhG,EAAE,GACPiG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPnG,EAAE,GACPoG,EAAW,KAALD,EACNE,EAAMF,IAAO,GACbG,EAAY,EAAPtG,EAAE,GACPuG,EAAW,KAALD,EACNE,GAAMF,IAAO,GACbG,GAAY,EAAPzG,EAAE,GACP0G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP5G,EAAE,GACP6G,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAP/G,EAAE,GACPgH,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPlH,EAAE,GACPmH,GAAW,KAALD,GACNE,GAAMF,KAAO,GACbG,GAAY,EAAPrH,EAAE,GACPsH,GAAW,KAALD,GACNE,GAAMF,KAAO,GAEjBvH,EAAI/C,SAAW8C,EAAK9C,SAAWc,EAAId,SACnC+C,EAAIrN,OAAS,GAMb,IAAI+U,IAAQtX,GAJZ+P,EAAKxL,KAAKgT,KAAK5D,EAAK8B,IAIE,KAAa,MAFnChC,GADAA,EAAMlP,KAAKgT,KAAK5D,EAAK+B,IACRnR,KAAKgT,KAAK3D,EAAK6B,GAAQ,KAEU,IAAO,EACrDzV,IAFA0R,EAAKnN,KAAKgT,KAAK3D,EAAK8B,KAEPjC,IAAQ,IAAO,IAAM6D,KAAO,IAAO,EAChDA,IAAM,SAENvH,EAAKxL,KAAKgT,KAAKzD,EAAK2B,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAKzD,EAAK4B,IACRnR,KAAKgT,KAAKxD,EAAK0B,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAKxD,EAAK2B,GAKpB,IAAI8B,IAAQxX,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAKiC,GAAQ,GAIZ,KAAa,MAFnCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAKkC,GAAQ,GACvBtR,KAAKgT,KAAK3D,EAAKgC,GAAQ,KAEU,IAAO,EACrD5V,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAKiC,GAAQ,IAErBpC,IAAQ,IAAO,IAAM+D,KAAO,IAAO,EAChDA,IAAM,SAENzH,EAAKxL,KAAKgT,KAAKtD,EAAKwB,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAKtD,EAAKyB,IACRnR,KAAKgT,KAAKrD,EAAKuB,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAKrD,EAAKwB,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAK8B,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAK+B,GAAQ,GACvBtR,KAAKgT,KAAKxD,EAAK6B,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAK8B,GAAQ,EAKlC,IAAI4B,IAAQzX,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAKoC,GAAQ,GAIZ,KAAa,MAFnCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAKqC,GAAQ,GACvBzR,KAAKgT,KAAK3D,EAAKmC,GAAQ,KAEU,IAAO,EACrD/V,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAKoC,GAAQ,IAErBvC,IAAQ,IAAO,IAAMgE,KAAO,IAAO,EAChDA,IAAM,SAEN1H,EAAKxL,KAAKgT,KAAKnD,EAAKqB,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAKnD,EAAKsB,IACRnR,KAAKgT,KAAKlD,EAAKoB,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAKlD,EAAKqB,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAK2B,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAK4B,GAAQ,GACvBtR,KAAKgT,KAAKrD,EAAK0B,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAK2B,GAAQ,EAClC9F,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAKiC,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAKkC,GAAQ,GACvBzR,KAAKgT,KAAKxD,EAAKgC,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAKiC,GAAQ,EAKlC,IAAI0B,IAAQ1X,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAKuC,GAAQ,GAIZ,KAAa,MAFnCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAKwC,GAAQ,GACvB5R,KAAKgT,KAAK3D,EAAKsC,GAAQ,KAEU,IAAO,EACrDlW,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAKuC,GAAQ,IAErB1C,IAAQ,IAAO,IAAMiE,KAAO,IAAO,EAChDA,IAAM,SAEN3H,EAAKxL,KAAKgT,KAAKhD,EAAKkB,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAKhD,EAAKmB,IACRnR,KAAKgT,KAAK/C,EAAKiB,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAK/C,EAAKkB,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAKwB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAKyB,GAAQ,GACvBtR,KAAKgT,KAAKlD,EAAKuB,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAKwB,GAAQ,EAClC9F,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAK8B,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAK+B,GAAQ,GACvBzR,KAAKgT,KAAKrD,EAAK6B,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAK8B,GAAQ,EAClCjG,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAKoC,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAKqC,GAAQ,GACvB5R,KAAKgT,KAAKxD,EAAKmC,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAKoC,GAAQ,EAKlC,IAAIwB,IAAQ3X,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAK0C,GAAQ,GAIZ,KAAa,MAFnC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAK2C,IAAQ,GACvB/R,KAAKgT,KAAK3D,EAAKyC,GAAQ,KAEU,IAAO,EACrDrW,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAK0C,IAAQ,IAErB7C,IAAQ,IAAO,IAAMkE,KAAO,IAAO,EAChDA,IAAM,SAEN5H,EAAKxL,KAAKgT,KAAK7C,EAAKe,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAK7C,EAAKgB,IACRnR,KAAKgT,KAAK5C,EAAKc,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAK5C,EAAKe,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAKqB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAKsB,GAAQ,GACvBtR,KAAKgT,KAAK/C,EAAKoB,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAKqB,GAAQ,EAClC9F,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAK2B,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAK4B,GAAQ,GACvBzR,KAAKgT,KAAKlD,EAAK0B,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAK2B,GAAQ,EAClCjG,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAKiC,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAKkC,GAAQ,GACvB5R,KAAKgT,KAAKrD,EAAKgC,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAKiC,GAAQ,EAClCpG,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAKuC,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAKwC,IAAQ,GACvB/R,KAAKgT,KAAKxD,EAAKsC,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAKuC,IAAQ,EAKlC,IAAIsB,IAAQ5X,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAK6C,IAAQ,GAIZ,KAAa,MAFnC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAK8C,IAAQ,GACvBlS,KAAKgT,KAAK3D,EAAK4C,IAAQ,KAEU,IAAO,EACrDxW,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAK6C,IAAQ,IAErBhD,IAAQ,IAAO,IAAMmE,KAAO,IAAO,EAChDA,IAAM,SAEN7H,EAAKxL,KAAKgT,KAAK1C,EAAKY,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAK1C,EAAKa,IACRnR,KAAKgT,KAAKzC,EAAKW,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAKzC,EAAKY,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAKkB,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAKmB,GAAQ,GACvBtR,KAAKgT,KAAK5C,EAAKiB,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAKkB,GAAQ,EAClC9F,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAKwB,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAKyB,GAAQ,GACvBzR,KAAKgT,KAAK/C,EAAKuB,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAKwB,GAAQ,EAClCjG,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAK8B,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAK+B,GAAQ,GACvB5R,KAAKgT,KAAKlD,EAAK6B,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAK8B,GAAQ,EAClCpG,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAKoC,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAKqC,IAAQ,GACvB/R,KAAKgT,KAAKrD,EAAKmC,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAKoC,IAAQ,EAClCvG,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAK0C,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAK2C,IAAQ,GACvBlS,KAAKgT,KAAKxD,EAAKyC,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAK0C,IAAQ,EAKlC,IAAIoB,IAAQ7X,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAKgD,IAAQ,GAIZ,KAAa,MAFnClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAKiD,IAAQ,GACvBrS,KAAKgT,KAAK3D,EAAK+C,IAAQ,KAEU,IAAO,EACrD3W,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAKgD,IAAQ,IAErBnD,IAAQ,IAAO,IAAMoE,KAAO,IAAO,EAChDA,IAAM,SAEN9H,EAAKxL,KAAKgT,KAAKvC,EAAKS,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAKvC,EAAKU,IACRnR,KAAKgT,KAAKtC,EAAKQ,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAKtC,EAAKS,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAKe,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAKgB,GAAQ,GACvBtR,KAAKgT,KAAKzC,EAAKc,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAKe,GAAQ,EAClC9F,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAKqB,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAKsB,GAAQ,GACvBzR,KAAKgT,KAAK5C,EAAKoB,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAKqB,GAAQ,EAClCjG,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAK2B,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAK4B,GAAQ,GACvB5R,KAAKgT,KAAK/C,EAAK0B,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAK2B,GAAQ,EAClCpG,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAKiC,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAKkC,IAAQ,GACvB/R,KAAKgT,KAAKlD,EAAKgC,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAKiC,IAAQ,EAClCvG,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAKuC,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAKwC,IAAQ,GACvBlS,KAAKgT,KAAKrD,EAAKsC,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAKuC,IAAQ,EAClC1G,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAK6C,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAK8C,IAAQ,GACvBrS,KAAKgT,KAAKxD,EAAK4C,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAK6C,IAAQ,EAKlC,IAAIkB,IAAQ9X,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAKmD,IAAQ,GAIZ,KAAa,MAFnCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAKoD,IAAQ,GACvBxS,KAAKgT,KAAK3D,EAAKkD,IAAQ,KAEU,IAAO,EACrD9W,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAKmD,IAAQ,IAErBtD,IAAQ,IAAO,IAAMqE,KAAO,IAAO,EAChDA,IAAM,SAEN/H,EAAKxL,KAAKgT,KAAKpC,EAAKM,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAKpC,EAAKO,IACRnR,KAAKgT,KAAKnC,EAAKK,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAKnC,EAAKM,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAKY,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAKa,GAAQ,GACvBtR,KAAKgT,KAAKtC,EAAKW,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAKY,GAAQ,EAClC9F,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAKkB,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAKmB,GAAQ,GACvBzR,KAAKgT,KAAKzC,EAAKiB,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAKkB,GAAQ,EAClCjG,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAKwB,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAKyB,GAAQ,GACvB5R,KAAKgT,KAAK5C,EAAKuB,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAKwB,GAAQ,EAClCpG,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAK8B,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAK+B,IAAQ,GACvB/R,KAAKgT,KAAK/C,EAAK6B,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAK8B,IAAQ,EAClCvG,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAKoC,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAKqC,IAAQ,GACvBlS,KAAKgT,KAAKlD,EAAKmC,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAKoC,IAAQ,EAClC1G,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAK0C,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAK2C,IAAQ,GACvBrS,KAAKgT,KAAKrD,EAAKyC,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAK0C,IAAQ,EAClC7G,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAKgD,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAKiD,IAAQ,GACvBxS,KAAKgT,KAAKxD,EAAK+C,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAKgD,IAAQ,EAKlC,IAAIgB,IAAQ/X,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAKsD,IAAQ,GAIZ,KAAa,MAFnCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAKuD,IAAQ,GACvB3S,KAAKgT,KAAK3D,EAAKqD,IAAQ,KAEU,IAAO,EACrDjX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAKsD,IAAQ,IAErBzD,IAAQ,IAAO,IAAMsE,KAAO,IAAO,EAChDA,IAAM,SAENhI,EAAKxL,KAAKgT,KAAKjC,EAAKG,GAEpBhC,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKI,IACRnR,KAAKgT,KAAKhC,EAAKE,GAAQ,EACpC/D,EAAKnN,KAAKgT,KAAKhC,EAAKG,GACpB3F,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAKS,GAAQ,EAElCnC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAKU,GAAQ,GACvBtR,KAAKgT,KAAKnC,EAAKQ,GAAQ,EACpClE,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAKS,GAAQ,EAClC9F,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAKe,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAKgB,GAAQ,GACvBzR,KAAKgT,KAAKtC,EAAKc,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAKe,GAAQ,EAClCjG,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAKqB,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAKsB,GAAQ,GACvB5R,KAAKgT,KAAKzC,EAAKoB,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAKqB,GAAQ,EAClCpG,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAK2B,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAK4B,IAAQ,GACvB/R,KAAKgT,KAAK5C,EAAK0B,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAK2B,IAAQ,EAClCvG,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAKiC,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAKkC,IAAQ,GACvBlS,KAAKgT,KAAK/C,EAAKgC,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAKiC,IAAQ,EAClC1G,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAKuC,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAKwC,IAAQ,GACvBrS,KAAKgT,KAAKlD,EAAKsC,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAKuC,IAAQ,EAClC7G,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAK6C,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAK8C,IAAQ,GACvBxS,KAAKgT,KAAKrD,EAAK4C,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAK6C,IAAQ,EAClChH,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAKmD,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAKoD,IAAQ,GACvB3S,KAAKgT,KAAKxD,EAAKkD,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAKmD,IAAQ,EAKlC,IAAIc,IAAQhY,GAJZ+P,EAAMA,EAAKxL,KAAKgT,KAAK5D,EAAKyD,IAAQ,GAIZ,KAAa,MAFnC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK5D,EAAK0D,IAAQ,GACvB9S,KAAKgT,KAAK3D,EAAKwD,IAAQ,KAEU,IAAO,EACrDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK3D,EAAKyD,IAAQ,IAErB5D,IAAQ,IAAO,IAAMuE,KAAO,IAAO,EAChDA,IAAM,SAENjI,EAAKxL,KAAKgT,KAAKjC,EAAKM,GAEpBnC,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKO,IACRtR,KAAKgT,KAAKhC,EAAKK,GAAQ,EACpClE,EAAKnN,KAAKgT,KAAKhC,EAAKM,GACpB9F,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAKY,GAAQ,EAElCtC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAKa,GAAQ,GACvBzR,KAAKgT,KAAKnC,EAAKW,GAAQ,EACpCrE,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAKY,GAAQ,EAClCjG,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAKkB,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAKmB,GAAQ,GACvB5R,KAAKgT,KAAKtC,EAAKiB,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAKkB,GAAQ,EAClCpG,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAKwB,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAKyB,IAAQ,GACvB/R,KAAKgT,KAAKzC,EAAKuB,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAKwB,IAAQ,EAClCvG,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAK8B,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAK+B,IAAQ,GACvBlS,KAAKgT,KAAK5C,EAAK6B,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAK8B,IAAQ,EAClC1G,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAKoC,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAKqC,IAAQ,GACvBrS,KAAKgT,KAAK/C,EAAKmC,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAKoC,IAAQ,EAClC7G,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAK0C,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAK2C,IAAQ,GACvBxS,KAAKgT,KAAKlD,EAAKyC,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAK0C,IAAQ,EAClChH,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAKgD,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAKiD,IAAQ,GACvB3S,KAAKgT,KAAKrD,EAAK+C,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAKgD,IAAQ,EAKlC,IAAIe,IAASjY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAKzD,EAAKsD,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKzD,EAAKuD,IAAQ,GACvB9S,KAAKgT,KAAKxD,EAAKqD,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAKxD,EAAKsD,IAAQ,IAErB5D,IAAQ,IAAO,IAAMwE,KAAQ,IAAO,EACjDA,IAAO,SAEPlI,EAAKxL,KAAKgT,KAAKjC,EAAKS,GAEpBtC,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKU,IACRzR,KAAKgT,KAAKhC,EAAKQ,GAAQ,EACpCrE,EAAKnN,KAAKgT,KAAKhC,EAAKS,GACpBjG,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAKe,GAAQ,EAElCzC,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAKgB,GAAQ,GACvB5R,KAAKgT,KAAKnC,EAAKc,GAAQ,EACpCxE,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAKe,GAAQ,EAClCpG,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAKqB,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAKsB,IAAQ,GACvB/R,KAAKgT,KAAKtC,EAAKoB,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAKqB,IAAQ,EAClCvG,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAK2B,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAK4B,IAAQ,GACvBlS,KAAKgT,KAAKzC,EAAK0B,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAK2B,IAAQ,EAClC1G,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAKiC,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAKkC,IAAQ,GACvBrS,KAAKgT,KAAK5C,EAAKgC,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAKiC,IAAQ,EAClC7G,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAKuC,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAKwC,IAAQ,GACvBxS,KAAKgT,KAAK/C,EAAKsC,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAKuC,IAAQ,EAClChH,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAK6C,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAK8C,IAAQ,GACvB3S,KAAKgT,KAAKlD,EAAK4C,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAK6C,IAAQ,EAKlC,IAAIgB,IAASlY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAKtD,EAAKmD,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKtD,EAAKoD,IAAQ,GACvB9S,KAAKgT,KAAKrD,EAAKkD,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAKrD,EAAKmD,IAAQ,IAErB5D,IAAQ,IAAO,IAAMyE,KAAQ,IAAO,EACjDA,IAAO,SAEPnI,EAAKxL,KAAKgT,KAAKjC,EAAKY,GAEpBzC,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKa,IACR5R,KAAKgT,KAAKhC,EAAKW,GAAQ,EACpCxE,EAAKnN,KAAKgT,KAAKhC,EAAKY,GACpBpG,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAKkB,GAAQ,EAElC5C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAKmB,IAAQ,GACvB/R,KAAKgT,KAAKnC,EAAKiB,GAAQ,EACpC3E,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAKkB,IAAQ,EAClCvG,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAKwB,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAKyB,IAAQ,GACvBlS,KAAKgT,KAAKtC,EAAKuB,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAKwB,IAAQ,EAClC1G,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAK8B,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAK+B,IAAQ,GACvBrS,KAAKgT,KAAKzC,EAAK6B,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAK8B,IAAQ,EAClC7G,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAKoC,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAKqC,IAAQ,GACvBxS,KAAKgT,KAAK5C,EAAKmC,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAKoC,IAAQ,EAClChH,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAK0C,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAK2C,IAAQ,GACvB3S,KAAKgT,KAAK/C,EAAKyC,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAK0C,IAAQ,EAKlC,IAAIiB,IAASnY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAKnD,EAAKgD,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKnD,EAAKiD,IAAQ,GACvB9S,KAAKgT,KAAKlD,EAAK+C,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAKlD,EAAKgD,IAAQ,IAErB5D,IAAQ,IAAO,IAAM0E,KAAQ,IAAO,EACjDA,IAAO,SAEPpI,EAAKxL,KAAKgT,KAAKjC,EAAKe,GAEpB5C,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKgB,KACR/R,KAAKgT,KAAKhC,EAAKc,GAAQ,EACpC3E,EAAKnN,KAAKgT,KAAKhC,EAAKe,IACpBvG,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAKqB,IAAQ,EAElC/C,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAKsB,IAAQ,GACvBlS,KAAKgT,KAAKnC,EAAKoB,IAAQ,EACpC9E,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAKqB,IAAQ,EAClC1G,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAK2B,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAK4B,IAAQ,GACvBrS,KAAKgT,KAAKtC,EAAK0B,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAK2B,IAAQ,EAClC7G,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAKiC,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAKkC,IAAQ,GACvBxS,KAAKgT,KAAKzC,EAAKgC,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAKiC,IAAQ,EAClChH,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAKuC,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAKwC,IAAQ,GACvB3S,KAAKgT,KAAK5C,EAAKsC,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAKuC,IAAQ,EAKlC,IAAIkB,IAASpY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAKhD,EAAK6C,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKhD,EAAK8C,IAAQ,GACvB9S,KAAKgT,KAAK/C,EAAK4C,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK/C,EAAK6C,IAAQ,IAErB5D,IAAQ,IAAO,IAAM2E,KAAQ,IAAO,EACjDA,IAAO,SAEPrI,EAAKxL,KAAKgT,KAAKjC,EAAKkB,IAEpB/C,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKmB,KACRlS,KAAKgT,KAAKhC,EAAKiB,IAAQ,EACpC9E,EAAKnN,KAAKgT,KAAKhC,EAAKkB,IACpB1G,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAKwB,IAAQ,EAElClD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAKyB,IAAQ,GACvBrS,KAAKgT,KAAKnC,EAAKuB,IAAQ,EACpCjF,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAKwB,IAAQ,EAClC7G,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAK8B,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAK+B,IAAQ,GACvBxS,KAAKgT,KAAKtC,EAAK6B,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAK8B,IAAQ,EAClChH,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAKoC,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAKqC,IAAQ,GACvB3S,KAAKgT,KAAKzC,EAAKmC,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAKoC,IAAQ,EAKlC,IAAImB,IAASrY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAK7C,EAAK0C,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK7C,EAAK2C,IAAQ,GACvB9S,KAAKgT,KAAK5C,EAAKyC,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAK5C,EAAK0C,IAAQ,IAErB5D,IAAQ,IAAO,IAAM4E,KAAQ,IAAO,EACjDA,IAAO,SAEPtI,EAAKxL,KAAKgT,KAAKjC,EAAKqB,IAEpBlD,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKsB,KACRrS,KAAKgT,KAAKhC,EAAKoB,IAAQ,EACpCjF,EAAKnN,KAAKgT,KAAKhC,EAAKqB,IACpB7G,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAK2B,IAAQ,EAElCrD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAK4B,IAAQ,GACvBxS,KAAKgT,KAAKnC,EAAK0B,IAAQ,EACpCpF,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAK2B,IAAQ,EAClChH,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAKiC,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAKkC,IAAQ,GACvB3S,KAAKgT,KAAKtC,EAAKgC,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAKiC,IAAQ,EAKlC,IAAIoB,IAAStY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAK1C,EAAKuC,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAK1C,EAAKwC,IAAQ,GACvB9S,KAAKgT,KAAKzC,EAAKsC,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAKzC,EAAKuC,IAAQ,IAErB5D,IAAQ,IAAO,IAAM6E,KAAQ,IAAO,EACjDA,IAAO,SAEPvI,EAAKxL,KAAKgT,KAAKjC,EAAKwB,IAEpBrD,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAKyB,KACRxS,KAAKgT,KAAKhC,EAAKuB,IAAQ,EACpCpF,EAAKnN,KAAKgT,KAAKhC,EAAKwB,IACpBhH,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAK8B,IAAQ,EAElCxD,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAK+B,IAAQ,GACvB3S,KAAKgT,KAAKnC,EAAK6B,IAAQ,EACpCvF,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAK8B,IAAQ,EAKlC,IAAIqB,IAASvY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAKvC,EAAKoC,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKvC,EAAKqC,IAAQ,GACvB9S,KAAKgT,KAAKtC,EAAKmC,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAKtC,EAAKoC,IAAQ,IAErB5D,IAAQ,IAAO,IAAM8E,KAAQ,IAAO,EACjDA,IAAO,SAEPxI,EAAKxL,KAAKgT,KAAKjC,EAAK2B,IAEpBxD,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAK4B,KACR3S,KAAKgT,KAAKhC,EAAK0B,IAAQ,EACpCvF,EAAKnN,KAAKgT,KAAKhC,EAAK2B,IAKpB,IAAIsB,IAASxY,GAJb+P,EAAMA,EAAKxL,KAAKgT,KAAKpC,EAAKiC,IAAQ,GAIX,KAAa,MAFpC3D,GADAA,EAAOA,EAAMlP,KAAKgT,KAAKpC,EAAKkC,IAAQ,GACvB9S,KAAKgT,KAAKnC,EAAKgC,IAAQ,KAEW,IAAO,EACtDpX,IAFA0R,EAAMA,EAAKnN,KAAKgT,KAAKnC,EAAKiC,IAAQ,IAErB5D,IAAQ,IAAO,IAAM+E,KAAQ,IAAO,EACjDA,IAAO,SAMP,IAAIC,IAASzY,GAJb+P,EAAKxL,KAAKgT,KAAKjC,EAAK8B,KAIG,KAAa,MAFpC3D,GADAA,EAAMlP,KAAKgT,KAAKjC,EAAK+B,KACR9S,KAAKgT,KAAKhC,EAAK6B,IAAQ,KAEW,IAAO,EA0BtD,OAzBApX,IAFA0R,EAAKnN,KAAKgT,KAAKhC,EAAK8B,MAEP5D,IAAQ,IAAO,IAAMgF,KAAQ,IAAO,EACjDA,IAAO,SACPrY,EAAE,GAAKkX,GACPlX,EAAE,GAAKoX,GACPpX,EAAE,GAAKqX,GACPrX,EAAE,GAAKsX,GACPtX,EAAE,GAAKuX,GACPvX,EAAE,GAAKwX,GACPxX,EAAE,GAAKyX,GACPzX,EAAE,GAAK0X,GACP1X,EAAE,GAAK2X,GACP3X,EAAE,GAAK4X,GACP5X,EAAE,IAAM6X,GACR7X,EAAE,IAAM8X,GACR9X,EAAE,IAAM+X,GACR/X,EAAE,IAAMgY,GACRhY,EAAE,IAAMiY,GACRjY,EAAE,IAAMkY,GACRlY,EAAE,IAAMmY,GACRnY,EAAE,IAAMoY,GACRpY,EAAE,IAAMqY,GACE,IAANzY,IACFI,EAAE,IAAMJ,EACR4P,EAAIrN,UAECqN,GAiDT,SAAS8I,EAAY/I,EAAMhC,EAAKiC,GAE9B,OADW,IAAI+I,GACHC,KAAKjJ,EAAMhC,EAAKiC,GAsB9B,SAAS+I,EAAME,EAAGC,GAChBvZ,KAAKsZ,EAAIA,EACTtZ,KAAKuZ,EAAIA,EAvENvU,KAAKgT,OACR/D,EAAc9D,GAiDhBlD,EAAGjL,UAAUwX,MAAQ,SAAgBpL,EAAKiC,GACxC,IACIrC,EAAMhO,KAAKgD,OAASoL,EAAIpL,OAW5B,OAVoB,KAAhBhD,KAAKgD,QAAgC,KAAfoL,EAAIpL,OACtBiR,EAAYjU,KAAMoO,EAAKiC,GACpBrC,EAAM,GACTmC,EAAWnQ,KAAMoO,EAAKiC,GACnBrC,EAAM,KArDnB,SAAmBoC,EAAMhC,EAAKiC,GAC5BA,EAAI/C,SAAWc,EAAId,SAAW8C,EAAK9C,SACnC+C,EAAIrN,OAASoN,EAAKpN,OAASoL,EAAIpL,OAI/B,IAFA,IAAIyN,EAAQ,EACRgJ,EAAU,EACL/I,EAAI,EAAGA,EAAIL,EAAIrN,OAAS,EAAG0N,IAAK,CAGvC,IAAIC,EAAS8I,EACbA,EAAU,EAGV,IAFA,IAAI7I,EAAgB,SAARH,EACRI,EAAO7L,KAAKiJ,IAAIyC,EAAGtC,EAAIpL,OAAS,GAC3BkM,EAAIlK,KAAKsJ,IAAI,EAAGoC,EAAIN,EAAKpN,OAAS,GAAIkM,GAAK2B,EAAM3B,IAAK,CAC7D,IAAI9O,EAAIsQ,EAAIxB,EAGRhO,GAFoB,EAAhBkP,EAAK7C,MAAMnN,KACI,EAAfgO,EAAIb,MAAM2B,IAGdsB,EAAS,SAAJtP,EAGT0P,EAAa,UADbJ,EAAMA,EAAKI,EAAS,GAIpB6I,IAFA9I,GAHAA,EAAUA,GAAWzP,EAAI,SAAa,GAAM,IAGxBsP,IAAO,IAAO,KAEZ,GACtBG,GAAU,SAEZN,EAAI9C,MAAMmD,GAAKE,EACfH,EAAQE,EACRA,EAAS8I,EAQX,OANc,IAAVhJ,EACFJ,EAAI9C,MAAMmD,GAAKD,EAEfJ,EAAIrN,SAGCqN,EAAItB,QAgBH2K,CAAS1Z,KAAMoO,EAAKiC,GAEpB8I,EAAWnZ,KAAMoO,EAAKiC,IAchC+I,EAAKpX,UAAU2X,QAAU,SAAkBC,GAGzC,IAFA,IAAItY,EAAI,IAAIoB,MAAMkX,GACdvZ,EAAI4M,EAAGjL,UAAUgQ,WAAW4H,GAAK,EAC5BxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,IACrBkB,EAAElB,GAAKJ,KAAK6Z,OAAOzZ,EAAGC,EAAGuZ,GAG3B,OAAOtY,GAIT8X,EAAKpX,UAAU6X,OAAS,SAAiBP,EAAGjZ,EAAGuZ,GAC7C,GAAU,IAANN,GAAWA,IAAMM,EAAI,EAAG,OAAON,EAGnC,IADA,IAAIQ,EAAK,EACA1Z,EAAI,EAAGA,EAAIC,EAAGD,IACrB0Z,IAAW,EAAJR,IAAWjZ,EAAID,EAAI,EAC1BkZ,IAAM,EAGR,OAAOQ,GAKTV,EAAKpX,UAAU+X,QAAU,SAAkBC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GACpE,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,IACrB+Z,EAAK/Z,GAAK6Z,EAAID,EAAI5Z,IAClBga,EAAKha,GAAK8Z,EAAIF,EAAI5Z,KAItBgZ,EAAKpX,UAAUqY,UAAY,SAAoBJ,EAAKC,EAAKC,EAAMC,EAAMR,EAAGI,GACtEha,KAAK+Z,QAAQC,EAAKC,EAAKC,EAAKC,EAAMC,EAAMR,GAExC,IAAK,IAAIzX,EAAI,EAAGA,EAAIyX,EAAGzX,IAAM,EAM3B,IALA,IAAI9B,EAAI8B,GAAK,EAETmY,EAAQtV,KAAKuV,IAAI,EAAIvV,KAAKwV,GAAKna,GAC/Boa,EAAQzV,KAAK0V,IAAI,EAAI1V,KAAKwV,GAAKna,GAE1B6B,EAAI,EAAGA,EAAI0X,EAAG1X,GAAK7B,EAI1B,IAHA,IAAIsa,EAASL,EACTM,EAASH,EAEJvL,EAAI,EAAGA,EAAI/M,EAAG+M,IAAK,CAC1B,IAAI2L,EAAKV,EAAKjY,EAAIgN,GACd4L,EAAKV,EAAKlY,EAAIgN,GAEd6L,EAAKZ,EAAKjY,EAAIgN,EAAI/M,GAClB6Y,EAAKZ,EAAKlY,EAAIgN,EAAI/M,GAElB8Y,EAAKN,EAASI,EAAKH,EAASI,EAEhCA,EAAKL,EAASK,EAAKJ,EAASG,EAC5BA,EAAKE,EAELd,EAAKjY,EAAIgN,GAAK2L,EAAKE,EACnBX,EAAKlY,EAAIgN,GAAK4L,EAAKE,EAEnBb,EAAKjY,EAAIgN,EAAI/M,GAAK0Y,EAAKE,EACvBX,EAAKlY,EAAIgN,EAAI/M,GAAK2Y,EAAKE,EAGnB9L,IAAM7O,IACR4a,EAAKX,EAAQK,EAASF,EAAQG,EAE9BA,EAASN,EAAQM,EAASH,EAAQE,EAClCA,EAASM,KAOnB7B,EAAKpX,UAAUkZ,YAAc,SAAsBrZ,EAAGrB,GACpD,IAAIoZ,EAAqB,EAAjB5U,KAAKsJ,IAAI9N,EAAGqB,GAChBsZ,EAAU,EAAJvB,EACNxZ,EAAI,EACR,IAAKwZ,EAAIA,EAAI,EAAI,EAAGA,EAAGA,KAAU,EAC/BxZ,IAGF,OAAO,GAAKA,EAAI,EAAI+a,GAGtB/B,EAAKpX,UAAUoZ,UAAY,SAAoBnB,EAAKC,EAAKN,GACvD,KAAIA,GAAK,GAET,IAAK,IAAIxZ,EAAI,EAAGA,EAAIwZ,EAAI,EAAGxZ,IAAK,CAC9B,IAAIkB,EAAI2Y,EAAI7Z,GAEZ6Z,EAAI7Z,GAAK6Z,EAAIL,EAAIxZ,EAAI,GACrB6Z,EAAIL,EAAIxZ,EAAI,GAAKkB,EAEjBA,EAAI4Y,EAAI9Z,GAER8Z,EAAI9Z,IAAM8Z,EAAIN,EAAIxZ,EAAI,GACtB8Z,EAAIN,EAAIxZ,EAAI,IAAMkB,IAItB8X,EAAKpX,UAAUqZ,aAAe,SAAuBC,EAAI1B,GAEvD,IADA,IAAInJ,EAAQ,EACHrQ,EAAI,EAAGA,EAAIwZ,EAAI,EAAGxZ,IAAK,CAC9B,IAAI+O,EAAoC,KAAhCnK,KAAKuW,MAAMD,EAAG,EAAIlb,EAAI,GAAKwZ,GACjC5U,KAAKuW,MAAMD,EAAG,EAAIlb,GAAKwZ,GACvBnJ,EAEF6K,EAAGlb,GAAS,SAAJ+O,EAGNsB,EADEtB,EAAI,SACE,EAEAA,EAAI,SAAY,EAI5B,OAAOmM,GAGTlC,EAAKpX,UAAUwZ,WAAa,SAAqBF,EAAItN,EAAKiM,EAAKL,GAE7D,IADA,IAAInJ,EAAQ,EACHrQ,EAAI,EAAGA,EAAI4N,EAAK5N,IACvBqQ,GAAyB,EAAR6K,EAAGlb,GAEpB6Z,EAAI,EAAI7Z,GAAa,KAARqQ,EAAgBA,KAAkB,GAC/CwJ,EAAI,EAAI7Z,EAAI,GAAa,KAARqQ,EAAgBA,KAAkB,GAIrD,IAAKrQ,EAAI,EAAI4N,EAAK5N,EAAIwZ,IAAKxZ,EACzB6Z,EAAI7Z,GAAK,EAGXqM,EAAiB,IAAVgE,GACPhE,EAA6B,KAAb,KAARgE,KAGV2I,EAAKpX,UAAUyZ,KAAO,SAAe7B,GAEnC,IADA,IAAI8B,EAAK,IAAIhZ,MAAMkX,GACVxZ,EAAI,EAAGA,EAAIwZ,EAAGxZ,IACrBsb,EAAGtb,GAAK,EAGV,OAAOsb,GAGTtC,EAAKpX,UAAUqX,KAAO,SAAeC,EAAGC,EAAGlJ,GACzC,IAAIuJ,EAAI,EAAI5Z,KAAKkb,YAAY5B,EAAEtW,OAAQuW,EAAEvW,QAErCgX,EAAMha,KAAK2Z,QAAQC,GAEnB+B,EAAI3b,KAAKyb,KAAK7B,GAEdK,EAAM,IAAIvX,MAAMkX,GAChBgC,EAAO,IAAIlZ,MAAMkX,GACjBiC,EAAO,IAAInZ,MAAMkX,GAEjBkC,EAAO,IAAIpZ,MAAMkX,GACjBmC,EAAQ,IAAIrZ,MAAMkX,GAClBoC,EAAQ,IAAItZ,MAAMkX,GAElBqC,EAAO5L,EAAI9C,MACf0O,EAAKjZ,OAAS4W,EAEd5Z,KAAKwb,WAAWlC,EAAE/L,MAAO+L,EAAEtW,OAAQiX,EAAKL,GACxC5Z,KAAKwb,WAAWjC,EAAEhM,MAAOgM,EAAEvW,OAAQ8Y,EAAMlC,GAEzC5Z,KAAKqa,UAAUJ,EAAK0B,EAAGC,EAAMC,EAAMjC,EAAGI,GACtCha,KAAKqa,UAAUyB,EAAMH,EAAGI,EAAOC,EAAOpC,EAAGI,GAEzC,IAAK,IAAI5Z,EAAI,EAAGA,EAAIwZ,EAAGxZ,IAAK,CAC1B,IAAI6a,EAAKW,EAAKxb,GAAK2b,EAAM3b,GAAKyb,EAAKzb,GAAK4b,EAAM5b,GAC9Cyb,EAAKzb,GAAKwb,EAAKxb,GAAK4b,EAAM5b,GAAKyb,EAAKzb,GAAK2b,EAAM3b,GAC/Cwb,EAAKxb,GAAK6a,EAUZ,OAPAjb,KAAKob,UAAUQ,EAAMC,EAAMjC,GAC3B5Z,KAAKqa,UAAUuB,EAAMC,EAAMI,EAAMN,EAAG/B,EAAGI,GACvCha,KAAKob,UAAUa,EAAMN,EAAG/B,GACxB5Z,KAAKqb,aAAaY,EAAMrC,GAExBvJ,EAAI/C,SAAWgM,EAAEhM,SAAWiM,EAAEjM,SAC9B+C,EAAIrN,OAASsW,EAAEtW,OAASuW,EAAEvW,OACnBqN,EAAItB,SAIb9B,EAAGjL,UAAU6J,IAAM,SAAcuC,GAC/B,IAAIiC,EAAM,IAAIpD,EAAG,MAEjB,OADAoD,EAAI9C,MAAQ,IAAI7K,MAAM1C,KAAKgD,OAASoL,EAAIpL,QACjChD,KAAKwZ,MAAMpL,EAAKiC,IAIzBpD,EAAGjL,UAAUka,KAAO,SAAe9N,GACjC,IAAIiC,EAAM,IAAIpD,EAAG,MAEjB,OADAoD,EAAI9C,MAAQ,IAAI7K,MAAM1C,KAAKgD,OAASoL,EAAIpL,QACjCmW,EAAWnZ,KAAMoO,EAAKiC,IAI/BpD,EAAGjL,UAAUgW,KAAO,SAAe5J,GACjC,OAAOpO,KAAK4P,QAAQ4J,MAAMpL,EAAKpO,OAGjCiN,EAAGjL,UAAUwN,MAAQ,SAAgBpB,GACnC3B,EAAsB,iBAAR2B,GACd3B,EAAO2B,EAAM,UAIb,IADA,IAAIqC,EAAQ,EACHrQ,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAAK,CACpC,IAAI+O,GAAqB,EAAhBnP,KAAKuN,MAAMnN,IAAUgO,EAC1BoC,GAAU,SAAJrB,IAA0B,SAARsB,GAC5BA,IAAU,GACVA,GAAUtB,EAAI,SAAa,EAE3BsB,GAASD,IAAO,GAChBxQ,KAAKuN,MAAMnN,GAAU,SAALoQ,EAQlB,OALc,IAAVC,IACFzQ,KAAKuN,MAAMnN,GAAKqQ,EAChBzQ,KAAKgD,UAGAhD,MAGTiN,EAAGjL,UAAUma,KAAO,SAAe/N,GACjC,OAAOpO,KAAK4P,QAAQJ,MAAMpB,IAI5BnB,EAAGjL,UAAUoa,IAAM,WACjB,OAAOpc,KAAK6L,IAAI7L,OAIlBiN,EAAGjL,UAAUqa,KAAO,WAClB,OAAOrc,KAAKgY,KAAKhY,KAAK4P,UAIxB3C,EAAGjL,UAAU+J,IAAM,SAAcqC,GAC/B,IAAIe,EAxxCN,SAAqBf,GAGnB,IAFA,IAAIe,EAAI,IAAIzM,MAAM0L,EAAI8D,aAEb2B,EAAM,EAAGA,EAAM1E,EAAEnM,OAAQ6Q,IAAO,CACvC,IAAIjN,EAAOiN,EAAM,GAAM,EACnBC,EAAOD,EAAM,GAEjB1E,EAAE0E,IAAQzF,EAAIb,MAAM3G,GAAQ,GAAKkN,KAAWA,EAG9C,OAAO3E,EA8wCCmN,CAAWlO,GACnB,GAAiB,IAAbe,EAAEnM,OAAc,OAAO,IAAIiK,EAAG,GAIlC,IADA,IAAI0E,EAAM3R,KACDI,EAAI,EAAGA,EAAI+O,EAAEnM,QACP,IAATmM,EAAE/O,GADsBA,IAAKuR,EAAMA,EAAIyK,OAI7C,KAAMhc,EAAI+O,EAAEnM,OACV,IAAK,IAAI4O,EAAID,EAAIyK,MAAOhc,EAAI+O,EAAEnM,OAAQ5C,IAAKwR,EAAIA,EAAEwK,MAClC,IAATjN,EAAE/O,KAENuR,EAAMA,EAAI9F,IAAI+F,IAIlB,OAAOD,GAIT1E,EAAGjL,UAAUua,OAAS,SAAiBC,GACrC/P,EAAuB,iBAAT+P,GAAqBA,GAAQ,GAC3C,IAGIpc,EAHAc,EAAIsb,EAAO,GACXra,GAAKqa,EAAOtb,GAAK,GACjBub,EAAa,WAAe,GAAKvb,GAAQ,GAAKA,EAGlD,GAAU,IAANA,EAAS,CACX,IAAIuP,EAAQ,EAEZ,IAAKrQ,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAAK,CAChC,IAAIsc,EAAW1c,KAAKuN,MAAMnN,GAAKqc,EAC3Bhc,GAAsB,EAAhBT,KAAKuN,MAAMnN,IAAUsc,GAAaxb,EAC5ClB,KAAKuN,MAAMnN,GAAKK,EAAIgQ,EACpBA,EAAQiM,IAAc,GAAKxb,EAGzBuP,IACFzQ,KAAKuN,MAAMnN,GAAKqQ,EAChBzQ,KAAKgD,UAIT,GAAU,IAANb,EAAS,CACX,IAAK/B,EAAIJ,KAAKgD,OAAS,EAAG5C,GAAK,EAAGA,IAChCJ,KAAKuN,MAAMnN,EAAI+B,GAAKnC,KAAKuN,MAAMnN,GAGjC,IAAKA,EAAI,EAAGA,EAAI+B,EAAG/B,IACjBJ,KAAKuN,MAAMnN,GAAK,EAGlBJ,KAAKgD,QAAUb,EAGjB,OAAOnC,KAAK+O,SAGd9B,EAAGjL,UAAU2a,MAAQ,SAAgBH,GAGnC,OADA/P,EAAyB,IAAlBzM,KAAKsN,UACLtN,KAAKuc,OAAOC,IAMrBvP,EAAGjL,UAAU8P,OAAS,SAAiB0K,EAAMI,EAAMC,GAEjD,IAAIC,EADJrQ,EAAuB,iBAAT+P,GAAqBA,GAAQ,GAGzCM,EADEF,GACGA,EAAQA,EAAO,IAAO,GAEvB,EAGN,IAAI1b,EAAIsb,EAAO,GACXra,EAAI6C,KAAKiJ,KAAKuO,EAAOtb,GAAK,GAAIlB,KAAKgD,QACnC+Z,EAAO,SAAc,WAAc7b,GAAMA,EACzC8b,EAAcH,EAMlB,GAJAC,GAAK3a,EACL2a,EAAI9X,KAAKsJ,IAAI,EAAGwO,GAGZE,EAAa,CACf,IAAK,IAAI5c,EAAI,EAAGA,EAAI+B,EAAG/B,IACrB4c,EAAYzP,MAAMnN,GAAKJ,KAAKuN,MAAMnN,GAEpC4c,EAAYha,OAASb,EAGvB,GAAU,IAANA,QAEG,GAAInC,KAAKgD,OAASb,EAEvB,IADAnC,KAAKgD,QAAUb,EACV/B,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAC3BJ,KAAKuN,MAAMnN,GAAKJ,KAAKuN,MAAMnN,EAAI+B,QAGjCnC,KAAKuN,MAAM,GAAK,EAChBvN,KAAKgD,OAAS,EAGhB,IAAIyN,EAAQ,EACZ,IAAKrQ,EAAIJ,KAAKgD,OAAS,EAAG5C,GAAK,IAAgB,IAAVqQ,GAAerQ,GAAK0c,GAAI1c,IAAK,CAChE,IAAImP,EAAuB,EAAhBvP,KAAKuN,MAAMnN,GACtBJ,KAAKuN,MAAMnN,GAAMqQ,GAAU,GAAKvP,EAAOqO,IAASrO,EAChDuP,EAAQlB,EAAOwN,EAajB,OATIC,GAAyB,IAAVvM,IACjBuM,EAAYzP,MAAMyP,EAAYha,UAAYyN,GAGxB,IAAhBzQ,KAAKgD,SACPhD,KAAKuN,MAAM,GAAK,EAChBvN,KAAKgD,OAAS,GAGThD,KAAK+O,SAGd9B,EAAGjL,UAAUib,MAAQ,SAAgBT,EAAMI,EAAMC,GAG/C,OADApQ,EAAyB,IAAlBzM,KAAKsN,UACLtN,KAAK8R,OAAO0K,EAAMI,EAAMC,IAIjC5P,EAAGjL,UAAUkb,KAAO,SAAeV,GACjC,OAAOxc,KAAK4P,QAAQ+M,MAAMH,IAG5BvP,EAAGjL,UAAUmb,MAAQ,SAAgBX,GACnC,OAAOxc,KAAK4P,QAAQ2M,OAAOC,IAI7BvP,EAAGjL,UAAUob,KAAO,SAAeZ,GACjC,OAAOxc,KAAK4P,QAAQqN,MAAMT,IAG5BvP,EAAGjL,UAAUqb,MAAQ,SAAgBb,GACnC,OAAOxc,KAAK4P,QAAQkC,OAAO0K,IAI7BvP,EAAGjL,UAAUyQ,MAAQ,SAAgBoB,GACnCpH,EAAsB,iBAARoH,GAAoBA,GAAO,GACzC,IAAI3S,EAAI2S,EAAM,GACV1R,GAAK0R,EAAM3S,GAAK,GAChB0Q,EAAI,GAAK1Q,EAGb,QAAIlB,KAAKgD,QAAUb,OAGXnC,KAAKuN,MAAMpL,GAELyP,IAIhB3E,EAAGjL,UAAUsb,OAAS,SAAiBd,GACrC/P,EAAuB,iBAAT+P,GAAqBA,GAAQ,GAC3C,IAAItb,EAAIsb,EAAO,GACXra,GAAKqa,EAAOtb,GAAK,GAIrB,GAFAuL,EAAyB,IAAlBzM,KAAKsN,SAAgB,2CAExBtN,KAAKgD,QAAUb,EACjB,OAAOnC,KAQT,GALU,IAANkB,GACFiB,IAEFnC,KAAKgD,OAASgC,KAAKiJ,IAAI9L,EAAGnC,KAAKgD,QAErB,IAAN9B,EAAS,CACX,IAAI6b,EAAO,SAAc,WAAc7b,GAAMA,EAC7ClB,KAAKuN,MAAMvN,KAAKgD,OAAS,IAAM+Z,EAGjC,OAAO/c,KAAK+O,SAId9B,EAAGjL,UAAUgK,MAAQ,SAAgBwQ,GACnC,OAAOxc,KAAK4P,QAAQ0N,OAAOd,IAI7BvP,EAAGjL,UAAUwQ,MAAQ,SAAgBpE,GAGnC,OAFA3B,EAAsB,iBAAR2B,GACd3B,EAAO2B,EAAM,UACTA,EAAM,EAAUpO,KAAKud,OAAOnP,GAGV,IAAlBpO,KAAKsN,SACa,IAAhBtN,KAAKgD,SAAiC,EAAhBhD,KAAKuN,MAAM,IAAUa,GAC7CpO,KAAKuN,MAAM,GAAKa,GAAuB,EAAhBpO,KAAKuN,MAAM,IAClCvN,KAAKsN,SAAW,EACTtN,OAGTA,KAAKsN,SAAW,EAChBtN,KAAKud,MAAMnP,GACXpO,KAAKsN,SAAW,EACTtN,MAIFA,KAAKyP,OAAOrB,IAGrBnB,EAAGjL,UAAUyN,OAAS,SAAiBrB,GACrCpO,KAAKuN,MAAM,IAAMa,EAGjB,IAAK,IAAIhO,EAAI,EAAGA,EAAIJ,KAAKgD,QAAUhD,KAAKuN,MAAMnN,IAAM,SAAWA,IAC7DJ,KAAKuN,MAAMnN,IAAM,SACbA,IAAMJ,KAAKgD,OAAS,EACtBhD,KAAKuN,MAAMnN,EAAI,GAAK,EAEpBJ,KAAKuN,MAAMnN,EAAI,KAKnB,OAFAJ,KAAKgD,OAASgC,KAAKsJ,IAAItO,KAAKgD,OAAQ5C,EAAI,GAEjCJ,MAITiN,EAAGjL,UAAUub,MAAQ,SAAgBnP,GAGnC,GAFA3B,EAAsB,iBAAR2B,GACd3B,EAAO2B,EAAM,UACTA,EAAM,EAAG,OAAOpO,KAAKwS,OAAOpE,GAEhC,GAAsB,IAAlBpO,KAAKsN,SAIP,OAHAtN,KAAKsN,SAAW,EAChBtN,KAAKwS,MAAMpE,GACXpO,KAAKsN,SAAW,EACTtN,KAKT,GAFAA,KAAKuN,MAAM,IAAMa,EAEG,IAAhBpO,KAAKgD,QAAgBhD,KAAKuN,MAAM,GAAK,EACvCvN,KAAKuN,MAAM,IAAMvN,KAAKuN,MAAM,GAC5BvN,KAAKsN,SAAW,OAGhB,IAAK,IAAIlN,EAAI,EAAGA,EAAIJ,KAAKgD,QAAUhD,KAAKuN,MAAMnN,GAAK,EAAGA,IACpDJ,KAAKuN,MAAMnN,IAAM,SACjBJ,KAAKuN,MAAMnN,EAAI,IAAM,EAIzB,OAAOJ,KAAK+O,SAGd9B,EAAGjL,UAAUwb,KAAO,SAAepP,GACjC,OAAOpO,KAAK4P,QAAQ4C,MAAMpE,IAG5BnB,EAAGjL,UAAUyb,KAAO,SAAerP,GACjC,OAAOpO,KAAK4P,QAAQ2N,MAAMnP,IAG5BnB,EAAGjL,UAAU0b,KAAO,WAGlB,OAFA1d,KAAKsN,SAAW,EAETtN,MAGTiN,EAAGjL,UAAUsQ,IAAM,WACjB,OAAOtS,KAAK4P,QAAQ8N,QAGtBzQ,EAAGjL,UAAU2b,aAAe,SAAuBvP,EAAKvC,EAAK+R,GAC3D,IACIxd,EAIA+O,EALAnB,EAAMI,EAAIpL,OAAS4a,EAGvB5d,KAAK6P,QAAQ7B,GAGb,IAAIyC,EAAQ,EACZ,IAAKrQ,EAAI,EAAGA,EAAIgO,EAAIpL,OAAQ5C,IAAK,CAC/B+O,GAA6B,EAAxBnP,KAAKuN,MAAMnN,EAAIwd,IAAcnN,EAClC,IAAIjC,GAAwB,EAAfJ,EAAIb,MAAMnN,IAAUyL,EAEjC4E,IADAtB,GAAa,SAARX,IACS,KAAQA,EAAQ,SAAa,GAC3CxO,KAAKuN,MAAMnN,EAAIwd,GAAa,SAAJzO,EAE1B,KAAO/O,EAAIJ,KAAKgD,OAAS4a,EAAOxd,IAE9BqQ,GADAtB,GAA6B,EAAxBnP,KAAKuN,MAAMnN,EAAIwd,IAAcnN,IACrB,GACbzQ,KAAKuN,MAAMnN,EAAIwd,GAAa,SAAJzO,EAG1B,GAAc,IAAVsB,EAAa,OAAOzQ,KAAK+O,QAK7B,IAFAtC,GAAkB,IAAXgE,GACPA,EAAQ,EACHrQ,EAAI,EAAGA,EAAIJ,KAAKgD,OAAQ5C,IAE3BqQ,GADAtB,IAAsB,EAAhBnP,KAAKuN,MAAMnN,IAAUqQ,IACd,GACbzQ,KAAKuN,MAAMnN,GAAS,SAAJ+O,EAIlB,OAFAnP,KAAKsN,SAAW,EAETtN,KAAK+O,SAGd9B,EAAGjL,UAAU6b,SAAW,SAAmBzP,EAAK7M,GAC9C,IAAIqc,GAAQ5d,KAAKgD,OAASoL,EAAIpL,QAE1BsN,EAAItQ,KAAK4P,QACTW,EAAInC,EAGJ0P,EAA8B,EAAxBvN,EAAEhD,MAAMgD,EAAEvN,OAAS,GAGf,KADd4a,EAAQ,GADM5d,KAAKgS,WAAW8L,MAG5BvN,EAAIA,EAAE4M,MAAMS,GACZtN,EAAEiM,OAAOqB,GACTE,EAA8B,EAAxBvN,EAAEhD,MAAMgD,EAAEvN,OAAS,IAI3B,IACI4O,EADApR,EAAI8P,EAAEtN,OAASuN,EAAEvN,OAGrB,GAAa,QAATzB,EAAgB,EAClBqQ,EAAI,IAAI3E,EAAG,OACTjK,OAASxC,EAAI,EACfoR,EAAErE,MAAQ,IAAI7K,MAAMkP,EAAE5O,QACtB,IAAK,IAAI5C,EAAI,EAAGA,EAAIwR,EAAE5O,OAAQ5C,IAC5BwR,EAAErE,MAAMnN,GAAK,EAIjB,IAAI2d,EAAOzN,EAAEV,QAAQ+N,aAAapN,EAAG,EAAG/P,GAClB,IAAlBud,EAAKzQ,WACPgD,EAAIyN,EACAnM,IACFA,EAAErE,MAAM/M,GAAK,IAIjB,IAAK,IAAI0O,EAAI1O,EAAI,EAAG0O,GAAK,EAAGA,IAAK,CAC/B,IAAI8O,EAAmC,UAAL,EAAxB1N,EAAE/C,MAAMgD,EAAEvN,OAASkM,KACE,EAA5BoB,EAAE/C,MAAMgD,EAAEvN,OAASkM,EAAI,IAO1B,IAHA8O,EAAKhZ,KAAKiJ,IAAK+P,EAAKF,EAAO,EAAG,UAE9BxN,EAAEqN,aAAapN,EAAGyN,EAAI9O,GACA,IAAfoB,EAAEhD,UACP0Q,IACA1N,EAAEhD,SAAW,EACbgD,EAAEqN,aAAapN,EAAG,EAAGrB,GAChBoB,EAAE5E,WACL4E,EAAEhD,UAAY,GAGdsE,IACFA,EAAErE,MAAM2B,GAAK8O,GAajB,OAVIpM,GACFA,EAAE7C,QAEJuB,EAAEvB,QAGW,QAATxN,GAA4B,IAAVqc,GACpBtN,EAAEwB,OAAO8L,GAGJ,CACLhS,IAAKgG,GAAK,KACV9F,IAAKwE,IAQTrD,EAAGjL,UAAUic,OAAS,SAAiB7P,EAAK7M,EAAM2c,GAGhD,OAFAzR,GAAQ2B,EAAI1C,UAER1L,KAAK0L,SACA,CACLE,IAAK,IAAIqB,EAAG,GACZnB,IAAK,IAAImB,EAAG,IAKM,IAAlBjN,KAAKsN,UAAmC,IAAjBc,EAAId,UAC7BqE,EAAM3R,KAAK6S,MAAMoL,OAAO7P,EAAK7M,GAEhB,QAATA,IACFqK,EAAM+F,EAAI/F,IAAIiH,OAGH,QAATtR,IACFuK,EAAM6F,EAAI7F,IAAI+G,MACVqL,GAA6B,IAAjBpS,EAAIwB,UAClBxB,EAAIiI,KAAK3F,IAIN,CACLxC,IAAKA,EACLE,IAAKA,IAIa,IAAlB9L,KAAKsN,UAAmC,IAAjBc,EAAId,UAC7BqE,EAAM3R,KAAKie,OAAO7P,EAAIyE,MAAOtR,GAEhB,QAATA,IACFqK,EAAM+F,EAAI/F,IAAIiH,OAGT,CACLjH,IAAKA,EACLE,IAAK6F,EAAI7F,MAI0B,IAAlC9L,KAAKsN,SAAWc,EAAId,WACvBqE,EAAM3R,KAAK6S,MAAMoL,OAAO7P,EAAIyE,MAAOtR,GAEtB,QAATA,IACFuK,EAAM6F,EAAI7F,IAAI+G,MACVqL,GAA6B,IAAjBpS,EAAIwB,UAClBxB,EAAIkI,KAAK5F,IAIN,CACLxC,IAAK+F,EAAI/F,IACTE,IAAKA,IAOLsC,EAAIpL,OAAShD,KAAKgD,QAAUhD,KAAKyO,IAAIL,GAAO,EACvC,CACLxC,IAAK,IAAIqB,EAAG,GACZnB,IAAK9L,MAKU,IAAfoO,EAAIpL,OACO,QAATzB,EACK,CACLqK,IAAK5L,KAAKme,KAAK/P,EAAIb,MAAM,IACzBzB,IAAK,MAII,QAATvK,EACK,CACLqK,IAAK,KACLE,IAAK,IAAImB,EAAGjN,KAAKiR,KAAK7C,EAAIb,MAAM,MAI7B,CACL3B,IAAK5L,KAAKme,KAAK/P,EAAIb,MAAM,IACzBzB,IAAK,IAAImB,EAAGjN,KAAKiR,KAAK7C,EAAIb,MAAM,MAI7BvN,KAAK6d,SAASzP,EAAK7M,GAlF1B,IAAIqK,EAAKE,EAAK6F,GAsFhB1E,EAAGjL,UAAU4J,IAAM,SAAcwC,GAC/B,OAAOpO,KAAKie,OAAO7P,EAAK,OAAO,GAAOxC,KAIxCqB,EAAGjL,UAAU8J,IAAM,SAAcsC,GAC/B,OAAOpO,KAAKie,OAAO7P,EAAK,OAAO,GAAOtC,KAGxCmB,EAAGjL,UAAUoc,KAAO,SAAehQ,GACjC,OAAOpO,KAAKie,OAAO7P,EAAK,OAAO,GAAMtC,KAIvCmB,EAAGjL,UAAUqc,SAAW,SAAmBjQ,GACzC,IAAIkQ,EAAKte,KAAKie,OAAO7P,GAGrB,GAAIkQ,EAAGxS,IAAIJ,SAAU,OAAO4S,EAAG1S,IAE/B,IAAIE,EAA0B,IAApBwS,EAAG1S,IAAI0B,SAAiBgR,EAAGxS,IAAIkI,KAAK5F,GAAOkQ,EAAGxS,IAEpDyS,EAAOnQ,EAAIiP,MAAM,GACjBmB,EAAKpQ,EAAIyD,MAAM,GACfpD,EAAM3C,EAAI2C,IAAI8P,GAGlB,OAAI9P,EAAM,GAAY,IAAP+P,GAAoB,IAAR/P,EAAkB6P,EAAG1S,IAGrB,IAApB0S,EAAG1S,IAAI0B,SAAiBgR,EAAG1S,IAAI2R,MAAM,GAAKe,EAAG1S,IAAI4G,MAAM,IAGhEvF,EAAGjL,UAAUiP,KAAO,SAAe7C,GACjC3B,EAAO2B,GAAO,UAId,IAHA,IAAIlM,GAAK,GAAK,IAAMkM,EAEhBqQ,EAAM,EACDre,EAAIJ,KAAKgD,OAAS,EAAG5C,GAAK,EAAGA,IACpCqe,GAAOvc,EAAIuc,GAAuB,EAAhBze,KAAKuN,MAAMnN,KAAWgO,EAG1C,OAAOqQ,GAITxR,EAAGjL,UAAUkP,MAAQ,SAAgB9C,GACnC3B,EAAO2B,GAAO,UAGd,IADA,IAAIqC,EAAQ,EACHrQ,EAAIJ,KAAKgD,OAAS,EAAG5C,GAAK,EAAGA,IAAK,CACzC,IAAI+O,GAAqB,EAAhBnP,KAAKuN,MAAMnN,IAAkB,SAARqQ,EAC9BzQ,KAAKuN,MAAMnN,GAAM+O,EAAIf,EAAO,EAC5BqC,EAAQtB,EAAIf,EAGd,OAAOpO,KAAK+O,SAGd9B,EAAGjL,UAAUmc,KAAO,SAAe/P,GACjC,OAAOpO,KAAK4P,QAAQsB,MAAM9C,IAG5BnB,EAAGjL,UAAU0c,KAAO,SAAexc,GACjCuK,EAAsB,IAAfvK,EAAEoL,UACTb,GAAQvK,EAAEwJ,UAEV,IAAI4N,EAAItZ,KACJuZ,EAAIrX,EAAE0N,QAGR0J,EADiB,IAAfA,EAAEhM,SACAgM,EAAE8E,KAAKlc,GAEPoX,EAAE1J,QAaR,IATA,IAAI+O,EAAI,IAAI1R,EAAG,GACX2R,EAAI,IAAI3R,EAAG,GAGX4R,EAAI,IAAI5R,EAAG,GACX6R,EAAI,IAAI7R,EAAG,GAEX8R,EAAI,EAEDzF,EAAE0F,UAAYzF,EAAEyF,UACrB1F,EAAExH,OAAO,GACTyH,EAAEzH,OAAO,KACPiN,EAMJ,IAHA,IAAIE,EAAK1F,EAAE3J,QACPsP,EAAK5F,EAAE1J,SAEH0J,EAAE5N,UAAU,CAClB,IAAK,IAAItL,EAAI,EAAG+e,EAAK,EAAyB,IAArB7F,EAAE/L,MAAM,GAAK4R,IAAa/e,EAAI,KAAMA,EAAG+e,IAAO,GACvE,GAAI/e,EAAI,EAEN,IADAkZ,EAAExH,OAAO1R,GACFA,KAAM,IACPue,EAAES,SAAWR,EAAEQ,WACjBT,EAAE5K,KAAKkL,GACPL,EAAE5K,KAAKkL,IAGTP,EAAE7M,OAAO,GACT8M,EAAE9M,OAAO,GAIb,IAAK,IAAI5C,EAAI,EAAGmQ,EAAK,EAAyB,IAArB9F,EAAEhM,MAAM,GAAK8R,IAAanQ,EAAI,KAAMA,EAAGmQ,IAAO,GACvE,GAAInQ,EAAI,EAEN,IADAqK,EAAEzH,OAAO5C,GACFA,KAAM,IACP2P,EAAEO,SAAWN,EAAEM,WACjBP,EAAE9K,KAAKkL,GACPH,EAAE9K,KAAKkL,IAGTL,EAAE/M,OAAO,GACTgN,EAAEhN,OAAO,GAITwH,EAAE7K,IAAI8K,IAAM,GACdD,EAAEtF,KAAKuF,GACPoF,EAAE3K,KAAK6K,GACPD,EAAE5K,KAAK8K,KAEPvF,EAAEvF,KAAKsF,GACPuF,EAAE7K,KAAK2K,GACPG,EAAE9K,KAAK4K,IAIX,MAAO,CACLtO,EAAGuO,EACHtO,EAAGuO,EACHQ,IAAK/F,EAAEgD,OAAOwC,KAOlB9R,EAAGjL,UAAUud,OAAS,SAAiBrd,GACrCuK,EAAsB,IAAfvK,EAAEoL,UACTb,GAAQvK,EAAEwJ,UAEV,IAAI4E,EAAItQ,KACJuQ,EAAIrO,EAAE0N,QAGRU,EADiB,IAAfA,EAAEhD,SACAgD,EAAE8N,KAAKlc,GAEPoO,EAAEV,QAQR,IALA,IAuCI+B,EAvCA6N,EAAK,IAAIvS,EAAG,GACZwS,EAAK,IAAIxS,EAAG,GAEZyS,EAAQnP,EAAEX,QAEPU,EAAEqP,KAAK,GAAK,GAAKpP,EAAEoP,KAAK,GAAK,GAAG,CACrC,IAAK,IAAIvf,EAAI,EAAG+e,EAAK,EAAyB,IAArB7O,EAAE/C,MAAM,GAAK4R,IAAa/e,EAAI,KAAMA,EAAG+e,IAAO,GACvE,GAAI/e,EAAI,EAEN,IADAkQ,EAAEwB,OAAO1R,GACFA,KAAM,GACPof,EAAGJ,SACLI,EAAGzL,KAAK2L,GAGVF,EAAG1N,OAAO,GAId,IAAK,IAAI5C,EAAI,EAAGmQ,EAAK,EAAyB,IAArB9O,EAAEhD,MAAM,GAAK8R,IAAanQ,EAAI,KAAMA,EAAGmQ,IAAO,GACvE,GAAInQ,EAAI,EAEN,IADAqB,EAAEuB,OAAO5C,GACFA,KAAM,GACPuQ,EAAGL,SACLK,EAAG1L,KAAK2L,GAGVD,EAAG3N,OAAO,GAIVxB,EAAE7B,IAAI8B,IAAM,GACdD,EAAE0D,KAAKzD,GACPiP,EAAGxL,KAAKyL,KAERlP,EAAEyD,KAAK1D,GACPmP,EAAGzL,KAAKwL,IAeZ,OATE7N,EADgB,IAAdrB,EAAEqP,KAAK,GACHH,EAEAC,GAGAE,KAAK,GAAK,GAChBhO,EAAIoC,KAAK7R,GAGJyP,GAGT1E,EAAGjL,UAAUsd,IAAM,SAAclR,GAC/B,GAAIpO,KAAK0L,SAAU,OAAO0C,EAAIkE,MAC9B,GAAIlE,EAAI1C,SAAU,OAAO1L,KAAKsS,MAE9B,IAAIhC,EAAItQ,KAAK4P,QACTW,EAAInC,EAAIwB,QACZU,EAAEhD,SAAW,EACbiD,EAAEjD,SAAW,EAGb,IAAK,IAAIsQ,EAAQ,EAAGtN,EAAE0O,UAAYzO,EAAEyO,SAAUpB,IAC5CtN,EAAEwB,OAAO,GACTvB,EAAEuB,OAAO,GAGX,OAAG,CACD,KAAOxB,EAAE0O,UACP1O,EAAEwB,OAAO,GAEX,KAAOvB,EAAEyO,UACPzO,EAAEuB,OAAO,GAGX,IAAI5Q,EAAIoP,EAAE7B,IAAI8B,GACd,GAAIrP,EAAI,EAAG,CAET,IAAII,EAAIgP,EACRA,EAAIC,EACJA,EAAIjP,OACC,GAAU,IAANJ,GAAyB,IAAdqP,EAAEoP,KAAK,GAC3B,MAGFrP,EAAE0D,KAAKzD,GAGT,OAAOA,EAAEgM,OAAOqB,IAIlB3Q,EAAGjL,UAAU4d,KAAO,SAAexR,GACjC,OAAOpO,KAAK0e,KAAKtQ,GAAKkC,EAAE8N,KAAKhQ,IAG/BnB,EAAGjL,UAAUgd,OAAS,WACpB,OAA+B,IAAP,EAAhBhf,KAAKuN,MAAM,KAGrBN,EAAGjL,UAAUod,MAAQ,WACnB,OAA+B,IAAP,EAAhBpf,KAAKuN,MAAM,KAIrBN,EAAGjL,UAAU6P,MAAQ,SAAgBzD,GACnC,OAAOpO,KAAKuN,MAAM,GAAKa,GAIzBnB,EAAGjL,UAAU6d,MAAQ,SAAgBhM,GACnCpH,EAAsB,iBAARoH,GACd,IAAI3S,EAAI2S,EAAM,GACV1R,GAAK0R,EAAM3S,GAAK,GAChB0Q,EAAI,GAAK1Q,EAGb,GAAIlB,KAAKgD,QAAUb,EAGjB,OAFAnC,KAAK6P,QAAQ1N,EAAI,GACjBnC,KAAKuN,MAAMpL,IAAMyP,EACV5R,KAKT,IADA,IAAIyQ,EAAQmB,EACHxR,EAAI+B,EAAa,IAAVsO,GAAerQ,EAAIJ,KAAKgD,OAAQ5C,IAAK,CACnD,IAAI+O,EAAoB,EAAhBnP,KAAKuN,MAAMnN,GAEnBqQ,GADAtB,GAAKsB,KACS,GACdtB,GAAK,SACLnP,KAAKuN,MAAMnN,GAAK+O,EAMlB,OAJc,IAAVsB,IACFzQ,KAAKuN,MAAMnN,GAAKqQ,EAChBzQ,KAAKgD,UAEAhD,MAGTiN,EAAGjL,UAAU0J,OAAS,WACpB,OAAuB,IAAhB1L,KAAKgD,QAAkC,IAAlBhD,KAAKuN,MAAM,IAGzCN,EAAGjL,UAAU2d,KAAO,SAAevR,GACjC,IAOIuD,EAPArE,EAAWc,EAAM,EAErB,GAAsB,IAAlBpO,KAAKsN,WAAmBA,EAAU,OAAQ,EAC9C,GAAsB,IAAlBtN,KAAKsN,UAAkBA,EAAU,OAAO,EAK5C,GAHAtN,KAAK+O,QAGD/O,KAAKgD,OAAS,EAChB2O,EAAM,MACD,CACDrE,IACFc,GAAOA,GAGT3B,EAAO2B,GAAO,SAAW,qBAEzB,IAAIe,EAAoB,EAAhBnP,KAAKuN,MAAM,GACnBoE,EAAMxC,IAAMf,EAAM,EAAIe,EAAIf,GAAO,EAAI,EAEvC,OAAsB,IAAlBpO,KAAKsN,SAA8B,GAANqE,EAC1BA,GAOT1E,EAAGjL,UAAUyM,IAAM,SAAcL,GAC/B,GAAsB,IAAlBpO,KAAKsN,UAAmC,IAAjBc,EAAId,SAAgB,OAAQ,EACvD,GAAsB,IAAlBtN,KAAKsN,UAAmC,IAAjBc,EAAId,SAAgB,OAAO,EAEtD,IAAIqE,EAAM3R,KAAK8f,KAAK1R,GACpB,OAAsB,IAAlBpO,KAAKsN,SAA8B,GAANqE,EAC1BA,GAIT1E,EAAGjL,UAAU8d,KAAO,SAAe1R,GAEjC,GAAIpO,KAAKgD,OAASoL,EAAIpL,OAAQ,OAAO,EACrC,GAAIhD,KAAKgD,OAASoL,EAAIpL,OAAQ,OAAQ,EAGtC,IADA,IAAI2O,EAAM,EACDvR,EAAIJ,KAAKgD,OAAS,EAAG5C,GAAK,EAAGA,IAAK,CACzC,IAAIkQ,EAAoB,EAAhBtQ,KAAKuN,MAAMnN,GACfmQ,EAAmB,EAAfnC,EAAIb,MAAMnN,GAElB,GAAIkQ,IAAMC,EAAV,CACID,EAAIC,EACNoB,GAAO,EACErB,EAAIC,IACboB,EAAM,GAER,OAEF,OAAOA,GAGT1E,EAAGjL,UAAU+d,IAAM,SAAc3R,GAC/B,OAA0B,IAAnBpO,KAAK2f,KAAKvR,IAGnBnB,EAAGjL,UAAUoK,GAAK,SAAagC,GAC7B,OAAyB,IAAlBpO,KAAKyO,IAAIL,IAGlBnB,EAAGjL,UAAUge,KAAO,SAAe5R,GACjC,OAAOpO,KAAK2f,KAAKvR,IAAQ,GAG3BnB,EAAGjL,UAAUqK,IAAM,SAAc+B,GAC/B,OAAOpO,KAAKyO,IAAIL,IAAQ,GAG1BnB,EAAGjL,UAAUie,IAAM,SAAc7R,GAC/B,OAA2B,IAApBpO,KAAK2f,KAAKvR,IAGnBnB,EAAGjL,UAAUkK,GAAK,SAAakC,GAC7B,OAA0B,IAAnBpO,KAAKyO,IAAIL,IAGlBnB,EAAGjL,UAAUke,KAAO,SAAe9R,GACjC,OAAOpO,KAAK2f,KAAKvR,IAAQ,GAG3BnB,EAAGjL,UAAUmK,IAAM,SAAciC,GAC/B,OAAOpO,KAAKyO,IAAIL,IAAQ,GAG1BnB,EAAGjL,UAAUme,IAAM,SAAc/R,GAC/B,OAA0B,IAAnBpO,KAAK2f,KAAKvR,IAGnBnB,EAAGjL,UAAUiK,GAAK,SAAamC,GAC7B,OAAyB,IAAlBpO,KAAKyO,IAAIL,IAOlBnB,EAAGO,IAAM,SAAcY,GACrB,OAAO,IAAIgS,EAAIhS,IAGjBnB,EAAGjL,UAAUqe,MAAQ,SAAgBC,GAGnC,OAFA7T,GAAQzM,KAAKwN,IAAK,yCAClBf,EAAyB,IAAlBzM,KAAKsN,SAAgB,iCACrBgT,EAAIC,UAAUvgB,MAAMwgB,UAAUF,IAGvCrT,EAAGjL,UAAUye,QAAU,WAErB,OADAhU,EAAOzM,KAAKwN,IAAK,wDACVxN,KAAKwN,IAAIkT,YAAY1gB,OAG9BiN,EAAGjL,UAAUwe,UAAY,SAAoBF,GAE3C,OADAtgB,KAAKwN,IAAM8S,EACJtgB,MAGTiN,EAAGjL,UAAU2e,SAAW,SAAmBL,GAEzC,OADA7T,GAAQzM,KAAKwN,IAAK,yCACXxN,KAAKwgB,UAAUF,IAGxBrT,EAAGjL,UAAU4e,OAAS,SAAiBxS,GAErC,OADA3B,EAAOzM,KAAKwN,IAAK,sCACVxN,KAAKwN,IAAIhC,IAAIxL,KAAMoO,IAG5BnB,EAAGjL,UAAU6e,QAAU,SAAkBzS,GAEvC,OADA3B,EAAOzM,KAAKwN,IAAK,uCACVxN,KAAKwN,IAAIuG,KAAK/T,KAAMoO,IAG7BnB,EAAGjL,UAAU8e,OAAS,SAAiB1S,GAErC,OADA3B,EAAOzM,KAAKwN,IAAK,sCACVxN,KAAKwN,IAAI/B,IAAIzL,KAAMoO,IAG5BnB,EAAGjL,UAAU+e,QAAU,SAAkB3S,GAEvC,OADA3B,EAAOzM,KAAKwN,IAAK,uCACVxN,KAAKwN,IAAIwG,KAAKhU,KAAMoO,IAG7BnB,EAAGjL,UAAUgf,OAAS,SAAiB5S,GAErC,OADA3B,EAAOzM,KAAKwN,IAAK,sCACVxN,KAAKwN,IAAIyT,IAAIjhB,KAAMoO,IAG5BnB,EAAGjL,UAAUkf,OAAS,SAAiB9S,GAGrC,OAFA3B,EAAOzM,KAAKwN,IAAK,sCACjBxN,KAAKwN,IAAI2T,SAASnhB,KAAMoO,GACjBpO,KAAKwN,IAAI3B,IAAI7L,KAAMoO,IAG5BnB,EAAGjL,UAAUof,QAAU,SAAkBhT,GAGvC,OAFA3B,EAAOzM,KAAKwN,IAAK,sCACjBxN,KAAKwN,IAAI2T,SAASnhB,KAAMoO,GACjBpO,KAAKwN,IAAIwK,KAAKhY,KAAMoO,IAG7BnB,EAAGjL,UAAUqf,OAAS,WAGpB,OAFA5U,EAAOzM,KAAKwN,IAAK,sCACjBxN,KAAKwN,IAAI8T,SAASthB,MACXA,KAAKwN,IAAI4O,IAAIpc,OAGtBiN,EAAGjL,UAAUuf,QAAU,WAGrB,OAFA9U,EAAOzM,KAAKwN,IAAK,uCACjBxN,KAAKwN,IAAI8T,SAASthB,MACXA,KAAKwN,IAAI6O,KAAKrc,OAIvBiN,EAAGjL,UAAUwf,QAAU,WAGrB,OAFA/U,EAAOzM,KAAKwN,IAAK,uCACjBxN,KAAKwN,IAAI8T,SAASthB,MACXA,KAAKwN,IAAIiU,KAAKzhB,OAGvBiN,EAAGjL,UAAU0f,QAAU,WAGrB,OAFAjV,EAAOzM,KAAKwN,IAAK,uCACjBxN,KAAKwN,IAAI8T,SAASthB,MACXA,KAAKwN,IAAIoS,KAAK5f,OAIvBiN,EAAGjL,UAAU2f,OAAS,WAGpB,OAFAlV,EAAOzM,KAAKwN,IAAK,sCACjBxN,KAAKwN,IAAI8T,SAASthB,MACXA,KAAKwN,IAAIqF,IAAI7S,OAGtBiN,EAAGjL,UAAU4f,OAAS,SAAiBxT,GAGrC,OAFA3B,EAAOzM,KAAKwN,MAAQY,EAAIZ,IAAK,qBAC7BxN,KAAKwN,IAAI8T,SAASthB,MACXA,KAAKwN,IAAIzB,IAAI/L,KAAMoO,IAI5B,IAAIyT,EAAS,CACXC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,MAIV,SAASC,EAAQvhB,EAAMuB,GAErBlC,KAAKW,KAAOA,EACZX,KAAKkC,EAAI,IAAI+K,EAAG/K,EAAG,IACnBlC,KAAK6B,EAAI7B,KAAKkC,EAAEgQ,YAChBlS,KAAK0Q,EAAI,IAAIzD,EAAG,GAAGsP,OAAOvc,KAAK6B,GAAGmS,KAAKhU,KAAKkC,GAE5ClC,KAAKmiB,IAAMniB,KAAKoiB,OA2ClB,SAASC,IACPH,EAAO3hB,KACLP,KACA,OACA,2EA+DJ,SAASsiB,IACPJ,EAAO3hB,KACLP,KACA,OACA,kEAIJ,SAASuiB,IACPL,EAAO3hB,KACLP,KACA,OACA,yDAIJ,SAASwiB,IAEPN,EAAO3hB,KACLP,KACA,QACA,uEA8CJ,SAASogB,EAAK5f,GACZ,GAAiB,iBAANA,EAAgB,CACzB,IAAIiiB,EAAQxV,EAAGyV,OAAOliB,GACtBR,KAAKQ,EAAIiiB,EAAMvgB,EACflC,KAAKyiB,MAAQA,OAEbhW,EAAOjM,EAAEuf,IAAI,GAAI,kCACjB/f,KAAKQ,EAAIA,EACTR,KAAKyiB,MAAQ,KAkOjB,SAASE,EAAMniB,GACb4f,EAAI7f,KAAKP,KAAMQ,GAEfR,KAAK4d,MAAQ5d,KAAKQ,EAAE0R,YAChBlS,KAAK4d,MAAQ,IAAO,IACtB5d,KAAK4d,OAAS,GAAM5d,KAAK4d,MAAQ,IAGnC5d,KAAKkB,EAAI,IAAI+L,EAAG,GAAGsP,OAAOvc,KAAK4d,OAC/B5d,KAAKwe,GAAKxe,KAAK4iB,KAAK5iB,KAAKkB,EAAEkb,OAC3Bpc,KAAK6iB,KAAO7iB,KAAKkB,EAAEqe,OAAOvf,KAAKQ,GAE/BR,KAAK8iB,KAAO9iB,KAAK6iB,KAAKhX,IAAI7L,KAAKkB,GAAGqc,MAAM,GAAG3R,IAAI5L,KAAKQ,GACpDR,KAAK8iB,KAAO9iB,KAAK8iB,KAAK1E,KAAKpe,KAAKkB,GAChClB,KAAK8iB,KAAO9iB,KAAKkB,EAAEuK,IAAIzL,KAAK8iB,MAta9BZ,EAAOlgB,UAAUogB,KAAO,WACtB,IAAID,EAAM,IAAIlV,EAAG,MAEjB,OADAkV,EAAI5U,MAAQ,IAAI7K,MAAMsC,KAAKiK,KAAKjP,KAAK6B,EAAI,KAClCsgB,GAGTD,EAAOlgB,UAAU+gB,QAAU,SAAkB3U,GAG3C,IACI4U,EADA9hB,EAAIkN,EAGR,GACEpO,KAAKijB,MAAM/hB,EAAGlB,KAAKmiB,KAGnBa,GADA9hB,GADAA,EAAIlB,KAAKkjB,MAAMhiB,IACT6S,KAAK/T,KAAKmiB,MACPjQ,kBACF8Q,EAAOhjB,KAAK6B,GAErB,IAAI4M,EAAMuU,EAAOhjB,KAAK6B,GAAK,EAAIX,EAAE4e,KAAK9f,KAAKkC,GAU3C,OATY,IAARuM,GACFvN,EAAEqM,MAAM,GAAK,EACbrM,EAAE8B,OAAS,GACFyL,EAAM,EACfvN,EAAE8S,KAAKhU,KAAKkC,GAEZhB,EAAE6N,QAGG7N,GAGTghB,EAAOlgB,UAAUihB,MAAQ,SAAgBE,EAAO9S,GAC9C8S,EAAMrR,OAAO9R,KAAK6B,EAAG,EAAGwO,IAG1B6R,EAAOlgB,UAAUkhB,MAAQ,SAAgB9U,GACvC,OAAOA,EAAI4J,KAAKhY,KAAK0Q,IASvB9D,EAASyV,EAAMH,GAEfG,EAAKrgB,UAAUihB,MAAQ,SAAgBE,EAAOC,GAK5C,IAHA,IAEIC,EAASre,KAAKiJ,IAAIkV,EAAMngB,OAAQ,GAC3B5C,EAAI,EAAGA,EAAIijB,EAAQjjB,IAC1BgjB,EAAO7V,MAAMnN,GAAK+iB,EAAM5V,MAAMnN,GAIhC,GAFAgjB,EAAOpgB,OAASqgB,EAEZF,EAAMngB,QAAU,EAGlB,OAFAmgB,EAAM5V,MAAM,GAAK,OACjB4V,EAAMngB,OAAS,GAKjB,IAAIsgB,EAAOH,EAAM5V,MAAM,GAGvB,IAFA6V,EAAO7V,MAAM6V,EAAOpgB,UAhBT,QAgBqBsgB,EAE3BljB,EAAI,GAAIA,EAAI+iB,EAAMngB,OAAQ5C,IAAK,CAClC,IAAImjB,EAAwB,EAAjBJ,EAAM5V,MAAMnN,GACvB+iB,EAAM5V,MAAMnN,EAAI,KApBP,QAoBemjB,IAAgB,EAAMD,IAAS,GACvDA,EAAOC,EAETD,KAAU,GACVH,EAAM5V,MAAMnN,EAAI,IAAMkjB,EACT,IAATA,GAAcH,EAAMngB,OAAS,GAC/BmgB,EAAMngB,QAAU,GAEhBmgB,EAAMngB,QAAU,GAIpBqf,EAAKrgB,UAAUkhB,MAAQ,SAAgB9U,GAErCA,EAAIb,MAAMa,EAAIpL,QAAU,EACxBoL,EAAIb,MAAMa,EAAIpL,OAAS,GAAK,EAC5BoL,EAAIpL,QAAU,EAId,IADA,IAAIwN,EAAK,EACApQ,EAAI,EAAGA,EAAIgO,EAAIpL,OAAQ5C,IAAK,CACnC,IAAI+O,EAAmB,EAAff,EAAIb,MAAMnN,GAClBoQ,GAAU,IAAJrB,EACNf,EAAIb,MAAMnN,GAAU,SAALoQ,EACfA,EAAS,GAAJrB,GAAaqB,EAAK,SAAa,GAUtC,OANkC,IAA9BpC,EAAIb,MAAMa,EAAIpL,OAAS,KACzBoL,EAAIpL,SAC8B,IAA9BoL,EAAIb,MAAMa,EAAIpL,OAAS,IACzBoL,EAAIpL,UAGDoL,GASTxB,EAAS0V,EAAMJ,GAQftV,EAAS2V,EAAML,GASftV,EAAS4V,EAAQN,GAEjBM,EAAOxgB,UAAUkhB,MAAQ,SAAgB9U,GAGvC,IADA,IAAIqC,EAAQ,EACHrQ,EAAI,EAAGA,EAAIgO,EAAIpL,OAAQ5C,IAAK,CACnC,IAAI+R,EAA0B,IAAL,EAAf/D,EAAIb,MAAMnN,IAAiBqQ,EACjCD,EAAU,SAAL2B,EACTA,KAAQ,GAER/D,EAAIb,MAAMnN,GAAKoQ,EACfC,EAAQ0B,EAKV,OAHc,IAAV1B,IACFrC,EAAIb,MAAMa,EAAIpL,UAAYyN,GAErBrC,GAITnB,EAAGyV,OAAS,SAAgB/hB,GAE1B,GAAIkhB,EAAOlhB,GAAO,OAAOkhB,EAAOlhB,GAEhC,IAAI8hB,EACJ,GAAa,SAAT9hB,EACF8hB,EAAQ,IAAIJ,OACP,GAAa,SAAT1hB,EACT8hB,EAAQ,IAAIH,OACP,GAAa,SAAT3hB,EACT8hB,EAAQ,IAAIF,MACP,IAAa,WAAT5hB,EAGT,MAAM,IAAIwG,MAAM,iBAAmBxG,GAFnC8hB,EAAQ,IAAID,EAMd,OAFAX,EAAOlhB,GAAQ8hB,EAERA,GAkBTrC,EAAIpe,UAAUsf,SAAW,SAAmBhR,GAC1C7D,EAAsB,IAAf6D,EAAEhD,SAAgB,iCACzBb,EAAO6D,EAAE9C,IAAK,oCAGhB4S,EAAIpe,UAAUmf,SAAW,SAAmB7Q,EAAGC,GAC7C9D,EAAqC,IAA7B6D,EAAEhD,SAAWiD,EAAEjD,UAAiB,iCACxCb,EAAO6D,EAAE9C,KAAO8C,EAAE9C,MAAQ+C,EAAE/C,IAC1B,oCAGJ4S,EAAIpe,UAAU4gB,KAAO,SAAetS,GAClC,OAAItQ,KAAKyiB,MAAcziB,KAAKyiB,MAAMM,QAAQzS,GAAGkQ,UAAUxgB,MAChDsQ,EAAE8N,KAAKpe,KAAKQ,GAAGggB,UAAUxgB,OAGlCogB,EAAIpe,UAAU6Q,IAAM,SAAcvC,GAChC,OAAIA,EAAE5E,SACG4E,EAAEV,QAGJ5P,KAAKQ,EAAEiL,IAAI6E,GAAGkQ,UAAUxgB,OAGjCogB,EAAIpe,UAAUwJ,IAAM,SAAc8E,EAAGC,GACnCvQ,KAAKmhB,SAAS7Q,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAE9E,IAAI+E,GAIhB,OAHIoB,EAAIlD,IAAIzO,KAAKQ,IAAM,GACrBmR,EAAIqC,KAAKhU,KAAKQ,GAETmR,EAAI6O,UAAUxgB,OAGvBogB,EAAIpe,UAAU+R,KAAO,SAAezD,EAAGC,GACrCvQ,KAAKmhB,SAAS7Q,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAEyD,KAAKxD,GAIjB,OAHIoB,EAAIlD,IAAIzO,KAAKQ,IAAM,GACrBmR,EAAIqC,KAAKhU,KAAKQ,GAETmR,GAGTyO,EAAIpe,UAAUyJ,IAAM,SAAc6E,EAAGC,GACnCvQ,KAAKmhB,SAAS7Q,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAE7E,IAAI8E,GAIhB,OAHIoB,EAAIgO,KAAK,GAAK,GAChBhO,EAAIoC,KAAK/T,KAAKQ,GAETmR,EAAI6O,UAAUxgB,OAGvBogB,EAAIpe,UAAUgS,KAAO,SAAe1D,EAAGC,GACrCvQ,KAAKmhB,SAAS7Q,EAAGC,GAEjB,IAAIoB,EAAMrB,EAAE0D,KAAKzD,GAIjB,OAHIoB,EAAIgO,KAAK,GAAK,GAChBhO,EAAIoC,KAAK/T,KAAKQ,GAETmR,GAGTyO,EAAIpe,UAAUif,IAAM,SAAc3Q,EAAGlC,GAEnC,OADApO,KAAKshB,SAAShR,GACPtQ,KAAK4iB,KAAKtS,EAAE6M,MAAM/O,KAG3BgS,EAAIpe,UAAUgW,KAAO,SAAe1H,EAAGC,GAErC,OADAvQ,KAAKmhB,SAAS7Q,EAAGC,GACVvQ,KAAK4iB,KAAKtS,EAAE0H,KAAKzH,KAG1B6P,EAAIpe,UAAU6J,IAAM,SAAcyE,EAAGC,GAEnC,OADAvQ,KAAKmhB,SAAS7Q,EAAGC,GACVvQ,KAAK4iB,KAAKtS,EAAEzE,IAAI0E,KAGzB6P,EAAIpe,UAAUqa,KAAO,SAAe/L,GAClC,OAAOtQ,KAAKgY,KAAK1H,EAAGA,EAAEV,UAGxBwQ,EAAIpe,UAAUoa,IAAM,SAAc9L,GAChC,OAAOtQ,KAAK6L,IAAIyE,EAAGA,IAGrB8P,EAAIpe,UAAUyf,KAAO,SAAenR,GAClC,GAAIA,EAAE5E,SAAU,OAAO4E,EAAEV,QAEzB,IAAI4T,EAAOxjB,KAAKQ,EAAEqR,MAAM,GAIxB,GAHApF,EAAO+W,EAAO,GAAM,GAGP,IAATA,EAAY,CACd,IAAIzX,EAAM/L,KAAKQ,EAAEgL,IAAI,IAAIyB,EAAG,IAAI6E,OAAO,GACvC,OAAO9R,KAAK+L,IAAIuE,EAAGvE,GAQrB,IAFA,IAAI6F,EAAI5R,KAAKQ,EAAEid,KAAK,GAChBtb,EAAI,GACAyP,EAAElG,UAA2B,IAAfkG,EAAEC,MAAM,IAC5B1P,IACAyP,EAAEE,OAAO,GAEXrF,GAAQmF,EAAElG,UAEV,IAAI+X,EAAM,IAAIxW,EAAG,GAAGoT,MAAMrgB,MACtB0jB,EAAOD,EAAI9B,SAIXgC,EAAO3jB,KAAKQ,EAAEid,KAAK,GAAG3L,OAAO,GAC7B8R,EAAI5jB,KAAKQ,EAAE0R,YAGf,IAFA0R,EAAI,IAAI3W,EAAG,EAAI2W,EAAIA,GAAGvD,MAAMrgB,MAEW,IAAhCA,KAAK+L,IAAI6X,EAAGD,GAAMlV,IAAIiV,IAC3BE,EAAE/C,QAAQ6C,GAOZ,IAJA,IAAIjjB,EAAIT,KAAK+L,IAAI6X,EAAGhS,GAChB1Q,EAAIlB,KAAK+L,IAAIuE,EAAGsB,EAAE4L,KAAK,GAAG1L,OAAO,IACjCxQ,EAAItB,KAAK+L,IAAIuE,EAAGsB,GAChBpR,EAAI2B,EACc,IAAfb,EAAEmN,IAAIgV,IAAY,CAEvB,IADA,IAAItB,EAAM7gB,EACDlB,EAAI,EAAoB,IAAjB+hB,EAAI1T,IAAIgV,GAAYrjB,IAClC+hB,EAAMA,EAAId,SAEZ5U,EAAOrM,EAAII,GACX,IAAI+P,EAAIvQ,KAAK+L,IAAItL,EAAG,IAAIwM,EAAG,GAAGsP,OAAO/b,EAAIJ,EAAI,IAE7Cc,EAAIA,EAAEggB,OAAO3Q,GACb9P,EAAI8P,EAAE8Q,SACN/f,EAAIA,EAAE4f,OAAOzgB,GACbD,EAAIJ,EAGN,OAAOc,GAGTkf,EAAIpe,UAAU4d,KAAO,SAAetP,GAClC,IAAIuT,EAAMvT,EAAEiP,OAAOvf,KAAKQ,GACxB,OAAqB,IAAjBqjB,EAAIvW,UACNuW,EAAIvW,SAAW,EACRtN,KAAK4iB,KAAKiB,GAAKlC,UAEf3hB,KAAK4iB,KAAKiB,IAIrBzD,EAAIpe,UAAU+J,IAAM,SAAcuE,EAAGlC,GACnC,GAAIA,EAAI1C,SAAU,OAAO,IAAIuB,EAAG,GAAGoT,MAAMrgB,MACzC,GAAoB,IAAhBoO,EAAIuR,KAAK,GAAU,OAAOrP,EAAEV,QAEhC,IACIkU,EAAM,IAAIphB,MAAM,IACpBohB,EAAI,GAAK,IAAI7W,EAAG,GAAGoT,MAAMrgB,MACzB8jB,EAAI,GAAKxT,EACT,IAAK,IAAIlQ,EAAI,EAAGA,EAAI0jB,EAAI9gB,OAAQ5C,IAC9B0jB,EAAI1jB,GAAKJ,KAAK6L,IAAIiY,EAAI1jB,EAAI,GAAIkQ,GAGhC,IAAIqB,EAAMmS,EAAI,GACVC,EAAU,EACVC,EAAa,EACbrf,EAAQyJ,EAAI8D,YAAc,GAK9B,IAJc,IAAVvN,IACFA,EAAQ,IAGLvE,EAAIgO,EAAIpL,OAAS,EAAG5C,GAAK,EAAGA,IAAK,CAEpC,IADA,IAAImP,EAAOnB,EAAIb,MAAMnN,GACZ8O,EAAIvK,EAAQ,EAAGuK,GAAK,EAAGA,IAAK,CACnC,IAAI2E,EAAOtE,GAAQL,EAAK,EACpByC,IAAQmS,EAAI,KACdnS,EAAM3R,KAAKoc,IAAIzK,IAGL,IAARkC,GAAyB,IAAZkQ,GAKjBA,IAAY,EACZA,GAAWlQ,GA9BE,MA+BbmQ,GACwC,IAAN5jB,GAAiB,IAAN8O,KAE7CyC,EAAM3R,KAAK6L,IAAI8F,EAAKmS,EAAIC,IACxBC,EAAa,EACbD,EAAU,IAXRC,EAAa,EAajBrf,EAAQ,GAGV,OAAOgN,GAGTyO,EAAIpe,UAAUue,UAAY,SAAoBnS,GAC5C,IAAIlN,EAAIkN,EAAIgQ,KAAKpe,KAAKQ,GAEtB,OAAOU,IAAMkN,EAAMlN,EAAE0O,QAAU1O,GAGjCkf,EAAIpe,UAAU0e,YAAc,SAAsBtS,GAChD,IAAIuD,EAAMvD,EAAIwB,QAEd,OADA+B,EAAInE,IAAM,KACHmE,GAOT1E,EAAGgX,KAAO,SAAe7V,GACvB,OAAO,IAAIuU,EAAKvU,IAmBlBxB,EAAS+V,EAAMvC,GAEfuC,EAAK3gB,UAAUue,UAAY,SAAoBnS,GAC7C,OAAOpO,KAAK4iB,KAAKxU,EAAI+O,MAAMnd,KAAK4d,SAGlC+E,EAAK3gB,UAAU0e,YAAc,SAAsBtS,GACjD,IAAIlN,EAAIlB,KAAK4iB,KAAKxU,EAAIvC,IAAI7L,KAAK6iB,OAE/B,OADA3hB,EAAEsM,IAAM,KACDtM,GAGTyhB,EAAK3gB,UAAUgW,KAAO,SAAe1H,EAAGC,GACtC,GAAID,EAAE5E,UAAY6E,EAAE7E,SAGlB,OAFA4E,EAAE/C,MAAM,GAAK,EACb+C,EAAEtN,OAAS,EACJsN,EAGT,IAAIhP,EAAIgP,EAAE0H,KAAKzH,GACX9P,EAAIa,EAAE0K,MAAMhM,KAAK4d,OAAO/R,IAAI7L,KAAK8iB,MAAMxF,OAAOtd,KAAK4d,OAAO/R,IAAI7L,KAAKQ,GACnE0jB,EAAI5iB,EAAE0S,KAAKvT,GAAGqR,OAAO9R,KAAK4d,OAC1BjM,EAAMuS,EAQV,OANIA,EAAEzV,IAAIzO,KAAKQ,IAAM,EACnBmR,EAAMuS,EAAElQ,KAAKhU,KAAKQ,GACT0jB,EAAEvE,KAAK,GAAK,IACrBhO,EAAMuS,EAAEnQ,KAAK/T,KAAKQ,IAGbmR,EAAI6O,UAAUxgB,OAGvB2iB,EAAK3gB,UAAU6J,IAAM,SAAcyE,EAAGC,GACpC,GAAID,EAAE5E,UAAY6E,EAAE7E,SAAU,OAAO,IAAIuB,EAAG,GAAGuT,UAAUxgB,MAEzD,IAAIsB,EAAIgP,EAAEzE,IAAI0E,GACV9P,EAAIa,EAAE0K,MAAMhM,KAAK4d,OAAO/R,IAAI7L,KAAK8iB,MAAMxF,OAAOtd,KAAK4d,OAAO/R,IAAI7L,KAAKQ,GACnE0jB,EAAI5iB,EAAE0S,KAAKvT,GAAGqR,OAAO9R,KAAK4d,OAC1BjM,EAAMuS,EAOV,OANIA,EAAEzV,IAAIzO,KAAKQ,IAAM,EACnBmR,EAAMuS,EAAElQ,KAAKhU,KAAKQ,GACT0jB,EAAEvE,KAAK,GAAK,IACrBhO,EAAMuS,EAAEnQ,KAAK/T,KAAKQ,IAGbmR,EAAI6O,UAAUxgB,OAGvB2iB,EAAK3gB,UAAU4d,KAAO,SAAetP,GAGnC,OADUtQ,KAAK4iB,KAAKtS,EAAEiP,OAAOvf,KAAKQ,GAAGqL,IAAI7L,KAAKwe,KACnCgC,UAAUxgB,OAh2GzB,CAk2GoCH,EAAQG,Q,mCCl2G5C,IAAI+e,EAGJA,EAAI,WACH,OAAO/e,KADJ,GAIJ,IAEC+e,EAAIA,GAAK,IAAIoF,SAAS,cAAb,GACR,MAAOvW,GAEc,iBAAXwW,SAAqBrF,EAAIqF,QAOrCvkB,EAAOD,QAAUmf,G,iBCnBjB;;;;;;;;;CASA,WACE,aAEA,IAAIrf,EAAyB,iBAAX0kB,OAAsBA,OAAS,IAClC1kB,EAAK2kB,oBAAyC,iBAAZC,GAAwBA,EAAQC,UAAYD,EAAQC,SAASC,OAE5G9kB,EAAO+kB,GAmET,IAjEA,IAAIC,GAAahlB,EAAKilB,sBAA0C,iBAAX9kB,GAAuBA,EAAOD,QAC/EglB,EAAY,mBAAmB3B,MAAM,IAIrC4B,EAAQ,CAAC,EAAG,EAAG,GAAI,IACnBC,EAAK,CAAC,EAAG,EAAG,MAAO,EAAG,MAAO,WAAY,WAAY,WAAY,MAAO,EAAG,WACrE,EAAG,WAAY,WAAY,MAAO,WAAY,IAAK,EAAG,IAAK,EAAG,WAAY,EAC1E,WAAY,EAAG,WAAY,EAAG,IAAK,WAAY,MAAO,WAAY,MAClE,WAAY,MAAO,WAAY,IAAK,WAAY,MAAO,EAAG,WAAY,WACtE,WAAY,WAAY,MAAO,WAAY,WAAY,EAAG,WAAY,YAC5EC,EAAO,CAAC,IAAK,IAAK,IAAK,KAEvBC,EAAe,CAAC,MAAO,SAAU,cAAe,SAEhDC,EAAqB,SAAUzI,EAAM1L,EAASoU,GAChD,OAAO,SAAU3d,GACf,OAAO,IAAI4d,EAAO3I,EAAM1L,EAAS0L,GAAM4I,OAAO7d,GAAS2d,OAIvDG,EAA0B,SAAU7I,EAAM1L,EAASoU,GACrD,OAAO,SAAU3d,EAAS+d,GACxB,OAAO,IAAIH,EAAO3I,EAAM1L,EAASwU,GAAYF,OAAO7d,GAAS2d,OAI7DK,EAAe,SAAU/I,EAAM1L,GACjC,IAAI0U,EAASP,EAAmBzI,EAAM1L,EAAS,OAC/C0U,EAAO9jB,OAAS,WACd,OAAO,IAAIyjB,EAAO3I,EAAM1L,EAAS0L,IAEnCgJ,EAAOJ,OAAS,SAAU7d,GACxB,OAAOie,EAAO9jB,SAAS0jB,OAAO7d,IAEhC,IAAK,IAAInH,EAAI,EAAGA,EAAI4kB,EAAahiB,SAAU5C,EAAG,CAC5C,IAAIqlB,EAAOT,EAAa5kB,GACxBolB,EAAOC,GAAQR,EAAmBzI,EAAM1L,EAAS2U,GAEnD,OAAOD,GAkBLE,EAAa,CACf,CAAC/kB,KAAM,SAAUmQ,QAvDE,CAAC,EAAG,IAAK,MAAO,UAuDO0L,KAAMuI,EAAMQ,aAAcA,GACpE,CAAC5kB,KAAM,OAAQmQ,QAvDH,CAAC,EAAG,KAAM,OAAQ,WAuDG0L,KAAMuI,EAAMQ,aAAcA,GAC3D,CAAC5kB,KAAM,QAASmQ,QA1DE,CAAC,GAAI,KAAM,QAAS,WA0DE0L,KAhDzB,CAAC,IAAK,KAgDqC+I,aAlBpC,SAAU/I,EAAM1L,GACtC,IAAI0U,EAASH,EAAwB7I,EAAM1L,EAAS,OACpD0U,EAAO9jB,OAAS,SAAU4jB,GACxB,OAAO,IAAIH,EAAO3I,EAAM1L,EAASwU,IAEnCE,EAAOJ,OAAS,SAAU7d,EAAS+d,GACjC,OAAOE,EAAO9jB,OAAO4jB,GAAYF,OAAO7d,IAE1C,IAAK,IAAInH,EAAI,EAAGA,EAAI4kB,EAAahiB,SAAU5C,EAAG,CAC5C,IAAIqlB,EAAOT,EAAa5kB,GACxBolB,EAAOC,GAAQJ,EAAwB7I,EAAM1L,EAAS2U,GAExD,OAAOD,KASLG,EAAU,GAAIC,EAAc,GAEvBxlB,EAAI,EAAGA,EAAIslB,EAAW1iB,SAAU5C,EAGvC,IAFA,IAAIylB,EAAYH,EAAWtlB,GACvBoc,EAAQqJ,EAAUrJ,KACbtN,EAAI,EAAGA,EAAIsN,EAAKxZ,SAAUkM,EAAG,CACpC,IAAI4W,EAAaD,EAAUllB,KAAM,IAAM6b,EAAKtN,GAC5C0W,EAAYniB,KAAKqiB,GACjBH,EAAQG,GAAcD,EAAUN,aAAa/I,EAAKtN,GAAI2W,EAAU/U,SAIpE,SAASqU,EAAO3I,EAAM1L,EAASwU,GAC7BtlB,KAAK+lB,OAAS,GACd/lB,KAAKmC,EAAI,GACTnC,KAAK8Q,QAAUA,EACf9Q,KAAKslB,WAAaA,EAClBtlB,KAAKgmB,OAAQ,EACbhmB,KAAKimB,MAAQ,EACbjmB,KAAK2E,MAAQ,EACb3E,KAAKkmB,WAAc,MAAQ1J,GAAQ,IAAO,EAC1Cxc,KAAKmmB,UAAYnmB,KAAKkmB,YAAc,EACpClmB,KAAKomB,aAAed,GAAc,EAClCtlB,KAAKqmB,YAA2B,GAAbf,IAAoB,EAEvC,IAAK,IAAIllB,EAAI,EAAGA,EAAI,KAAMA,EACxBJ,KAAKmC,EAAE/B,GAAK,EAIhB+kB,EAAOnjB,UAAUojB,OAAS,SAAU7d,GAClC,IAAI+e,EAA+B,iBAAZ/e,EACnB+e,GAAa/e,EAAQrE,cAAgBqjB,cACvChf,EAAU,IAAI3E,WAAW2E,IAK3B,IAHA,IACuDnH,EAAG+H,EADtDnF,EAASuE,EAAQvE,OAAQ+iB,EAAS/lB,KAAK+lB,OAAQI,EAAYnmB,KAAKmmB,UAClED,EAAalmB,KAAKkmB,WAAYM,EAAQ,EAAGrkB,EAAInC,KAAKmC,EAE7CqkB,EAAQxjB,GAAQ,CACrB,GAAIhD,KAAKgmB,MAGP,IAFAhmB,KAAKgmB,OAAQ,EACbD,EAAO,GAAK/lB,KAAKimB,MACZ7lB,EAAI,EAAGA,EAAI8lB,EAAa,IAAK9lB,EAChC2lB,EAAO3lB,GAAK,EAGhB,GAAIkmB,EACF,IAAKlmB,EAAIJ,KAAK2E,MAAO6hB,EAAQxjB,GAAU5C,EAAI+lB,IAAaK,EACtDT,EAAO3lB,GAAK,IAAMmH,EAAQif,IAAU3B,EAAY,EAANzkB,UAG5C,IAAKA,EAAIJ,KAAK2E,MAAO6hB,EAAQxjB,GAAU5C,EAAI+lB,IAAaK,GACtDre,EAAOZ,EAAQ2G,WAAWsY,IACf,IACTT,EAAO3lB,GAAK,IAAM+H,GAAQ0c,EAAY,EAANzkB,KACvB+H,EAAO,MAChB4d,EAAO3lB,GAAK,KAAO,IAAQ+H,GAAQ,IAAO0c,EAAY,EAANzkB,KAChD2lB,EAAO3lB,GAAK,KAAO,IAAe,GAAP+H,IAAiB0c,EAAY,EAANzkB,MACzC+H,EAAO,OAAUA,GAAQ,OAClC4d,EAAO3lB,GAAK,KAAO,IAAQ+H,GAAQ,KAAQ0c,EAAY,EAANzkB,KACjD2lB,EAAO3lB,GAAK,KAAO,IAAS+H,GAAQ,EAAK,KAAU0c,EAAY,EAANzkB,KACzD2lB,EAAO3lB,GAAK,KAAO,IAAe,GAAP+H,IAAiB0c,EAAY,EAANzkB,OAElD+H,EAAO,QAAoB,KAAPA,IAAiB,GAAqC,KAA9BZ,EAAQ2G,aAAasY,IACjET,EAAO3lB,GAAK,KAAO,IAAQ+H,GAAQ,KAAQ0c,EAAY,EAANzkB,KACjD2lB,EAAO3lB,GAAK,KAAO,IAAS+H,GAAQ,GAAM,KAAU0c,EAAY,EAANzkB,KAC1D2lB,EAAO3lB,GAAK,KAAO,IAAS+H,GAAQ,EAAK,KAAU0c,EAAY,EAANzkB,KACzD2lB,EAAO3lB,GAAK,KAAO,IAAe,GAAP+H,IAAiB0c,EAAY,EAANzkB,MAKxD,GADAJ,KAAKymB,cAAgBrmB,EACjBA,GAAK+lB,EAAW,CAGlB,IAFAnmB,KAAK2E,MAAQvE,EAAI+lB,EACjBnmB,KAAKimB,MAAQF,EAAOG,GACf9lB,EAAI,EAAGA,EAAI8lB,IAAc9lB,EAC5B+B,EAAE/B,IAAM2lB,EAAO3lB,GAEjBsmB,EAAEvkB,GACFnC,KAAKgmB,OAAQ,OAEbhmB,KAAK2E,MAAQvE,EAGjB,OAAOJ,MAGTmlB,EAAOnjB,UAAU2kB,SAAW,WAC1B,IAAIZ,EAAS/lB,KAAK+lB,OAAQ3lB,EAAIJ,KAAKymB,cAAeP,EAAalmB,KAAKkmB,WAAY/jB,EAAInC,KAAKmC,EAEzF,GADA4jB,EAAO3lB,GAAK,IAAMJ,KAAK8Q,QAAY,EAAJ1Q,GAC3BJ,KAAKymB,gBAAkBzmB,KAAKmmB,UAE9B,IADAJ,EAAO,GAAKA,EAAOG,GACd9lB,EAAI,EAAGA,EAAI8lB,EAAa,IAAK9lB,EAChC2lB,EAAO3lB,GAAK,EAIhB,IADA2lB,EAAOG,EAAa,IAAM,WACrB9lB,EAAI,EAAGA,EAAI8lB,IAAc9lB,EAC5B+B,EAAE/B,IAAM2lB,EAAO3lB,GAEjBsmB,EAAEvkB,IAGJgjB,EAAOnjB,UAAU2G,SAAWwc,EAAOnjB,UAAU6B,IAAM,WACjD7D,KAAK2mB,WAKL,IAHA,IAEcV,EAFVC,EAAalmB,KAAKkmB,WAAY/jB,EAAInC,KAAKmC,EAAGikB,EAAepmB,KAAKomB,aAC9DC,EAAarmB,KAAKqmB,WAAYjmB,EAAI,EAAG8O,EAAI,EACzCrL,EAAM,GACHqL,EAAIkX,GAAc,CACvB,IAAKhmB,EAAI,EAAGA,EAAI8lB,GAAchX,EAAIkX,IAAgBhmB,IAAK8O,EACrD+W,EAAQ9jB,EAAE/B,GACVyD,GAAO+gB,EAAWqB,GAAS,EAAK,IAAQrB,EAAkB,GAARqB,GAC3CrB,EAAWqB,GAAS,GAAM,IAAQrB,EAAWqB,GAAS,EAAK,IAC3DrB,EAAWqB,GAAS,GAAM,IAAQrB,EAAWqB,GAAS,GAAM,IAC5DrB,EAAWqB,GAAS,GAAM,IAAQrB,EAAWqB,GAAS,GAAM,IAEjE/W,EAAIgX,GAAe,IACrBQ,EAAEvkB,GACF/B,EAAI,GAeR,OAZIimB,IACFJ,EAAQ9jB,EAAE/B,GACNimB,EAAa,IACfxiB,GAAO+gB,EAAWqB,GAAS,EAAK,IAAQrB,EAAkB,GAARqB,IAEhDI,EAAa,IACfxiB,GAAO+gB,EAAWqB,GAAS,GAAM,IAAQrB,EAAWqB,GAAS,EAAK,KAEhEI,EAAa,IACfxiB,GAAO+gB,EAAWqB,GAAS,GAAM,IAAQrB,EAAWqB,GAAS,GAAM,MAGhEpiB,GAGTshB,EAAOnjB,UAAU4kB,YAAc,WAC7B5mB,KAAK2mB,WAEL,IAGIE,EAHAX,EAAalmB,KAAKkmB,WAAY/jB,EAAInC,KAAKmC,EAAGikB,EAAepmB,KAAKomB,aAC9DC,EAAarmB,KAAKqmB,WAAYjmB,EAAI,EAAG8O,EAAI,EACzCjJ,EAAQjG,KAAKslB,YAAc,EAG7BuB,EADER,EACO,IAAIE,YAAaH,EAAe,GAAM,GAEtC,IAAIG,YAAYtgB,GAG3B,IADA,IAAI1D,EAAQ,IAAIukB,YAAYD,GACrB3X,EAAIkX,GAAc,CACvB,IAAKhmB,EAAI,EAAGA,EAAI8lB,GAAchX,EAAIkX,IAAgBhmB,IAAK8O,EACrD3M,EAAM2M,GAAK/M,EAAE/B,GAEX8O,EAAIgX,GAAe,GACrBQ,EAAEvkB,GAON,OAJIkkB,IACF9jB,EAAMnC,GAAK+B,EAAE/B,GACbymB,EAASA,EAAOrkB,MAAM,EAAGyD,IAEpB4gB,GAGT1B,EAAOnjB,UAAU6kB,OAAS1B,EAAOnjB,UAAU4kB,YAE3CzB,EAAOnjB,UAAU+kB,OAAS5B,EAAOnjB,UAAUO,MAAQ,WACjDvC,KAAK2mB,WAKL,IAHA,IAEgBniB,EAAQyhB,EAFpBC,EAAalmB,KAAKkmB,WAAY/jB,EAAInC,KAAKmC,EAAGikB,EAAepmB,KAAKomB,aAC9DC,EAAarmB,KAAKqmB,WAAYjmB,EAAI,EAAG8O,EAAI,EACzC3M,EAAQ,GACL2M,EAAIkX,GAAc,CACvB,IAAKhmB,EAAI,EAAGA,EAAI8lB,GAAchX,EAAIkX,IAAgBhmB,IAAK8O,EACrD1K,EAAS0K,GAAK,EACd+W,EAAQ9jB,EAAE/B,GACVmC,EAAMiC,GAAkB,IAARyhB,EAChB1jB,EAAMiC,EAAS,GAAMyhB,GAAS,EAAK,IACnC1jB,EAAMiC,EAAS,GAAMyhB,GAAS,GAAM,IACpC1jB,EAAMiC,EAAS,GAAMyhB,GAAS,GAAM,IAElC/W,EAAIgX,GAAe,GACrBQ,EAAEvkB,GAgBN,OAbIkkB,IACF7hB,EAAS0K,GAAK,EACd+W,EAAQ9jB,EAAE/B,GACNimB,EAAa,IACf9jB,EAAMiC,GAAkB,IAARyhB,GAEdI,EAAa,IACf9jB,EAAMiC,EAAS,GAAMyhB,GAAS,EAAK,KAEjCI,EAAa,IACf9jB,EAAMiC,EAAS,GAAMyhB,GAAS,GAAM,MAGjC1jB,GAGT,IAAImkB,EAAI,SAAUvkB,GAChB,IAAI2a,EAAGzc,EAAGwB,EAAGmlB,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC7CxR,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI8P,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC3EC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAC3EC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAAKC,GAC/E,IAAKpoB,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACvBmlB,EAAK7kB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC8kB,EAAK9kB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtC+kB,EAAK/kB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCglB,EAAKhlB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCilB,EAAKjlB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCklB,EAAKllB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtCmlB,EAAKnlB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACtColB,EAAKplB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAItC2a,GAHA0K,EAAKrlB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG3B+kB,GAAM,EAAMC,IAAO,IAC9B9mB,GAHAonB,EAAKtlB,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,MAG3BglB,GAAM,EAAMD,IAAO,IAC9B/kB,EAAE,IAAM2a,EACR3a,EAAE,IAAM9B,EACR8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACTyc,EAAIkK,GAAOI,GAAM,EAAMC,IAAO,IAC9BhnB,EAAI4mB,GAAOI,GAAM,EAAMD,IAAO,IAC9BjlB,EAAE,IAAM2a,EACR3a,EAAE,IAAM9B,EACR8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACTyc,EAAIoK,GAAOI,GAAM,EAAMC,IAAO,IAC9BlnB,EAAI8mB,GAAOI,GAAM,EAAMD,IAAO,IAC9BnlB,EAAE,IAAM2a,EACR3a,EAAE,IAAM9B,EACR8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACTyc,EAAIsK,GAAOI,GAAM,EAAMC,IAAO,IAC9BpnB,EAAIgnB,GAAOI,GAAM,EAAMD,IAAO,IAC9BrlB,EAAE,IAAM2a,EACR3a,EAAE,IAAM9B,EACR8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACTyc,EAAIwK,GAAON,GAAM,EAAMC,IAAO,IAC9B5mB,EAAIknB,GAAON,GAAM,EAAMD,IAAO,IAC9B7kB,EAAE,IAAM2a,EACR3a,EAAE,IAAM9B,EACR8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EACT8B,EAAE,KAAO2a,EACT3a,EAAE,KAAO9B,EAET4V,EAAK9T,EAAE,GACPiU,EAAKjU,EAAE,GACP6mB,EAAO7mB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC8mB,EAAO9mB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC2lB,EAAO3lB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC4lB,EAAO5lB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC2nB,GAAO3nB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC4nB,GAAO5nB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCymB,EAAOzmB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC0mB,EAAO1mB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCimB,EAAOjmB,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9BkmB,EAAOlmB,EAAE,IAAM,EAAMA,EAAE,KAAO,GAC9BoU,EAAMpU,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCuU,EAAMvU,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC+mB,EAAO/mB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCgnB,EAAOhnB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC6lB,EAAO7lB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC8lB,EAAO9lB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC6nB,GAAO7nB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC8nB,GAAO9nB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCqnB,GAAOrnB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/BsnB,GAAOtnB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/BmmB,EAAOnmB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChComB,EAAOpmB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC0U,EAAM1U,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChC6U,EAAM7U,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCinB,EAAOjnB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCknB,EAAOlnB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC+lB,EAAO/lB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCgmB,EAAOhmB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCulB,EAAOvlB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/BwlB,EAAOxlB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/BunB,GAAOvnB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCwnB,GAAOxnB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCqmB,EAAOrmB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCsmB,EAAOtmB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjCgV,EAAMhV,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCmV,EAAMnV,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCmnB,EAAOnnB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjConB,GAAOpnB,EAAE,KAAO,GAAOA,EAAE,MAAQ,EACjC2mB,EAAO3mB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/B4mB,EAAO5mB,EAAE,IAAM,GAAOA,EAAE,KAAO,EAC/BylB,EAAOzlB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjC0lB,EAAO1lB,EAAE,KAAO,GAAOA,EAAE,MAAQ,GACjCynB,GAAOznB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChC0nB,GAAO1nB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCumB,EAAOvmB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCwmB,EAAOxmB,EAAE,KAAO,EAAMA,EAAE,MAAQ,GAChCsV,EAAMtV,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAChCyV,EAAMzV,EAAE,KAAO,GAAOA,EAAE,MAAQ,GAEhCA,EAAE,GAAK8T,GAAOM,EAAKM,EACnB1U,EAAE,GAAKiU,GAAOM,EAAKM,EACnB7U,EAAE,IAAMulB,GAAQE,EAAME,EACtB3lB,EAAE,IAAMwlB,GAAQE,EAAME,EACtB5lB,EAAE,IAAMimB,GAAQE,EAAME,EACtBrmB,EAAE,IAAMkmB,GAAQE,EAAME,EACtBtmB,EAAE,IAAM2mB,GAAQE,EAAME,EACtB/mB,EAAE,IAAM4mB,GAAQE,EAAME,EACtBhnB,EAAE,IAAMqnB,IAAQE,GAAME,GACtBznB,EAAE,IAAMsnB,IAAQE,GAAME,GACtB1nB,EAAE,GAAKoU,GAAOM,EAAKM,EACnBhV,EAAE,GAAKuU,GAAOM,EAAKM,EACnBnV,EAAE,IAAMylB,GAAQE,EAAME,EACtB7lB,EAAE,IAAM0lB,GAAQE,EAAME,EACtB9lB,EAAE,IAAMmmB,GAAQE,EAAME,EACtBvmB,EAAE,IAAMomB,GAAQE,EAAME,EACtBxmB,EAAE,IAAM6mB,GAAQE,EAAME,EACtBjnB,EAAE,IAAM8mB,GAAQE,EAAME,EACtBlnB,EAAE,IAAMunB,IAAQE,GAAME,GACtB3nB,EAAE,IAAMwnB,IAAQE,GAAME,GACtB5nB,EAAE,GAAK0U,GAAOM,EAAKM,EACnBtV,EAAE,GAAK6U,GAAOM,EAAKM,EACnBzV,EAAE,IAAM2lB,GAAQE,EAAME,EACtB/lB,EAAE,IAAM4lB,GAAQE,EAAME,EACtBhmB,EAAE,IAAMqmB,GAAQE,EAAME,EACtBzmB,EAAE,IAAMsmB,GAAQE,EAAME,EACtB1mB,EAAE,IAAM+mB,GAAQE,EAAME,EACtBnnB,EAAE,IAAMgnB,GAAQE,EAAME,GACtBpnB,EAAE,IAAMynB,IAAQE,GAAME,GACtB7nB,EAAE,IAAM0nB,IAAQE,GAAME,GACtB9nB,EAAE,GAAKgV,GAAOM,EAAKxB,EACnB9T,EAAE,GAAKmV,GAAOM,EAAKxB,EACnBjU,EAAE,IAAM6lB,GAAQE,EAAMR,EACtBvlB,EAAE,IAAM8lB,GAAQE,EAAMR,EACtBxlB,EAAE,IAAMumB,GAAQE,EAAMR,EACtBjmB,EAAE,IAAMwmB,GAAQE,EAAMR,EACtBlmB,EAAE,IAAMinB,GAAQE,EAAMR,EACtB3mB,EAAE,IAAMknB,GAAQE,GAAMR,EACtB5mB,EAAE,IAAM2nB,IAAQE,GAAMR,GACtBrnB,EAAE,IAAM4nB,IAAQE,GAAMR,GACtBtnB,EAAE,GAAKsV,GAAOxB,EAAKM,EACnBpU,EAAE,GAAKyV,GAAOxB,EAAKM,EACnBvU,EAAE,IAAM+lB,GAAQR,EAAME,EACtBzlB,EAAE,IAAMgmB,GAAQR,EAAME,EACtB1lB,EAAE,IAAMymB,GAAQR,EAAME,EACtBnmB,EAAE,IAAM0mB,GAAQR,EAAME,EACtBpmB,EAAE,IAAMmnB,GAAQR,EAAME,EACtB7mB,EAAE,IAAMonB,IAAQR,EAAME,EACtB9mB,EAAE,IAAM6nB,IAAQR,GAAME,GACtBvnB,EAAE,IAAM8nB,IAAQR,GAAME,GAEtBxnB,EAAE,IAAM2iB,EAAGjjB,GACXM,EAAE,IAAM2iB,EAAGjjB,EAAI,IAInB,GAAI6iB,EACF7kB,EAAOD,QAAU+lB,OAEjB,IAASvlB,EAAI,EAAGA,EAAIwlB,EAAY5iB,SAAU5C,EACxCV,EAAKkmB,EAAYxlB,IAAMulB,EAAQC,EAAYxlB,IA9cjD,K,8HCTA,2BACA,OAKA,QACA,QAyBA,SAAgB8pB,EAA0BtD,GAExC,OADa,EAAAuD,aAAa,IAAIvnB,WAAWgkB,IAI3C,SAAgBwD,EACdxD,EACAyD,GAEA,IAAIxmB,EAAM,EAAAkB,QAAQ,IAAInC,WAAWgkB,IAIjC,OAHIyD,IACFxmB,EAAMymB,EAAgBzmB,IAEjBA,EA4BT,SAAgB0mB,EAAoB1D,EAAgBwD,GAClD,IAAIxmB,EAAMgjB,EAAOle,SAAS,OAI1B,OAHK0hB,IACHxmB,EAAM2mB,EAAa3mB,IAEdA,EAiBT,SAAgB4mB,EAA0BC,GAExC,OADoB,EAAAC,YAAYD,GAAM7D,OASxC,SAAgB+D,EAAkBF,EAAcL,GAG9C,OADYD,EADQK,EAAyBC,GACIL,GA4BnD,SAAgBQ,EACdzc,EACAic,GAEA,IAAIxmB,EAAM,IAAI,UAAUuK,GAAKzF,SAAS,IAKtC,OAJA9E,EAAMinB,EAAYjnB,GACdwmB,IACFxmB,EAAMymB,EAAgBzmB,IAEjBA,EAKT,SAAgBknB,EAAoBlnB,GAGlC,OAFAA,EAAMymB,EAAgBzmB,GACP6J,EAAOpC,KAAKzH,EAAK,OAIlC,SAAgBmnB,EAAyBnnB,GAGvC,OAFAA,EAAM2mB,EAAa3mB,GACC,EAAAT,SAASS,GAAKgjB,OAUpC,SAAgBoE,EAAoBpnB,GAElC,OADY,IAAI,UAAUA,GAAKyI,WAMjC,SAAgBwe,EAAajnB,GAM3B,OAJAA,GADAA,EAAMymB,EAAgBzmB,IACZb,OAAS,GAAM,EAAI,IAAMa,EAAMA,KAEvCA,EAAM2mB,EAAa3mB,IAEdA,EAGT,SAAgB2mB,EAAc3mB,GAC5B,MAA0C,OAAtCA,EAAIqB,cAAcvB,UAAU,EAAG,GAC1BE,EAEF,KAAOA,EAGhB,SAAgBymB,EAAiBzmB,GAC/B,MAA0C,OAAtCA,EAAIqB,cAAcvB,UAAU,EAAG,GAC1BE,EAAIF,UAAU,GAEhBE,EAGT,SAAgBqnB,EAAuBrnB,GAIrC,OADAA,EAAM2mB,EADN3mB,GADAA,EAAMymB,EAAgBzmB,IACZsnB,WAAW,KAAOtnB,EAAIF,UAAU,GAAKE,GAKjD,SAAgBd,EAAa1B,GAC3B,OAAO,cAAaA,GAGtB,SAAgB+pB,EAAe/pB,GAC7B,MAAiB,KAAVA,GAAkC,iBAAVA,GAAuC,KAAjBA,EAAMgqB,OA4K7D,SAAgBC,EAAkBC,GAQhC,IAPA,IAAMhoB,EAAc,GAEdioB,GAA4B,MAAnBD,EAAY,GACvBA,EAAYE,OAAO,GACnBF,GACFtI,MAAM,KAEC7iB,EAAI,EAAGA,EAAIorB,EAAMxoB,OAAQ5C,IAAK,CACrC,IAAMsrB,EAAmBF,EAAMprB,GAAGyE,MAAM,cAAgB,GAClD8mB,EAAqBH,EAAMprB,GAAGyE,MAAM,SAAW,GACjD6mB,EAAO,KACTnoB,EAAOqoB,mBAAmBF,EAAO,KAAOE,mBACtCD,EAAS,GAAGF,OAAO,KAKzB,OAAOloB,EA8ET,SAAgBsoB,EAActpB,GAC5B,QAASA,GAASA,EAAMS,QApc1B,sCAA4C4jB,GAG1C,OADemE,EADHX,EAAwBxD,KAKtC,6BAKA,4BAWA,sCAA4CA,GAG1C,OADYqE,EADAb,EAAwBxD,KAKtC,gC,IAAoC,sDAGlC,OAD4BoE,EADRvoB,EAAK2B,KAAI,SAAAmM,GAAK,OAAA6Z,EAAwB7Z,GAAG,MAAOnJ,KAAK,MAO3E,sCAA4Cyf,GAG1C,OADemE,EADHT,EAAmB1D,KAKjC,+BAAqCA,GAEnC,OADeA,EAAOle,SAAS,SAIjC,uBAQA,iCAAuCke,GAGrC,OADYoE,EADAV,EAAmB1D,KAKjC,2B,IAA+B,sDAG7B,OADuBkE,EADHtoB,EAAK2B,KAAI,SAAAmM,GAAK,OAAAga,EAAmBha,GAAG,MAAOnJ,KAAK,MAOtE,6BAKA,+BAAqCsjB,GAEnC,OADehd,EAAOpC,KAAKof,EAAM,SAInC,qBAMA,+BAAqCA,GAEnC,OADY,IAAI,UAAUA,GAAMpe,YAMlC,iCAAuC8B,GAGrC,OADe2c,EADHF,EAAmBzc,KAKjC,sCAA4CA,GAG1C,OADoB4c,EADRH,EAAmBzc,KAKjC,+BAAqCA,GAEnC,OADa,IAAI,UAAUA,GAAKzF,YAIlC,uBAcA,uBAMA,4BAMA,4BAAkC9E,GAGhC,OADaqmB,EADOc,EAAwBnnB,KAK9C,uBAOA,gBASA,iBAOA,oBAOA,0BAOA,gBAIA,kBAIA,uBAIE,OAHyB,IAAIioB,MAAOC,UAAY/mB,KAAK+G,IAAI,GAAI,GACnC/G,KAAKC,MAAMD,KAAKgnB,SAAWhnB,KAAK+G,IAAI,GAAI,KAKpE,kBAcE,OAbuB,SAAEuE,EAASC,GAChC,IACEA,EAAID,EAAI,GACRA,IAAM,GACNC,GACO,GAAJD,EAAU,IACF,GAAJA,EAAS,EAAKtL,KAAKgnB,UAAgB,GAAJ1b,EAAS,GAAK,GAAM,GAAG3H,SAAS,IAChE,KAIR,OAAO4H,EAXc,IAgBZ,EAAA0b,kBAAoB,SAACC,GAChC,OAAO,EAAAC,WAAWD,IAGP,EAAAE,eAAiB,SAACF,GAC7B,QAAKA,IAEgD,OAA1CA,EAAQhnB,cAAcvB,UAAU,EAAG,OAElC,uBAAuB0oB,KAAKH,QAGtC,sBAAsBG,KAAKH,KAC3B,sBAAsBG,KAAKH,KAIpBA,IAAY,EAAAD,kBAAkBC,OAIzC,qBACE,GACoB,oBAAX9H,QACa,oBAAbkI,eACoB,IAApBlI,OAAOmI,SAEd,OAAO,KAmDT,SAASC,I,IAAc,sDAKrB,IAJA,IAAMC,EAEFH,SAASI,qBAAqB,Q,WAEzBtsB,GACP,IAAMusB,EAAuBF,EAASrsB,GAChCwsB,EAAmC,CAAC,WAAY,WAAY,QAC/DxoB,KAAI,SAAAqF,GAAU,OAAAkjB,EAAIE,aAAapjB,MAC/BqjB,QAAO,SAAAC,GACFA,GACFtqB,EAAKuqB,SAASD,MAIpB,GAAIH,EAAW5pB,QAAU4pB,EAAY,CACnC,IAAMK,EAAyBN,EAAIE,aAAa,WAChD,GAAII,E,aACKA,KAbJ7sB,EAAI,EAAGA,EAAIqsB,EAASzpB,OAAQ5C,IAAK,C,QAAjCA,G,qCAkBT,MAAO,GA6BT,IAAMO,EA1BN,WACE,IAAIA,EAAe6rB,EACjB,OACA,eACA,WACA,iBAOF,OAJK7rB,IACHA,EAAO2rB,SAASY,OAGXvsB,EAcYwsB,GAYrB,MAP0B,CACxBC,YAhB4BZ,EAC1B,cACA,iBACA,sBACA,YAaFa,IALkBjJ,OAAOmI,SAASe,OAMlCC,MA5GF,WAME,IALA,IAAMC,EAEFlB,SAASI,qBAAqB,QAC5Ba,EAAkB,GAEfntB,EAAI,EAAGA,EAAIotB,EAAMxqB,OAAQ5C,IAAK,CACrC,IAAMqtB,EAAwBD,EAAMptB,GAE9BstB,EAAqBD,EAAKZ,aAAa,OAC7C,GAAIa,GACEA,EAAIxoB,cAAcyoB,QAAQ,SAAW,EAAG,CAC1C,IAAMC,EAAsBH,EAAKZ,aAAa,QAE9C,GAAIe,EACF,IAC4C,IAA1CA,EAAK1oB,cAAcyoB,QAAQ,YACc,IAAzCC,EAAK1oB,cAAcyoB,QAAQ,UACJ,IAAvBC,EAAKD,QAAQ,MACb,CACA,IAAIE,EACFzJ,OAAOmI,SAASuB,SAAW,KAAO1J,OAAOmI,SAASwB,KAEpD,GAA0B,IAAtBH,EAAKD,QAAQ,KACfE,GAAgBD,MACX,CACL,IAAMI,EAAiB5J,OAAOmI,SAAS0B,SAAShL,MAAM,KACtD+K,EAAKE,MAELL,GAD0BG,EAAK5mB,KAAK,KACR,IAAMwmB,EAGpCL,EAAM9pB,KAAKoqB,QACN,GAA2B,IAAvBD,EAAKD,QAAQ,MAAa,CACnC,IAAMQ,EAAsB/J,OAAOmI,SAASuB,SAAWF,EAEvDL,EAAM9pB,KAAK0qB,QAEXZ,EAAM9pB,KAAKmqB,IAOrB,OAAOL,EA0Dea,GAMtBztB,KAAI,IAMR,qBAqBA,iCAAuCmN,GACrC,IAAMugB,EAAoBvgB,EAAI6f,QAAQ,KAEhCW,GACkB,IAAtBxgB,EAAI6f,QAAQ,KAAc7f,EAAI6f,QAAQ,UAAOY,EAEzCT,EAAmBhgB,EAAInK,UAAU,EAAG0qB,GAiBpCG,EAbN,SAA8BR,GAC5B,IAEMS,EAAST,EAAK/K,MAFF,KASlB,MALuB,CACrByL,eAAgBD,EAAO,GACvBroB,QAASpC,SAASyqB,EAAO,GAAI,KAMaE,CAfzB7gB,EAAInK,UAAU0qB,EAAY,EAAGC,IA+B5CM,EAXN,SAA2BrD,GACzB,IAAMhoB,EAAS+nB,EAAiBC,GAOhC,MALuC,CACrC5pB,IAAK4B,EAAO5B,KAAO,GACnBktB,OAAQtrB,EAAOsrB,QAAU,IAMWC,MAbnB,IAAZR,EAA0BxgB,EAAI2d,OAAO6C,GAAW,IAqBzD,OANY,uBACVR,SAAQ,GACLU,GACAI,IAMP,qBACEG,EACAC,GAFF,WAsBE,OAhB4B,W,IAC1B,sD,sFAEA,MAAO,CAAP,EAAO,IAAIC,SAAQ,SAACC,EAASC,GAU3BJ,EAAWlsB,MAAMmsB,EAAS,EAAF,SAAMI,EAAU,CATvB,SACfC,EACAjqB,GAEIiqB,SACFF,EAAOE,GAETH,EAAQ9pB,mBAQhB,iBAIA,6BAAmCgD,GAIjC,OAHKyjB,EAAazjB,IAAYrF,EAAYqF,EAAO,MAC/CA,EAAO,GAAKwiB,EAAiBxiB,EAAO,KAE/BA,GAGT,gCACEknB,GAEA,QAA2B,IAAhBA,EAAOhkB,OAAyB,EAAA8gB,eAAekD,EAAOhkB,MAC/D,MAAM,IAAInE,MAAM,yDAGlB,SAASooB,EAAgBluB,GACvB,IAAIkC,EAASlC,EAcb,OAZmB,iBAAVA,GACW,iBAAVA,IAAuB+pB,EAAc/pB,MAExC0B,EAAY1B,GAEW,iBAAVA,IAChBkC,EAASunB,EAAYzpB,IAFrBkC,EAASsnB,EAAmBxpB,IAKV,iBAAXkC,IACTA,EAAS2nB,EAAsB3nB,IAE1BA,EAGT,IAAMisB,EAAY,CAChBlkB,KAAMwf,EAAYwE,EAAOhkB,MACzBmkB,QAAyB,IAAdH,EAAOG,GAAqB,GAAK3E,EAAYwE,EAAOG,IAC/DC,cAC6B,IAApBJ,EAAOI,SACV,GACAH,EAAeD,EAAOI,UAC5BC,cAC6B,IAApBL,EAAOK,cACY,IAAfL,EAAOM,IACZ,GACAL,EAAeD,EAAOM,KACxBL,EAAeD,EAAOK,UAC5BtuB,WAC0B,IAAjBiuB,EAAOjuB,MAAwB,GAAKkuB,EAAeD,EAAOjuB,OACnEwuB,WAC0B,IAAjBP,EAAOO,MAAwB,GAAKN,EAAeD,EAAOO,OACnEzqB,UACyB,IAAhBkqB,EAAOlqB,KAAuB,GAAK0lB,EAAYwE,EAAOlqB,OAAS,MAGpE0qB,EAAW,CAAC,WAAY,WAAY,QAAS,SAOnD,OANAhvB,OAAO0H,KAAKgnB,GAAWhqB,SAAQ,SAAC7D,IACzB6tB,EAAU7tB,GAAK0pB,OAAOroB,QAAU8sB,EAAS9C,SAASrrB,WAC9C6tB,EAAU7tB,MAId6tB,GAGT,0BACE7oB,GAEA,IAAMY,EAAUZ,EAAMY,SAAW,6BAC7BY,GAAgB,KACpB,GAAIxB,IAAUA,EAAMwB,KAClB,OAAQZ,GACN,IAAK,cACHY,GAAQ,MACR,MACF,IAAK,kBACHA,GAAQ,MACR,MACF,IAAK,mBACHA,GAAQ,MACR,MACF,IAAK,iBACHA,GAAQ,MACR,MACF,IAAK,iBACHA,GAAQ,MACR,MACF,QACEA,GAAQ,KAQd,MAJe,CACbA,KAAI,EACJZ,QAAO,IAOX,iCACEzF,GAEA,MAAgC,iBAAlBA,EAAOsG,QAGvB,4BAAkCtG,GAChC,YAAgC,IAAlBA,EAAO0jB,QAGvB,oCACE1jB,GAEA,YAAgC,IAAlBA,EAAOyB,QAGvB,kCACEzB,GAEA,YAA+B,IAAjBA,EAAO6E,OAGvB,2BAAiC7E,GAC/B,YAA+B,IAAjBA,EAAOiuB,OAGvB,kCACEjuB,GAEA,YAAgC,IAAlBA,EAAO+sB,QAGvB,2BAAiCkB,GAQ/B,MAPuB,CACrB,kBACA,iBACA,eACA,UACA,cAEoB/C,SAAS+C,IAAUA,EAAM5E,WAAW,QAG/C,EAAA6E,eAAiB,CAC5B,sBACA,sBACA,WACA,oBACA,uBACA,uBACA,iBAGW,EAAAC,aAAe,CAAC,eAAgB,cAAe,eAE5D,2BAAiCC,GAC/B,QAAIA,EAAQ1K,OAAO2F,WAAW,SAG1B,EAAA6E,eAAehD,SAASkD,EAAQ1K,W,sDC/nBtC;;;;;;;AAUA,IAAI2K,EAAS,EAAQ,GACjBC,EAAU,EAAQ,GAClB/hB,EAAU,EAAQ,IAmDtB,SAASgiB,IACP,OAAO3iB,EAAO4iB,oBACV,WACA,WAGN,SAASC,EAAcC,EAAMxtB,GAC3B,GAAIqtB,IAAertB,EACjB,MAAM,IAAIytB,WAAW,8BAcvB,OAZI/iB,EAAO4iB,qBAETE,EAAO,IAAI5tB,WAAWI,IACjB0tB,UAAYhjB,EAAO1L,WAGX,OAATwuB,IACFA,EAAO,IAAI9iB,EAAO1K,IAEpBwtB,EAAKxtB,OAASA,GAGTwtB,EAaT,SAAS9iB,EAAQijB,EAAKC,EAAkB5tB,GACtC,KAAK0K,EAAO4iB,qBAAyBtwB,gBAAgB0N,GACnD,OAAO,IAAIA,EAAOijB,EAAKC,EAAkB5tB,GAI3C,GAAmB,iBAAR2tB,EAAkB,CAC3B,GAAgC,iBAArBC,EACT,MAAM,IAAIzpB,MACR,qEAGJ,OAAO0pB,EAAY7wB,KAAM2wB,GAE3B,OAAOrlB,EAAKtL,KAAM2wB,EAAKC,EAAkB5tB,GAW3C,SAASsI,EAAMklB,EAAMnvB,EAAOuvB,EAAkB5tB,GAC5C,GAAqB,iBAAV3B,EACT,MAAM,IAAIyvB,UAAU,yCAGtB,MAA2B,oBAAhBvK,aAA+BllB,aAAiBklB,YA6H7D,SAA0BiK,EAAMjuB,EAAOwuB,EAAY/tB,GAGjD,GAFAT,EAAMiP,WAEFuf,EAAa,GAAKxuB,EAAMiP,WAAauf,EACvC,MAAM,IAAIN,WAAW,6BAGvB,GAAIluB,EAAMiP,WAAauf,GAAc/tB,GAAU,GAC7C,MAAM,IAAIytB,WAAW,6BAIrBluB,OADiBgsB,IAAfwC,QAAuCxC,IAAXvrB,EACtB,IAAIJ,WAAWL,QACHgsB,IAAXvrB,EACD,IAAIJ,WAAWL,EAAOwuB,GAEtB,IAAInuB,WAAWL,EAAOwuB,EAAY/tB,GAGxC0K,EAAO4iB,qBAETE,EAAOjuB,GACFmuB,UAAYhjB,EAAO1L,UAGxBwuB,EAAOQ,EAAcR,EAAMjuB,GAE7B,OAAOiuB,EAvJES,CAAgBT,EAAMnvB,EAAOuvB,EAAkB5tB,GAGnC,iBAAV3B,EAwFb,SAAqBmvB,EAAMU,EAAQC,GACT,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKzjB,EAAO0jB,WAAWD,GACrB,MAAM,IAAIL,UAAU,8CAGtB,IAAI9tB,EAAwC,EAA/BwO,EAAW0f,EAAQC,GAG5BE,GAFJb,EAAOD,EAAaC,EAAMxtB,IAERsuB,MAAMJ,EAAQC,GAE5BE,IAAWruB,IAIbwtB,EAAOA,EAAKhuB,MAAM,EAAG6uB,IAGvB,OAAOb,EA5GEe,CAAWf,EAAMnvB,EAAOuvB,GAsJnC,SAAqBJ,EAAMgB,GACzB,GAAI9jB,EAAO+jB,SAASD,GAAM,CACxB,IAAIxjB,EAA4B,EAAtB0jB,EAAQF,EAAIxuB,QAGtB,OAAoB,KAFpBwtB,EAAOD,EAAaC,EAAMxiB,IAEjBhL,OACAwtB,GAGTgB,EAAI9hB,KAAK8gB,EAAM,EAAG,EAAGxiB,GACdwiB,GAGT,GAAIgB,EAAK,CACP,GAA4B,oBAAhBjL,aACRiL,EAAI3K,kBAAkBN,aAAgB,WAAYiL,EACpD,MAA0B,iBAAfA,EAAIxuB,SA+8CL0J,EA/8CkC8kB,EAAIxuB,SAg9CrC0J,EA/8CF6jB,EAAaC,EAAM,GAErBQ,EAAcR,EAAMgB,GAG7B,GAAiB,WAAbA,EAAI/L,MAAqBpX,EAAQmjB,EAAIpsB,MACvC,OAAO4rB,EAAcR,EAAMgB,EAAIpsB,MAw8CrC,IAAgBsH,EAp8Cd,MAAM,IAAIokB,UAAU,sFA9Kba,CAAWnB,EAAMnvB,GA4B1B,SAASuwB,EAAY9hB,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIghB,UAAU,oCACf,GAAIhhB,EAAO,EAChB,MAAM,IAAI2gB,WAAW,wCA4BzB,SAASI,EAAaL,EAAM1gB,GAG1B,GAFA8hB,EAAW9hB,GACX0gB,EAAOD,EAAaC,EAAM1gB,EAAO,EAAI,EAAoB,EAAhB4hB,EAAQ5hB,KAC5CpC,EAAO4iB,oBACV,IAAK,IAAIlwB,EAAI,EAAGA,EAAI0P,IAAQ1P,EAC1BowB,EAAKpwB,GAAK,EAGd,OAAOowB,EAwCT,SAASQ,EAAeR,EAAMjuB,GAC5B,IAAIS,EAAST,EAAMS,OAAS,EAAI,EAA4B,EAAxB0uB,EAAQnvB,EAAMS,QAClDwtB,EAAOD,EAAaC,EAAMxtB,GAC1B,IAAK,IAAI5C,EAAI,EAAGA,EAAI4C,EAAQ5C,GAAK,EAC/BowB,EAAKpwB,GAAgB,IAAXmC,EAAMnC,GAElB,OAAOowB,EA+DT,SAASkB,EAAS1uB,GAGhB,GAAIA,GAAUqtB,IACZ,MAAM,IAAII,WAAW,0DACaJ,IAAa1nB,SAAS,IAAM,UAEhE,OAAgB,EAAT3F,EAsFT,SAASwO,EAAY0f,EAAQC,GAC3B,GAAIzjB,EAAO+jB,SAASP,GAClB,OAAOA,EAAOluB,OAEhB,GAA2B,oBAAhBujB,aAA6D,mBAAvBA,YAAYsL,SACxDtL,YAAYsL,OAAOX,IAAWA,aAAkB3K,aACnD,OAAO2K,EAAO1f,WAEM,iBAAX0f,IACTA,EAAS,GAAKA,GAGhB,IAAIljB,EAAMkjB,EAAOluB,OACjB,GAAY,IAARgL,EAAW,OAAO,EAItB,IADA,IAAI8jB,GAAc,IAEhB,OAAQX,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOnjB,EACT,IAAK,OACL,IAAK,QACL,UAAKugB,EACH,OAAOwD,EAAYb,GAAQluB,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAANgL,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOgkB,EAAcd,GAAQluB,OAC/B,QACE,GAAI8uB,EAAa,OAAOC,EAAYb,GAAQluB,OAC5CmuB,GAAY,GAAKA,GAAUjsB,cAC3B4sB,GAAc,GAMtB,SAASG,EAAcd,EAAUxsB,EAAOoJ,GACtC,IAAI+jB,GAAc,EAclB,SALcvD,IAAV5pB,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQ3E,KAAKgD,OACf,MAAO,GAOT,SAJYurB,IAARxgB,GAAqBA,EAAM/N,KAAKgD,UAClC+K,EAAM/N,KAAKgD,QAGT+K,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTpJ,KAAW,GAGT,MAAO,GAKT,IAFKwsB,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOe,EAASlyB,KAAM2E,EAAOoJ,GAE/B,IAAK,OACL,IAAK,QACH,OAAOokB,EAAUnyB,KAAM2E,EAAOoJ,GAEhC,IAAK,QACH,OAAOqkB,EAAWpyB,KAAM2E,EAAOoJ,GAEjC,IAAK,SACL,IAAK,SACH,OAAOskB,EAAYryB,KAAM2E,EAAOoJ,GAElC,IAAK,SACH,OAAOukB,EAAYtyB,KAAM2E,EAAOoJ,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOwkB,EAAavyB,KAAM2E,EAAOoJ,GAEnC,QACE,GAAI+jB,EAAa,MAAM,IAAIhB,UAAU,qBAAuBK,GAC5DA,GAAYA,EAAW,IAAIjsB,cAC3B4sB,GAAc,GAStB,SAASU,EAAMjiB,EAAG1O,EAAGrB,GACnB,IAAIJ,EAAImQ,EAAE1O,GACV0O,EAAE1O,GAAK0O,EAAE/P,GACT+P,EAAE/P,GAAKJ,EAmIT,SAASqyB,EAAsB5L,EAAQna,EAAKqkB,EAAYI,EAAUuB,GAEhE,GAAsB,IAAlB7L,EAAO7jB,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAf+tB,GACTI,EAAWJ,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACV4B,MAAM5B,KAERA,EAAa2B,EAAM,EAAK7L,EAAO7jB,OAAS,GAItC+tB,EAAa,IAAGA,EAAalK,EAAO7jB,OAAS+tB,GAC7CA,GAAclK,EAAO7jB,OAAQ,CAC/B,GAAI0vB,EAAK,OAAQ,EACZ3B,EAAalK,EAAO7jB,OAAS,OAC7B,GAAI+tB,EAAa,EAAG,CACzB,IAAI2B,EACC,OAAQ,EADJ3B,EAAa,EAUxB,GALmB,iBAARrkB,IACTA,EAAMgB,EAAOpC,KAAKoB,EAAKykB,IAIrBzjB,EAAO+jB,SAAS/kB,GAElB,OAAmB,IAAfA,EAAI1J,QACE,EAEH4vB,EAAa/L,EAAQna,EAAKqkB,EAAYI,EAAUuB,GAClD,GAAmB,iBAARhmB,EAEhB,OADAA,GAAY,IACRgB,EAAO4iB,qBACiC,mBAAjC1tB,WAAWZ,UAAU2rB,QAC1B+E,EACK9vB,WAAWZ,UAAU2rB,QAAQptB,KAAKsmB,EAAQna,EAAKqkB,GAE/CnuB,WAAWZ,UAAU6wB,YAAYtyB,KAAKsmB,EAAQna,EAAKqkB,GAGvD6B,EAAa/L,EAAQ,CAAEna,GAAOqkB,EAAYI,EAAUuB,GAG7D,MAAM,IAAI5B,UAAU,wCAGtB,SAAS8B,EAAcE,EAAKpmB,EAAKqkB,EAAYI,EAAUuB,GACrD,IA0BItyB,EA1BA2yB,EAAY,EACZC,EAAYF,EAAI9vB,OAChBiwB,EAAYvmB,EAAI1J,OAEpB,QAAiBurB,IAAb4C,IAEe,UADjBA,EAAW9pB,OAAO8pB,GAAUjsB,gBACY,UAAbisB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAI2B,EAAI9vB,OAAS,GAAK0J,EAAI1J,OAAS,EACjC,OAAQ,EAEV+vB,EAAY,EACZC,GAAa,EACbC,GAAa,EACblC,GAAc,EAIlB,SAASmC,EAAMC,EAAK/yB,GAClB,OAAkB,IAAd2yB,EACKI,EAAI/yB,GAEJ+yB,EAAIC,aAAahzB,EAAI2yB,GAKhC,GAAIL,EAAK,CACP,IAAIW,GAAc,EAClB,IAAKjzB,EAAI2wB,EAAY3wB,EAAI4yB,EAAW5yB,IAClC,GAAI8yB,EAAKJ,EAAK1yB,KAAO8yB,EAAKxmB,GAAqB,IAAhB2mB,EAAoB,EAAIjzB,EAAIizB,IAEzD,IADoB,IAAhBA,IAAmBA,EAAajzB,GAChCA,EAAIizB,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmBjzB,GAAKA,EAAIizB,GAChCA,GAAc,OAKlB,IADItC,EAAakC,EAAYD,IAAWjC,EAAaiC,EAAYC,GAC5D7yB,EAAI2wB,EAAY3wB,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIkzB,GAAQ,EACHpkB,EAAI,EAAGA,EAAI+jB,EAAW/jB,IAC7B,GAAIgkB,EAAKJ,EAAK1yB,EAAI8O,KAAOgkB,EAAKxmB,EAAKwC,GAAI,CACrCokB,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAOlzB,EAItB,OAAQ,EAeV,SAASmzB,EAAUJ,EAAKjC,EAAQ1sB,EAAQxB,GACtCwB,EAASgvB,OAAOhvB,IAAW,EAC3B,IAAIivB,EAAYN,EAAInwB,OAASwB,EACxBxB,GAGHA,EAASwwB,OAAOxwB,IACHywB,IACXzwB,EAASywB,GAJXzwB,EAASywB,EASX,IAAIC,EAASxC,EAAOluB,OACpB,GAAI0wB,EAAS,GAAM,EAAG,MAAM,IAAI5C,UAAU,sBAEtC9tB,EAAS0wB,EAAS,IACpB1wB,EAAS0wB,EAAS,GAEpB,IAAK,IAAItzB,EAAI,EAAGA,EAAI4C,IAAU5C,EAAG,CAC/B,IAAIuzB,EAAS3vB,SAASktB,EAAOzF,OAAW,EAAJrrB,EAAO,GAAI,IAC/C,GAAIuyB,MAAMgB,GAAS,OAAOvzB,EAC1B+yB,EAAI3uB,EAASpE,GAAKuzB,EAEpB,OAAOvzB,EAGT,SAASwzB,EAAWT,EAAKjC,EAAQ1sB,EAAQxB,GACvC,OAAO6wB,EAAW9B,EAAYb,EAAQiC,EAAInwB,OAASwB,GAAS2uB,EAAK3uB,EAAQxB,GAG3E,SAAS8wB,EAAYX,EAAKjC,EAAQ1sB,EAAQxB,GACxC,OAAO6wB,EAq6BT,SAAuB/lB,GAErB,IADA,IAAIimB,EAAY,GACP3zB,EAAI,EAAGA,EAAI0N,EAAI9K,SAAU5C,EAEhC2zB,EAAUtwB,KAAyB,IAApBqK,EAAII,WAAW9N,IAEhC,OAAO2zB,EA36BWC,CAAa9C,GAASiC,EAAK3uB,EAAQxB,GAGvD,SAASixB,EAAad,EAAKjC,EAAQ1sB,EAAQxB,GACzC,OAAO8wB,EAAWX,EAAKjC,EAAQ1sB,EAAQxB,GAGzC,SAASkxB,EAAaf,EAAKjC,EAAQ1sB,EAAQxB,GACzC,OAAO6wB,EAAW7B,EAAcd,GAASiC,EAAK3uB,EAAQxB,GAGxD,SAASmxB,EAAWhB,EAAKjC,EAAQ1sB,EAAQxB,GACvC,OAAO6wB,EAk6BT,SAAyB/lB,EAAKsmB,GAG5B,IAFA,IAAI3zB,EAAG0R,EAAI3B,EACPujB,EAAY,GACP3zB,EAAI,EAAGA,EAAI0N,EAAI9K,WACjBoxB,GAAS,GAAK,KADah0B,EAGhCK,EAAIqN,EAAII,WAAW9N,GACnB+R,EAAK1R,GAAK,EACV+P,EAAK/P,EAAI,IACTszB,EAAUtwB,KAAK+M,GACfujB,EAAUtwB,KAAK0O,GAGjB,OAAO4hB,EA/6BWM,CAAenD,EAAQiC,EAAInwB,OAASwB,GAAS2uB,EAAK3uB,EAAQxB,GAkF9E,SAASsvB,EAAaa,EAAKxuB,EAAOoJ,GAChC,OAAc,IAAVpJ,GAAeoJ,IAAQolB,EAAInwB,OACtBmtB,EAAOmE,cAAcnB,GAErBhD,EAAOmE,cAAcnB,EAAI3wB,MAAMmC,EAAOoJ,IAIjD,SAASokB,EAAWgB,EAAKxuB,EAAOoJ,GAC9BA,EAAM/I,KAAKiJ,IAAIklB,EAAInwB,OAAQ+K,GAI3B,IAHA,IAAI4D,EAAM,GAENvR,EAAIuE,EACDvE,EAAI2N,GAAK,CACd,IAQMwmB,EAAYC,EAAWC,EAAYC,EARrCC,EAAYxB,EAAI/yB,GAChBw0B,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAIv0B,EAAIy0B,GAAoB9mB,EAG1B,OAAQ8mB,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,MAAV,KADlBJ,EAAapB,EAAI/yB,EAAI,OAEnBs0B,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAapB,EAAI/yB,EAAI,GACrBo0B,EAAYrB,EAAI/yB,EAAI,GACQ,MAAV,IAAbm0B,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAapB,EAAI/yB,EAAI,GACrBo0B,EAAYrB,EAAI/yB,EAAI,GACpBq0B,EAAatB,EAAI/yB,EAAI,GACO,MAAV,IAAbm0B,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbjjB,EAAIlO,KAAKmxB,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBjjB,EAAIlO,KAAKmxB,GACTx0B,GAAKy0B,EAGP,OAQF,SAAgCC,GAC9B,IAAI9mB,EAAM8mB,EAAW9xB,OACrB,GAAIgL,GAAO+mB,EACT,OAAO1tB,OAAOC,aAAazE,MAAMwE,OAAQytB,GAI3C,IAAInjB,EAAM,GACNvR,EAAI,EACR,KAAOA,EAAI4N,GACT2D,GAAOtK,OAAOC,aAAazE,MACzBwE,OACAytB,EAAWtyB,MAAMpC,EAAGA,GAAK20B,IAG7B,OAAOpjB,EAvBAqjB,CAAsBrjB,GA98B/B/R,EAAQ8N,OAASA,EACjB9N,EAAQq1B,WAoTR,SAAqBjyB,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAO0K,EAAOwnB,OAAOlyB,IAvTvBpD,EAAQu1B,kBAAoB,GA0B5BznB,EAAO4iB,yBAAqD/B,IAA/B9J,EAAO6L,oBAChC7L,EAAO6L,oBAQX,WACE,IACE,IAAIwC,EAAM,IAAIlwB,WAAW,GAEzB,OADAkwB,EAAIpC,UAAY,CAACA,UAAW9tB,WAAWZ,UAAWozB,IAAK,WAAc,OAAO,KACvD,KAAdtC,EAAIsC,OACiB,mBAAjBtC,EAAIuC,UACuB,IAAlCvC,EAAIuC,SAAS,EAAG,GAAG7jB,WACvB,MAAO5D,GACP,OAAO,GAfP0nB,GAKJ11B,EAAQywB,WAAaA,IAkErB3iB,EAAO6nB,SAAW,KAGlB7nB,EAAO8nB,SAAW,SAAU1C,GAE1B,OADAA,EAAIpC,UAAYhjB,EAAO1L,UAChB8wB,GA2BTplB,EAAOpC,KAAO,SAAUjK,EAAOuvB,EAAkB5tB,GAC/C,OAAOsI,EAAK,KAAMjK,EAAOuvB,EAAkB5tB,IAGzC0K,EAAO4iB,sBACT5iB,EAAO1L,UAAU0uB,UAAY9tB,WAAWZ,UACxC0L,EAAOgjB,UAAY9tB,WACG,oBAAXzB,QAA0BA,OAAOs0B,SACxC/nB,EAAOvM,OAAOs0B,WAAa/nB,GAE7B5M,OAAOC,eAAe2M,EAAQvM,OAAOs0B,QAAS,CAC5Cp0B,MAAO,KACPq0B,cAAc,KAiCpBhoB,EAAOwnB,MAAQ,SAAUplB,EAAM6lB,EAAMxE,GACnC,OArBF,SAAgBX,EAAM1gB,EAAM6lB,EAAMxE,GAEhC,OADAS,EAAW9hB,GACPA,GAAQ,EACHygB,EAAaC,EAAM1gB,QAEfye,IAAToH,EAIyB,iBAAbxE,EACVZ,EAAaC,EAAM1gB,GAAM6lB,KAAKA,EAAMxE,GACpCZ,EAAaC,EAAM1gB,GAAM6lB,KAAKA,GAE7BpF,EAAaC,EAAM1gB,GAQnBolB,CAAM,KAAMplB,EAAM6lB,EAAMxE,IAiBjCzjB,EAAOmjB,YAAc,SAAU/gB,GAC7B,OAAO+gB,EAAY,KAAM/gB,IAK3BpC,EAAOkoB,gBAAkB,SAAU9lB,GACjC,OAAO+gB,EAAY,KAAM/gB,IAiH3BpC,EAAO+jB,SAAW,SAAmBlhB,GACnC,QAAe,MAALA,IAAaA,EAAEslB,YAG3BnoB,EAAOooB,QAAU,SAAkBxlB,EAAGC,GACpC,IAAK7C,EAAO+jB,SAASnhB,KAAO5C,EAAO+jB,SAASlhB,GAC1C,MAAM,IAAIugB,UAAU,6BAGtB,GAAIxgB,IAAMC,EAAG,OAAO,EAKpB,IAHA,IAAI+I,EAAIhJ,EAAEtN,OACNuW,EAAIhJ,EAAEvN,OAED5C,EAAI,EAAG4N,EAAMhJ,KAAKiJ,IAAIqL,EAAGC,GAAInZ,EAAI4N,IAAO5N,EAC/C,GAAIkQ,EAAElQ,KAAOmQ,EAAEnQ,GAAI,CACjBkZ,EAAIhJ,EAAElQ,GACNmZ,EAAIhJ,EAAEnQ,GACN,MAIJ,OAAIkZ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAGT5L,EAAO0jB,WAAa,SAAqBD,GACvC,OAAQ9pB,OAAO8pB,GAAUjsB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIbwI,EAAOzJ,OAAS,SAAiB8xB,EAAM/yB,GACrC,IAAKqL,EAAQ0nB,GACX,MAAM,IAAIjF,UAAU,+CAGtB,GAAoB,IAAhBiF,EAAK/yB,OACP,OAAO0K,EAAOwnB,MAAM,GAGtB,IAAI90B,EACJ,QAAemuB,IAAXvrB,EAEF,IADAA,EAAS,EACJ5C,EAAI,EAAGA,EAAI21B,EAAK/yB,SAAU5C,EAC7B4C,GAAU+yB,EAAK31B,GAAG4C,OAItB,IAAI6jB,EAASnZ,EAAOmjB,YAAY7tB,GAC5BgzB,EAAM,EACV,IAAK51B,EAAI,EAAGA,EAAI21B,EAAK/yB,SAAU5C,EAAG,CAChC,IAAI+yB,EAAM4C,EAAK31B,GACf,IAAKsN,EAAO+jB,SAAS0B,GACnB,MAAM,IAAIrC,UAAU,+CAEtBqC,EAAIzjB,KAAKmX,EAAQmP,GACjBA,GAAO7C,EAAInwB,OAEb,OAAO6jB,GA8CTnZ,EAAO8D,WAAaA,EA0EpB9D,EAAO1L,UAAU6zB,WAAY,EAQ7BnoB,EAAO1L,UAAUi0B,OAAS,WACxB,IAAIjoB,EAAMhO,KAAKgD,OACf,GAAIgL,EAAM,GAAM,EACd,MAAM,IAAIyiB,WAAW,6CAEvB,IAAK,IAAIrwB,EAAI,EAAGA,EAAI4N,EAAK5N,GAAK,EAC5BoyB,EAAKxyB,KAAMI,EAAGA,EAAI,GAEpB,OAAOJ,MAGT0N,EAAO1L,UAAUk0B,OAAS,WACxB,IAAIloB,EAAMhO,KAAKgD,OACf,GAAIgL,EAAM,GAAM,EACd,MAAM,IAAIyiB,WAAW,6CAEvB,IAAK,IAAIrwB,EAAI,EAAGA,EAAI4N,EAAK5N,GAAK,EAC5BoyB,EAAKxyB,KAAMI,EAAGA,EAAI,GAClBoyB,EAAKxyB,KAAMI,EAAI,EAAGA,EAAI,GAExB,OAAOJ,MAGT0N,EAAO1L,UAAUm0B,OAAS,WACxB,IAAInoB,EAAMhO,KAAKgD,OACf,GAAIgL,EAAM,GAAM,EACd,MAAM,IAAIyiB,WAAW,6CAEvB,IAAK,IAAIrwB,EAAI,EAAGA,EAAI4N,EAAK5N,GAAK,EAC5BoyB,EAAKxyB,KAAMI,EAAGA,EAAI,GAClBoyB,EAAKxyB,KAAMI,EAAI,EAAGA,EAAI,GACtBoyB,EAAKxyB,KAAMI,EAAI,EAAGA,EAAI,GACtBoyB,EAAKxyB,KAAMI,EAAI,EAAGA,EAAI,GAExB,OAAOJ,MAGT0N,EAAO1L,UAAU2G,SAAW,WAC1B,IAAI3F,EAAuB,EAAdhD,KAAKgD,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArBL,UAAUK,OAAqBmvB,EAAUnyB,KAAM,EAAGgD,GAC/CivB,EAAapvB,MAAM7C,KAAM2C,YAGlC+K,EAAO1L,UAAUo0B,OAAS,SAAiB7lB,GACzC,IAAK7C,EAAO+jB,SAASlhB,GAAI,MAAM,IAAIugB,UAAU,6BAC7C,OAAI9wB,OAASuQ,GACsB,IAA5B7C,EAAOooB,QAAQ91B,KAAMuQ,IAG9B7C,EAAO1L,UAAUgO,QAAU,WACzB,IAAIlC,EAAM,GACNQ,EAAM1O,EAAQu1B,kBAKlB,OAJIn1B,KAAKgD,OAAS,IAChB8K,EAAM9N,KAAK2I,SAAS,MAAO,EAAG2F,GAAKzJ,MAAM,SAASuC,KAAK,KACnDpH,KAAKgD,OAASsL,IAAKR,GAAO,UAEzB,WAAaA,EAAM,KAG5BJ,EAAO1L,UAAU8zB,QAAU,SAAkBrsB,EAAQ9E,EAAOoJ,EAAKsoB,EAAWC,GAC1E,IAAK5oB,EAAO+jB,SAAShoB,GACnB,MAAM,IAAIqnB,UAAU,6BAgBtB,QAbcvC,IAAV5pB,IACFA,EAAQ,QAEE4pB,IAARxgB,IACFA,EAAMtE,EAASA,EAAOzG,OAAS,QAEfurB,IAAd8H,IACFA,EAAY,QAEE9H,IAAZ+H,IACFA,EAAUt2B,KAAKgD,QAGb2B,EAAQ,GAAKoJ,EAAMtE,EAAOzG,QAAUqzB,EAAY,GAAKC,EAAUt2B,KAAKgD,OACtE,MAAM,IAAIytB,WAAW,sBAGvB,GAAI4F,GAAaC,GAAW3xB,GAASoJ,EACnC,OAAO,EAET,GAAIsoB,GAAaC,EACf,OAAQ,EAEV,GAAI3xB,GAASoJ,EACX,OAAO,EAQT,GAAI/N,OAASyJ,EAAQ,OAAO,EAS5B,IAPA,IAAI6P,GAJJgd,KAAa,IADbD,KAAe,GAMX9c,GAPJxL,KAAS,IADTpJ,KAAW,GASPqJ,EAAMhJ,KAAKiJ,IAAIqL,EAAGC,GAElBgd,EAAWv2B,KAAKwC,MAAM6zB,EAAWC,GACjCE,EAAa/sB,EAAOjH,MAAMmC,EAAOoJ,GAE5B3N,EAAI,EAAGA,EAAI4N,IAAO5N,EACzB,GAAIm2B,EAASn2B,KAAOo2B,EAAWp2B,GAAI,CACjCkZ,EAAIid,EAASn2B,GACbmZ,EAAIid,EAAWp2B,GACf,MAIJ,OAAIkZ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GA6HT5L,EAAO1L,UAAUgrB,SAAW,SAAmBtgB,EAAKqkB,EAAYI,GAC9D,OAAoD,IAA7CnxB,KAAK2tB,QAAQjhB,EAAKqkB,EAAYI,IAGvCzjB,EAAO1L,UAAU2rB,QAAU,SAAkBjhB,EAAKqkB,EAAYI,GAC5D,OAAOsB,EAAqBzyB,KAAM0M,EAAKqkB,EAAYI,GAAU,IAG/DzjB,EAAO1L,UAAU6wB,YAAc,SAAsBnmB,EAAKqkB,EAAYI,GACpE,OAAOsB,EAAqBzyB,KAAM0M,EAAKqkB,EAAYI,GAAU,IAkD/DzjB,EAAO1L,UAAUsvB,MAAQ,SAAgBJ,EAAQ1sB,EAAQxB,EAAQmuB,GAE/D,QAAe5C,IAAX/pB,EACF2sB,EAAW,OACXnuB,EAAShD,KAAKgD,OACdwB,EAAS,OAEJ,QAAe+pB,IAAXvrB,GAA0C,iBAAXwB,EACxC2sB,EAAW3sB,EACXxB,EAAShD,KAAKgD,OACdwB,EAAS,MAEJ,KAAIiyB,SAASjyB,GAWlB,MAAM,IAAI2C,MACR,2EAXF3C,GAAkB,EACdiyB,SAASzzB,IACXA,GAAkB,OACDurB,IAAb4C,IAAwBA,EAAW,UAEvCA,EAAWnuB,EACXA,OAASurB,GASb,IAAIkF,EAAYzzB,KAAKgD,OAASwB,EAG9B,SAFe+pB,IAAXvrB,GAAwBA,EAASywB,KAAWzwB,EAASywB,GAEpDvC,EAAOluB,OAAS,IAAMA,EAAS,GAAKwB,EAAS,IAAOA,EAASxE,KAAKgD,OACrE,MAAM,IAAIytB,WAAW,0CAGlBU,IAAUA,EAAW,QAG1B,IADA,IAAIW,GAAc,IAEhB,OAAQX,GACN,IAAK,MACH,OAAOoC,EAASvzB,KAAMkxB,EAAQ1sB,EAAQxB,GAExC,IAAK,OACL,IAAK,QACH,OAAO4wB,EAAU5zB,KAAMkxB,EAAQ1sB,EAAQxB,GAEzC,IAAK,QACH,OAAO8wB,EAAW9zB,KAAMkxB,EAAQ1sB,EAAQxB,GAE1C,IAAK,SACL,IAAK,SACH,OAAOixB,EAAYj0B,KAAMkxB,EAAQ1sB,EAAQxB,GAE3C,IAAK,SAEH,OAAOkxB,EAAYl0B,KAAMkxB,EAAQ1sB,EAAQxB,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOmxB,EAAUn0B,KAAMkxB,EAAQ1sB,EAAQxB,GAEzC,QACE,GAAI8uB,EAAa,MAAM,IAAIhB,UAAU,qBAAuBK,GAC5DA,GAAY,GAAKA,GAAUjsB,cAC3B4sB,GAAc,IAKtBpkB,EAAO1L,UAAUoP,OAAS,WACxB,MAAO,CACLqU,KAAM,SACNrgB,KAAM1C,MAAMV,UAAUQ,MAAMjC,KAAKP,KAAK02B,MAAQ12B,KAAM,KAwFxD,IAAI+0B,EAAuB,KAoB3B,SAAS3C,EAAYe,EAAKxuB,EAAOoJ,GAC/B,IAAIoD,EAAM,GACVpD,EAAM/I,KAAKiJ,IAAIklB,EAAInwB,OAAQ+K,GAE3B,IAAK,IAAI3N,EAAIuE,EAAOvE,EAAI2N,IAAO3N,EAC7B+Q,GAAO9J,OAAOC,aAAsB,IAAT6rB,EAAI/yB,IAEjC,OAAO+Q,EAGT,SAASkhB,EAAac,EAAKxuB,EAAOoJ,GAChC,IAAIoD,EAAM,GACVpD,EAAM/I,KAAKiJ,IAAIklB,EAAInwB,OAAQ+K,GAE3B,IAAK,IAAI3N,EAAIuE,EAAOvE,EAAI2N,IAAO3N,EAC7B+Q,GAAO9J,OAAOC,aAAa6rB,EAAI/yB,IAEjC,OAAO+Q,EAGT,SAAS+gB,EAAUiB,EAAKxuB,EAAOoJ,GAC7B,IAAIC,EAAMmlB,EAAInwB,SAET2B,GAASA,EAAQ,KAAGA,EAAQ,KAC5BoJ,GAAOA,EAAM,GAAKA,EAAMC,KAAKD,EAAMC,GAGxC,IADA,IAAIqC,EAAM,GACDjQ,EAAIuE,EAAOvE,EAAI2N,IAAO3N,EAC7BiQ,GAAO9D,EAAM4mB,EAAI/yB,IAEnB,OAAOiQ,EAGT,SAASkiB,EAAcY,EAAKxuB,EAAOoJ,GAGjC,IAFA,IAAI9H,EAAQktB,EAAI3wB,MAAMmC,EAAOoJ,GACzB4D,EAAM,GACDvR,EAAI,EAAGA,EAAI6F,EAAMjD,OAAQ5C,GAAK,EACrCuR,GAAOtK,OAAOC,aAAarB,EAAM7F,GAAoB,IAAf6F,EAAM7F,EAAI,IAElD,OAAOuR,EA0CT,SAASglB,EAAanyB,EAAQoyB,EAAK5zB,GACjC,GAAKwB,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAIisB,WAAW,sBAC3D,GAAIjsB,EAASoyB,EAAM5zB,EAAQ,MAAM,IAAIytB,WAAW,yCA+JlD,SAASoG,EAAU1D,EAAK9xB,EAAOmD,EAAQoyB,EAAKtoB,EAAKL,GAC/C,IAAKP,EAAO+jB,SAAS0B,GAAM,MAAM,IAAIrC,UAAU,+CAC/C,GAAIzvB,EAAQiN,GAAOjN,EAAQ4M,EAAK,MAAM,IAAIwiB,WAAW,qCACrD,GAAIjsB,EAASoyB,EAAMzD,EAAInwB,OAAQ,MAAM,IAAIytB,WAAW,sBAkDtD,SAASqG,EAAmB3D,EAAK9xB,EAAOmD,EAAQkN,GAC1CrQ,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAIjB,EAAI,EAAG8O,EAAIlK,KAAKiJ,IAAIklB,EAAInwB,OAASwB,EAAQ,GAAIpE,EAAI8O,IAAK9O,EAC7D+yB,EAAI3uB,EAASpE,IAAMiB,EAAS,KAAS,GAAKqQ,EAAetR,EAAI,EAAIA,MAClC,GAA5BsR,EAAetR,EAAI,EAAIA,GA8B9B,SAAS22B,EAAmB5D,EAAK9xB,EAAOmD,EAAQkN,GAC1CrQ,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAIjB,EAAI,EAAG8O,EAAIlK,KAAKiJ,IAAIklB,EAAInwB,OAASwB,EAAQ,GAAIpE,EAAI8O,IAAK9O,EAC7D+yB,EAAI3uB,EAASpE,GAAMiB,IAAuC,GAA5BqQ,EAAetR,EAAI,EAAIA,GAAU,IAmJnE,SAAS42B,EAAc7D,EAAK9xB,EAAOmD,EAAQoyB,EAAKtoB,EAAKL,GACnD,GAAIzJ,EAASoyB,EAAMzD,EAAInwB,OAAQ,MAAM,IAAIytB,WAAW,sBACpD,GAAIjsB,EAAS,EAAG,MAAM,IAAIisB,WAAW,sBAGvC,SAASwG,EAAY9D,EAAK9xB,EAAOmD,EAAQkN,EAAcwlB,GAKrD,OAJKA,GACHF,EAAa7D,EAAK9xB,EAAOmD,EAAQ,GAEnC4rB,EAAQkB,MAAM6B,EAAK9xB,EAAOmD,EAAQkN,EAAc,GAAI,GAC7ClN,EAAS,EAWlB,SAAS2yB,EAAahE,EAAK9xB,EAAOmD,EAAQkN,EAAcwlB,GAKtD,OAJKA,GACHF,EAAa7D,EAAK9xB,EAAOmD,EAAQ,GAEnC4rB,EAAQkB,MAAM6B,EAAK9xB,EAAOmD,EAAQkN,EAAc,GAAI,GAC7ClN,EAAS,EA/clBkJ,EAAO1L,UAAUQ,MAAQ,SAAgBmC,EAAOoJ,GAC9C,IAoBIqpB,EApBAppB,EAAMhO,KAAKgD,OAqBf,IApBA2B,IAAUA,GAGE,GACVA,GAASqJ,GACG,IAAGrJ,EAAQ,GACdA,EAAQqJ,IACjBrJ,EAAQqJ,IANVD,OAAcwgB,IAARxgB,EAAoBC,IAAQD,GASxB,GACRA,GAAOC,GACG,IAAGD,EAAM,GACVA,EAAMC,IACfD,EAAMC,GAGJD,EAAMpJ,IAAOoJ,EAAMpJ,GAGnB+I,EAAO4iB,qBACT8G,EAASp3B,KAAKq1B,SAAS1wB,EAAOoJ,IACvB2iB,UAAYhjB,EAAO1L,cACrB,CACL,IAAIq1B,EAAWtpB,EAAMpJ,EACrByyB,EAAS,IAAI1pB,EAAO2pB,OAAU9I,GAC9B,IAAK,IAAInuB,EAAI,EAAGA,EAAIi3B,IAAYj3B,EAC9Bg3B,EAAOh3B,GAAKJ,KAAKI,EAAIuE,GAIzB,OAAOyyB,GAWT1pB,EAAO1L,UAAUs1B,WAAa,SAAqB9yB,EAAQgN,EAAY0lB,GACrE1yB,GAAkB,EAClBgN,GAA0B,EACrB0lB,GAAUP,EAAYnyB,EAAQgN,EAAYxR,KAAKgD,QAKpD,IAHA,IAAI0J,EAAM1M,KAAKwE,GACXqH,EAAM,EACNzL,EAAI,IACCA,EAAIoR,IAAe3F,GAAO,MACjCa,GAAO1M,KAAKwE,EAASpE,GAAKyL,EAG5B,OAAOa,GAGTgB,EAAO1L,UAAUu1B,WAAa,SAAqB/yB,EAAQgN,EAAY0lB,GACrE1yB,GAAkB,EAClBgN,GAA0B,EACrB0lB,GACHP,EAAYnyB,EAAQgN,EAAYxR,KAAKgD,QAKvC,IAFA,IAAI0J,EAAM1M,KAAKwE,IAAWgN,GACtB3F,EAAM,EACH2F,EAAa,IAAM3F,GAAO,MAC/Ba,GAAO1M,KAAKwE,IAAWgN,GAAc3F,EAGvC,OAAOa,GAGTgB,EAAO1L,UAAUw1B,UAAY,SAAoBhzB,EAAQ0yB,GAEvD,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACpChD,KAAKwE,IAGdkJ,EAAO1L,UAAUy1B,aAAe,SAAuBjzB,EAAQ0yB,GAE7D,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACpChD,KAAKwE,GAAWxE,KAAKwE,EAAS,IAAM,GAG7CkJ,EAAO1L,UAAUoxB,aAAe,SAAuB5uB,EAAQ0yB,GAE7D,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACnChD,KAAKwE,IAAW,EAAKxE,KAAKwE,EAAS,IAG7CkJ,EAAO1L,UAAU01B,aAAe,SAAuBlzB,EAAQ0yB,GAG7D,OAFKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,SAElChD,KAAKwE,GACTxE,KAAKwE,EAAS,IAAM,EACpBxE,KAAKwE,EAAS,IAAM,IACD,SAAnBxE,KAAKwE,EAAS,IAGrBkJ,EAAO1L,UAAU21B,aAAe,SAAuBnzB,EAAQ0yB,GAG7D,OAFKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QAEpB,SAAfhD,KAAKwE,IACTxE,KAAKwE,EAAS,IAAM,GACrBxE,KAAKwE,EAAS,IAAM,EACrBxE,KAAKwE,EAAS,KAGlBkJ,EAAO1L,UAAU41B,UAAY,SAAoBpzB,EAAQgN,EAAY0lB,GACnE1yB,GAAkB,EAClBgN,GAA0B,EACrB0lB,GAAUP,EAAYnyB,EAAQgN,EAAYxR,KAAKgD,QAKpD,IAHA,IAAI0J,EAAM1M,KAAKwE,GACXqH,EAAM,EACNzL,EAAI,IACCA,EAAIoR,IAAe3F,GAAO,MACjCa,GAAO1M,KAAKwE,EAASpE,GAAKyL,EAM5B,OAFIa,IAFJb,GAAO,OAESa,GAAO1H,KAAK+G,IAAI,EAAG,EAAIyF,IAEhC9E,GAGTgB,EAAO1L,UAAU61B,UAAY,SAAoBrzB,EAAQgN,EAAY0lB,GACnE1yB,GAAkB,EAClBgN,GAA0B,EACrB0lB,GAAUP,EAAYnyB,EAAQgN,EAAYxR,KAAKgD,QAKpD,IAHA,IAAI5C,EAAIoR,EACJ3F,EAAM,EACNa,EAAM1M,KAAKwE,IAAWpE,GACnBA,EAAI,IAAMyL,GAAO,MACtBa,GAAO1M,KAAKwE,IAAWpE,GAAKyL,EAM9B,OAFIa,IAFJb,GAAO,OAESa,GAAO1H,KAAK+G,IAAI,EAAG,EAAIyF,IAEhC9E,GAGTgB,EAAO1L,UAAU81B,SAAW,SAAmBtzB,EAAQ0yB,GAErD,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACtB,IAAfhD,KAAKwE,IAC0B,GAA5B,IAAOxE,KAAKwE,GAAU,GADKxE,KAAKwE,IAI3CkJ,EAAO1L,UAAU+1B,YAAc,SAAsBvzB,EAAQ0yB,GACtDA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QAC3C,IAAI0J,EAAM1M,KAAKwE,GAAWxE,KAAKwE,EAAS,IAAM,EAC9C,OAAc,MAANkI,EAAsB,WAANA,EAAmBA,GAG7CgB,EAAO1L,UAAUg2B,YAAc,SAAsBxzB,EAAQ0yB,GACtDA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QAC3C,IAAI0J,EAAM1M,KAAKwE,EAAS,GAAMxE,KAAKwE,IAAW,EAC9C,OAAc,MAANkI,EAAsB,WAANA,EAAmBA,GAG7CgB,EAAO1L,UAAUi2B,YAAc,SAAsBzzB,EAAQ0yB,GAG3D,OAFKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QAEnChD,KAAKwE,GACVxE,KAAKwE,EAAS,IAAM,EACpBxE,KAAKwE,EAAS,IAAM,GACpBxE,KAAKwE,EAAS,IAAM,IAGzBkJ,EAAO1L,UAAUk2B,YAAc,SAAsB1zB,EAAQ0yB,GAG3D,OAFKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QAEnChD,KAAKwE,IAAW,GACrBxE,KAAKwE,EAAS,IAAM,GACpBxE,KAAKwE,EAAS,IAAM,EACpBxE,KAAKwE,EAAS,IAGnBkJ,EAAO1L,UAAUm2B,YAAc,SAAsB3zB,EAAQ0yB,GAE3D,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACpCotB,EAAQ8C,KAAKlzB,KAAMwE,GAAQ,EAAM,GAAI,IAG9CkJ,EAAO1L,UAAUo2B,YAAc,SAAsB5zB,EAAQ0yB,GAE3D,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACpCotB,EAAQ8C,KAAKlzB,KAAMwE,GAAQ,EAAO,GAAI,IAG/CkJ,EAAO1L,UAAUq2B,aAAe,SAAuB7zB,EAAQ0yB,GAE7D,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACpCotB,EAAQ8C,KAAKlzB,KAAMwE,GAAQ,EAAM,GAAI,IAG9CkJ,EAAO1L,UAAUs2B,aAAe,SAAuB9zB,EAAQ0yB,GAE7D,OADKA,GAAUP,EAAYnyB,EAAQ,EAAGxE,KAAKgD,QACpCotB,EAAQ8C,KAAKlzB,KAAMwE,GAAQ,EAAO,GAAI,IAS/CkJ,EAAO1L,UAAUu2B,YAAc,SAAsBl3B,EAAOmD,EAAQgN,EAAY0lB,IAC9E71B,GAASA,EACTmD,GAAkB,EAClBgN,GAA0B,EACrB0lB,IAEHL,EAAS72B,KAAMqB,EAAOmD,EAAQgN,EADfxM,KAAK+G,IAAI,EAAG,EAAIyF,GAAc,EACO,GAGtD,IAAI3F,EAAM,EACNzL,EAAI,EAER,IADAJ,KAAKwE,GAAkB,IAARnD,IACNjB,EAAIoR,IAAe3F,GAAO,MACjC7L,KAAKwE,EAASpE,GAAMiB,EAAQwK,EAAO,IAGrC,OAAOrH,EAASgN,GAGlB9D,EAAO1L,UAAUw2B,YAAc,SAAsBn3B,EAAOmD,EAAQgN,EAAY0lB,IAC9E71B,GAASA,EACTmD,GAAkB,EAClBgN,GAA0B,EACrB0lB,IAEHL,EAAS72B,KAAMqB,EAAOmD,EAAQgN,EADfxM,KAAK+G,IAAI,EAAG,EAAIyF,GAAc,EACO,GAGtD,IAAIpR,EAAIoR,EAAa,EACjB3F,EAAM,EAEV,IADA7L,KAAKwE,EAASpE,GAAa,IAARiB,IACVjB,GAAK,IAAMyL,GAAO,MACzB7L,KAAKwE,EAASpE,GAAMiB,EAAQwK,EAAO,IAGrC,OAAOrH,EAASgN,GAGlB9D,EAAO1L,UAAUy2B,WAAa,SAAqBp3B,EAAOmD,EAAQ0yB,GAMhE,OALA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,IAAM,GACjDkJ,EAAO4iB,sBAAqBjvB,EAAQ2D,KAAKC,MAAM5D,IACpDrB,KAAKwE,GAAmB,IAARnD,EACTmD,EAAS,GAWlBkJ,EAAO1L,UAAU02B,cAAgB,SAAwBr3B,EAAOmD,EAAQ0yB,GAUtE,OATA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,MAAQ,GACpDkJ,EAAO4iB,qBACTtwB,KAAKwE,GAAmB,IAARnD,EAChBrB,KAAKwE,EAAS,GAAMnD,IAAU,GAE9By1B,EAAkB92B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAGlBkJ,EAAO1L,UAAU22B,cAAgB,SAAwBt3B,EAAOmD,EAAQ0yB,GAUtE,OATA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,MAAQ,GACpDkJ,EAAO4iB,qBACTtwB,KAAKwE,GAAWnD,IAAU,EAC1BrB,KAAKwE,EAAS,GAAc,IAARnD,GAEpBy1B,EAAkB92B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAUlBkJ,EAAO1L,UAAU42B,cAAgB,SAAwBv3B,EAAOmD,EAAQ0yB,GAYtE,OAXA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,WAAY,GACxDkJ,EAAO4iB,qBACTtwB,KAAKwE,EAAS,GAAMnD,IAAU,GAC9BrB,KAAKwE,EAAS,GAAMnD,IAAU,GAC9BrB,KAAKwE,EAAS,GAAMnD,IAAU,EAC9BrB,KAAKwE,GAAmB,IAARnD,GAEhB01B,EAAkB/2B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAGlBkJ,EAAO1L,UAAU62B,cAAgB,SAAwBx3B,EAAOmD,EAAQ0yB,GAYtE,OAXA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,WAAY,GACxDkJ,EAAO4iB,qBACTtwB,KAAKwE,GAAWnD,IAAU,GAC1BrB,KAAKwE,EAAS,GAAMnD,IAAU,GAC9BrB,KAAKwE,EAAS,GAAMnD,IAAU,EAC9BrB,KAAKwE,EAAS,GAAc,IAARnD,GAEpB01B,EAAkB/2B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAGlBkJ,EAAO1L,UAAU82B,WAAa,SAAqBz3B,EAAOmD,EAAQgN,EAAY0lB,GAG5E,GAFA71B,GAASA,EACTmD,GAAkB,GACb0yB,EAAU,CACb,IAAI6B,EAAQ/zB,KAAK+G,IAAI,EAAG,EAAIyF,EAAa,GAEzCqlB,EAAS72B,KAAMqB,EAAOmD,EAAQgN,EAAYunB,EAAQ,GAAIA,GAGxD,IAAI34B,EAAI,EACJyL,EAAM,EACNJ,EAAM,EAEV,IADAzL,KAAKwE,GAAkB,IAARnD,IACNjB,EAAIoR,IAAe3F,GAAO,MAC7BxK,EAAQ,GAAa,IAARoK,GAAsC,IAAzBzL,KAAKwE,EAASpE,EAAI,KAC9CqL,EAAM,GAERzL,KAAKwE,EAASpE,IAAOiB,EAAQwK,GAAQ,GAAKJ,EAAM,IAGlD,OAAOjH,EAASgN,GAGlB9D,EAAO1L,UAAUg3B,WAAa,SAAqB33B,EAAOmD,EAAQgN,EAAY0lB,GAG5E,GAFA71B,GAASA,EACTmD,GAAkB,GACb0yB,EAAU,CACb,IAAI6B,EAAQ/zB,KAAK+G,IAAI,EAAG,EAAIyF,EAAa,GAEzCqlB,EAAS72B,KAAMqB,EAAOmD,EAAQgN,EAAYunB,EAAQ,GAAIA,GAGxD,IAAI34B,EAAIoR,EAAa,EACjB3F,EAAM,EACNJ,EAAM,EAEV,IADAzL,KAAKwE,EAASpE,GAAa,IAARiB,IACVjB,GAAK,IAAMyL,GAAO,MACrBxK,EAAQ,GAAa,IAARoK,GAAsC,IAAzBzL,KAAKwE,EAASpE,EAAI,KAC9CqL,EAAM,GAERzL,KAAKwE,EAASpE,IAAOiB,EAAQwK,GAAQ,GAAKJ,EAAM,IAGlD,OAAOjH,EAASgN,GAGlB9D,EAAO1L,UAAUi3B,UAAY,SAAoB53B,EAAOmD,EAAQ0yB,GAO9D,OANA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,KAAO,KAClDkJ,EAAO4iB,sBAAqBjvB,EAAQ2D,KAAKC,MAAM5D,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCrB,KAAKwE,GAAmB,IAARnD,EACTmD,EAAS,GAGlBkJ,EAAO1L,UAAUk3B,aAAe,SAAuB73B,EAAOmD,EAAQ0yB,GAUpE,OATA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,OAAS,OACrDkJ,EAAO4iB,qBACTtwB,KAAKwE,GAAmB,IAARnD,EAChBrB,KAAKwE,EAAS,GAAMnD,IAAU,GAE9By1B,EAAkB92B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAGlBkJ,EAAO1L,UAAUm3B,aAAe,SAAuB93B,EAAOmD,EAAQ0yB,GAUpE,OATA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,OAAS,OACrDkJ,EAAO4iB,qBACTtwB,KAAKwE,GAAWnD,IAAU,EAC1BrB,KAAKwE,EAAS,GAAc,IAARnD,GAEpBy1B,EAAkB92B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAGlBkJ,EAAO1L,UAAUo3B,aAAe,SAAuB/3B,EAAOmD,EAAQ0yB,GAYpE,OAXA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,YAAa,YACzDkJ,EAAO4iB,qBACTtwB,KAAKwE,GAAmB,IAARnD,EAChBrB,KAAKwE,EAAS,GAAMnD,IAAU,EAC9BrB,KAAKwE,EAAS,GAAMnD,IAAU,GAC9BrB,KAAKwE,EAAS,GAAMnD,IAAU,IAE9B01B,EAAkB/2B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAGlBkJ,EAAO1L,UAAUq3B,aAAe,SAAuBh4B,EAAOmD,EAAQ0yB,GAapE,OAZA71B,GAASA,EACTmD,GAAkB,EACb0yB,GAAUL,EAAS72B,KAAMqB,EAAOmD,EAAQ,EAAG,YAAa,YACzDnD,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCqM,EAAO4iB,qBACTtwB,KAAKwE,GAAWnD,IAAU,GAC1BrB,KAAKwE,EAAS,GAAMnD,IAAU,GAC9BrB,KAAKwE,EAAS,GAAMnD,IAAU,EAC9BrB,KAAKwE,EAAS,GAAc,IAARnD,GAEpB01B,EAAkB/2B,KAAMqB,EAAOmD,GAAQ,GAElCA,EAAS,GAgBlBkJ,EAAO1L,UAAUs3B,aAAe,SAAuBj4B,EAAOmD,EAAQ0yB,GACpE,OAAOD,EAAWj3B,KAAMqB,EAAOmD,GAAQ,EAAM0yB,IAG/CxpB,EAAO1L,UAAUu3B,aAAe,SAAuBl4B,EAAOmD,EAAQ0yB,GACpE,OAAOD,EAAWj3B,KAAMqB,EAAOmD,GAAQ,EAAO0yB,IAWhDxpB,EAAO1L,UAAUw3B,cAAgB,SAAwBn4B,EAAOmD,EAAQ0yB,GACtE,OAAOC,EAAYn3B,KAAMqB,EAAOmD,GAAQ,EAAM0yB,IAGhDxpB,EAAO1L,UAAUy3B,cAAgB,SAAwBp4B,EAAOmD,EAAQ0yB,GACtE,OAAOC,EAAYn3B,KAAMqB,EAAOmD,GAAQ,EAAO0yB,IAIjDxpB,EAAO1L,UAAU0N,KAAO,SAAejG,EAAQiwB,EAAa/0B,EAAOoJ,GAQjE,GAPKpJ,IAAOA,EAAQ,GACfoJ,GAAe,IAARA,IAAWA,EAAM/N,KAAKgD,QAC9B02B,GAAejwB,EAAOzG,SAAQ02B,EAAcjwB,EAAOzG,QAClD02B,IAAaA,EAAc,GAC5B3rB,EAAM,GAAKA,EAAMpJ,IAAOoJ,EAAMpJ,GAG9BoJ,IAAQpJ,EAAO,OAAO,EAC1B,GAAsB,IAAlB8E,EAAOzG,QAAgC,IAAhBhD,KAAKgD,OAAc,OAAO,EAGrD,GAAI02B,EAAc,EAChB,MAAM,IAAIjJ,WAAW,6BAEvB,GAAI9rB,EAAQ,GAAKA,GAAS3E,KAAKgD,OAAQ,MAAM,IAAIytB,WAAW,6BAC5D,GAAI1iB,EAAM,EAAG,MAAM,IAAI0iB,WAAW,2BAG9B1iB,EAAM/N,KAAKgD,SAAQ+K,EAAM/N,KAAKgD,QAC9ByG,EAAOzG,OAAS02B,EAAc3rB,EAAMpJ,IACtCoJ,EAAMtE,EAAOzG,OAAS02B,EAAc/0B,GAGtC,IACIvE,EADA4N,EAAMD,EAAMpJ,EAGhB,GAAI3E,OAASyJ,GAAU9E,EAAQ+0B,GAAeA,EAAc3rB,EAE1D,IAAK3N,EAAI4N,EAAM,EAAG5N,GAAK,IAAKA,EAC1BqJ,EAAOrJ,EAAIs5B,GAAe15B,KAAKI,EAAIuE,QAEhC,GAAIqJ,EAAM,MAASN,EAAO4iB,oBAE/B,IAAKlwB,EAAI,EAAGA,EAAI4N,IAAO5N,EACrBqJ,EAAOrJ,EAAIs5B,GAAe15B,KAAKI,EAAIuE,QAGrC/B,WAAWZ,UAAUyC,IAAIlE,KACvBkJ,EACAzJ,KAAKq1B,SAAS1wB,EAAOA,EAAQqJ,GAC7B0rB,GAIJ,OAAO1rB,GAOTN,EAAO1L,UAAU2zB,KAAO,SAAejpB,EAAK/H,EAAOoJ,EAAKojB,GAEtD,GAAmB,iBAARzkB,EAAkB,CAS3B,GARqB,iBAAV/H,GACTwsB,EAAWxsB,EACXA,EAAQ,EACRoJ,EAAM/N,KAAKgD,QACa,iBAAR+K,IAChBojB,EAAWpjB,EACXA,EAAM/N,KAAKgD,QAEM,IAAf0J,EAAI1J,OAAc,CACpB,IAAImF,EAAOuE,EAAIwB,WAAW,GACtB/F,EAAO,MACTuE,EAAMvE,GAGV,QAAiBomB,IAAb4C,GAA8C,iBAAbA,EACnC,MAAM,IAAIL,UAAU,6BAEtB,GAAwB,iBAAbK,IAA0BzjB,EAAO0jB,WAAWD,GACrD,MAAM,IAAIL,UAAU,qBAAuBK,OAErB,iBAARzkB,IAChBA,GAAY,KAId,GAAI/H,EAAQ,GAAK3E,KAAKgD,OAAS2B,GAAS3E,KAAKgD,OAAS+K,EACpD,MAAM,IAAI0iB,WAAW,sBAGvB,GAAI1iB,GAAOpJ,EACT,OAAO3E,KAQT,IAAII,EACJ,GANAuE,KAAkB,EAClBoJ,OAAcwgB,IAARxgB,EAAoB/N,KAAKgD,OAAS+K,IAAQ,EAE3CrB,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKtM,EAAIuE,EAAOvE,EAAI2N,IAAO3N,EACzBJ,KAAKI,GAAKsM,MAEP,CACL,IAAIzG,EAAQyH,EAAO+jB,SAAS/kB,GACxBA,EACAqlB,EAAY,IAAIrkB,EAAOhB,EAAKykB,GAAUxoB,YACtCqF,EAAM/H,EAAMjD,OAChB,IAAK5C,EAAI,EAAGA,EAAI2N,EAAMpJ,IAASvE,EAC7BJ,KAAKI,EAAIuE,GAASsB,EAAM7F,EAAI4N,GAIhC,OAAOhO,MAMT,IAAI25B,EAAoB,qBAmBxB,SAASptB,EAAO1K,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAE8G,SAAS,IAC7B9G,EAAE8G,SAAS,IAGpB,SAASopB,EAAab,EAAQkD,GAE5B,IAAIQ,EADJR,EAAQA,GAASwF,IAMjB,IAJA,IAAI52B,EAASkuB,EAAOluB,OAChB62B,EAAgB,KAChB5zB,EAAQ,GAEH7F,EAAI,EAAGA,EAAI4C,IAAU5C,EAAG,CAI/B,IAHAw0B,EAAY1D,EAAOhjB,WAAW9N,IAGd,OAAUw0B,EAAY,MAAQ,CAE5C,IAAKiF,EAAe,CAElB,GAAIjF,EAAY,MAAQ,EAEjBR,GAAS,IAAM,GAAGnuB,EAAMxC,KAAK,IAAM,IAAM,KAC9C,SACK,GAAIrD,EAAI,IAAM4C,EAAQ,EAEtBoxB,GAAS,IAAM,GAAGnuB,EAAMxC,KAAK,IAAM,IAAM,KAC9C,SAIFo2B,EAAgBjF,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBR,GAAS,IAAM,GAAGnuB,EAAMxC,KAAK,IAAM,IAAM,KAC9Co2B,EAAgBjF,EAChB,SAIFA,EAAkE,OAArDiF,EAAgB,OAAU,GAAKjF,EAAY,YAC/CiF,IAEJzF,GAAS,IAAM,GAAGnuB,EAAMxC,KAAK,IAAM,IAAM,KAMhD,GAHAo2B,EAAgB,KAGZjF,EAAY,IAAM,CACpB,IAAKR,GAAS,GAAK,EAAG,MACtBnuB,EAAMxC,KAAKmxB,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKR,GAAS,GAAK,EAAG,MACtBnuB,EAAMxC,KACJmxB,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKR,GAAS,GAAK,EAAG,MACtBnuB,EAAMxC,KACJmxB,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAIztB,MAAM,sBARhB,IAAKitB,GAAS,GAAK,EAAG,MACtBnuB,EAAMxC,KACJmxB,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAO3uB,EA4BT,SAAS+rB,EAAelkB,GACtB,OAAOqiB,EAAO2J,YAhIhB,SAAsBhsB,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAIud,KAAavd,EAAIud,OAClBvd,EAAIc,QAAQ,aAAc,IAZ3BmrB,CAAWjsB,GAAKc,QAAQ+qB,EAAmB,KAEzC32B,OAAS,EAAG,MAAO,GAE3B,KAAO8K,EAAI9K,OAAS,GAAM,GACxB8K,GAAY,IAEd,OAAOA,EAuHmBksB,CAAYlsB,IAGxC,SAAS+lB,EAAYoG,EAAKC,EAAK11B,EAAQxB,GACrC,IAAK,IAAI5C,EAAI,EAAGA,EAAI4C,KACb5C,EAAIoE,GAAU01B,EAAIl3B,QAAY5C,GAAK65B,EAAIj3B,UADhB5C,EAE5B85B,EAAI95B,EAAIoE,GAAUy1B,EAAI75B,GAExB,OAAOA,K,8CCrvDTR,EAAQ4R,WAuCR,SAAqB2oB,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClD36B,EAAQk6B,YAiDR,SAAsBK,GACpB,IAAIhY,EAcA/hB,EAbAg6B,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBtH,EAAM,IAAI0H,EAVhB,SAAsBL,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BE,CAAYN,EAAKG,EAAUC,IAEzCG,EAAU,EAGV1sB,EAAMusB,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKl6B,EAAI,EAAGA,EAAI4N,EAAK5N,GAAK,EACxB+hB,EACGwY,EAAUR,EAAIjsB,WAAW9N,KAAO,GAChCu6B,EAAUR,EAAIjsB,WAAW9N,EAAI,KAAO,GACpCu6B,EAAUR,EAAIjsB,WAAW9N,EAAI,KAAO,EACrCu6B,EAAUR,EAAIjsB,WAAW9N,EAAI,IAC/B0yB,EAAI4H,KAAcvY,GAAO,GAAM,IAC/B2Q,EAAI4H,KAAcvY,GAAO,EAAK,IAC9B2Q,EAAI4H,KAAmB,IAANvY,EAGK,IAApBoY,IACFpY,EACGwY,EAAUR,EAAIjsB,WAAW9N,KAAO,EAChCu6B,EAAUR,EAAIjsB,WAAW9N,EAAI,KAAO,EACvC0yB,EAAI4H,KAAmB,IAANvY,GAGK,IAApBoY,IACFpY,EACGwY,EAAUR,EAAIjsB,WAAW9N,KAAO,GAChCu6B,EAAUR,EAAIjsB,WAAW9N,EAAI,KAAO,EACpCu6B,EAAUR,EAAIjsB,WAAW9N,EAAI,KAAO,EACvC0yB,EAAI4H,KAAcvY,GAAO,EAAK,IAC9B2Q,EAAI4H,KAAmB,IAANvY,GAGnB,OAAO2Q,GA3FTlzB,EAAQ00B,cAkHR,SAAwBsG,GAQtB,IAPA,IAAIzY,EACAnU,EAAM4sB,EAAM53B,OACZqjB,EAAarY,EAAM,EACnB6sB,EAAQ,GAIHz6B,EAAI,EAAG06B,EAAO9sB,EAAMqY,EAAYjmB,EAAI06B,EAAM16B,GAH9B,MAInBy6B,EAAMp3B,KAAKs3B,EACTH,EAAOx6B,EAAIA,EALM,MAKgB06B,EAAOA,EAAQ16B,EAL/B,QAUF,IAAfimB,GACFlE,EAAMyY,EAAM5sB,EAAM,GAClB6sB,EAAMp3B,KACJu3B,EAAO7Y,GAAO,GACd6Y,EAAQ7Y,GAAO,EAAK,IACpB,OAEsB,IAAfkE,IACTlE,GAAOyY,EAAM5sB,EAAM,IAAM,GAAK4sB,EAAM5sB,EAAM,GAC1C6sB,EAAMp3B,KACJu3B,EAAO7Y,GAAO,IACd6Y,EAAQ7Y,GAAO,EAAK,IACpB6Y,EAAQ7Y,GAAO,EAAK,IACpB,MAIJ,OAAO0Y,EAAMzzB,KAAK,KA3IpB,IALA,IAAI4zB,EAAS,GACTL,EAAY,GACZH,EAA4B,oBAAf53B,WAA6BA,WAAaF,MAEvDyF,EAAO,mEACF/H,EAAI,EAAG4N,EAAM7F,EAAKnF,OAAQ5C,EAAI4N,IAAO5N,EAC5C46B,EAAO56B,GAAK+H,EAAK/H,GACjBu6B,EAAUxyB,EAAK+F,WAAW9N,IAAMA,EAQlC,SAASi6B,EAASF,GAChB,IAAInsB,EAAMmsB,EAAIn3B,OAEd,GAAIgL,EAAM,EAAI,EACZ,MAAM,IAAI7G,MAAM,kDAKlB,IAAImzB,EAAWH,EAAIxM,QAAQ,KAO3B,OANkB,IAAd2M,IAAiBA,EAAWtsB,GAMzB,CAACssB,EAJcA,IAAatsB,EAC/B,EACA,EAAKssB,EAAW,GAsEtB,SAASS,EAAaH,EAAOj2B,EAAOoJ,GAGlC,IAFA,IAAIoU,EARoB/T,EASpBgV,EAAS,GACJhjB,EAAIuE,EAAOvE,EAAI2N,EAAK3N,GAAK,EAChC+hB,GACIyY,EAAMx6B,IAAM,GAAM,WAClBw6B,EAAMx6B,EAAI,IAAM,EAAK,QACP,IAAfw6B,EAAMx6B,EAAI,IACbgjB,EAAO3f,KAdFu3B,GADiB5sB,EAeM+T,IAdT,GAAK,IACxB6Y,EAAO5sB,GAAO,GAAK,IACnB4sB,EAAO5sB,GAAO,EAAI,IAClB4sB,EAAa,GAAN5sB,IAaT,OAAOgV,EAAOhc,KAAK,IAjGrBuzB,EAAU,IAAIzsB,WAAW,IAAM,GAC/BysB,EAAU,IAAIzsB,WAAW,IAAM,I,cCnB/BtO,EAAQszB,KAAO,SAAUrM,EAAQriB,EAAQy2B,EAAMC,EAAMC,GACnD,IAAIvtB,EAAGpN,EACH46B,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTn7B,EAAI66B,EAAQE,EAAS,EAAK,EAC1Bz6B,EAAIu6B,GAAQ,EAAI,EAChB94B,EAAI0kB,EAAOriB,EAASpE,GAOxB,IALAA,GAAKM,EAELkN,EAAIzL,GAAM,IAAOo5B,GAAU,EAC3Bp5B,KAAQo5B,EACRA,GAASH,EACFG,EAAQ,EAAG3tB,EAAS,IAAJA,EAAWiZ,EAAOriB,EAASpE,GAAIA,GAAKM,EAAG66B,GAAS,GAKvE,IAHA/6B,EAAIoN,GAAM,IAAO2tB,GAAU,EAC3B3tB,KAAQ2tB,EACRA,GAASL,EACFK,EAAQ,EAAG/6B,EAAS,IAAJA,EAAWqmB,EAAOriB,EAASpE,GAAIA,GAAKM,EAAG66B,GAAS,GAEvE,GAAU,IAAN3tB,EACFA,EAAI,EAAI0tB,MACH,IAAI1tB,IAAMytB,EACf,OAAO76B,EAAIg7B,IAAsB5B,KAAdz3B,GAAK,EAAI,GAE5B3B,GAAQwE,KAAK+G,IAAI,EAAGmvB,GACpBttB,GAAQ0tB,EAEV,OAAQn5B,GAAK,EAAI,GAAK3B,EAAIwE,KAAK+G,IAAI,EAAG6B,EAAIstB,IAG5Ct7B,EAAQ0xB,MAAQ,SAAUzK,EAAQxlB,EAAOmD,EAAQy2B,EAAMC,EAAMC,GAC3D,IAAIvtB,EAAGpN,EAAGC,EACN26B,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBI,EAAe,KAATP,EAAcl2B,KAAK+G,IAAI,GAAI,IAAM/G,KAAK+G,IAAI,GAAI,IAAM,EAC1D3L,EAAI66B,EAAO,EAAKE,EAAS,EACzBz6B,EAAIu6B,EAAO,GAAK,EAChB94B,EAAId,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQ2D,KAAKsN,IAAIjR,GAEbsxB,MAAMtxB,IAAUA,IAAUu4B,KAC5Bp5B,EAAImyB,MAAMtxB,GAAS,EAAI,EACvBuM,EAAIytB,IAEJztB,EAAI5I,KAAKC,MAAMD,KAAK6C,IAAIxG,GAAS2D,KAAK02B,KAClCr6B,GAASZ,EAAIuE,KAAK+G,IAAI,GAAI6B,IAAM,IAClCA,IACAnN,GAAK,IAGLY,GADEuM,EAAI0tB,GAAS,EACNG,EAAKh7B,EAELg7B,EAAKz2B,KAAK+G,IAAI,EAAG,EAAIuvB,IAEpB76B,GAAK,IACfmN,IACAnN,GAAK,GAGHmN,EAAI0tB,GAASD,GACf76B,EAAI,EACJoN,EAAIytB,GACKztB,EAAI0tB,GAAS,GACtB96B,GAAMa,EAAQZ,EAAK,GAAKuE,KAAK+G,IAAI,EAAGmvB,GACpCttB,GAAQ0tB,IAER96B,EAAIa,EAAQ2D,KAAK+G,IAAI,EAAGuvB,EAAQ,GAAKt2B,KAAK+G,IAAI,EAAGmvB,GACjDttB,EAAI,IAIDstB,GAAQ,EAAGrU,EAAOriB,EAASpE,GAAS,IAAJI,EAAUJ,GAAKM,EAAGF,GAAK,IAAK06B,GAAQ,GAI3E,IAFAttB,EAAKA,GAAKstB,EAAQ16B,EAClB46B,GAAQF,EACDE,EAAO,EAAGvU,EAAOriB,EAASpE,GAAS,IAAJwN,EAAUxN,GAAKM,EAAGkN,GAAK,IAAKwtB,GAAQ,GAE1EvU,EAAOriB,EAASpE,EAAIM,IAAU,IAAJyB,I,cClF5B,IAAIwG,EAAW,GAAGA,SAElB9I,EAAOD,QAAU8C,MAAM2L,SAAW,SAAUykB,GAC1C,MAA6B,kBAAtBnqB,EAASpI,KAAKuyB,K,6BCHvB;;;;;;;;;;;;;;;AAgBA,IAAI6I,EAAgB,SAASj7B,EAAG6P,GAI5B,OAHAorB,EAAgB76B,OAAO86B,gBAClB,CAAElL,UAAW,cAAgBhuB,OAAS,SAAUhC,EAAG6P,GAAK7P,EAAEgwB,UAAYngB,IACvE,SAAU7P,EAAG6P,GAAK,IAAK,IAAIrO,KAAKqO,EAAOA,EAAEtO,eAAeC,KAAIxB,EAAEwB,GAAKqO,EAAErO,MACpDxB,EAAG6P,IAGrB,SAASsrB,EAAUn7B,EAAG6P,GAEzB,SAASurB,IAAO97B,KAAKkD,YAAcxC,EADnCi7B,EAAcj7B,EAAG6P,GAEjB7P,EAAEsB,UAAkB,OAANuO,EAAazP,OAAOY,OAAO6O,IAAMurB,EAAG95B,UAAYuO,EAAEvO,UAAW,IAAI85B,GAG5E,IAAIC,EAAW,WAQlB,OAPAA,EAAWj7B,OAAOk7B,QAAU,SAAkB16B,GAC1C,IAAK,IAAIa,EAAG/B,EAAI,EAAGyB,EAAIc,UAAUK,OAAQ5C,EAAIyB,EAAGzB,IAE5C,IAAK,IAAI8B,KADTC,EAAIQ,UAAUvC,GACOU,OAAOkB,UAAUC,eAAe1B,KAAK4B,EAAGD,KAAIZ,EAAEY,GAAKC,EAAED,IAE9E,OAAOZ,IAEKuB,MAAM7C,KAAM2C,YAGzB,SAASs5B,EAAO95B,EAAGyL,GACtB,IAAItM,EAAI,GACR,IAAK,IAAIY,KAAKC,EAAOrB,OAAOkB,UAAUC,eAAe1B,KAAK4B,EAAGD,IAAM0L,EAAE+f,QAAQzrB,GAAK,IAC9EZ,EAAEY,GAAKC,EAAED,IACb,GAAS,MAALC,GAAqD,mBAAjCrB,OAAOo7B,sBACtB,KAAI97B,EAAI,EAAb,IAAgB8B,EAAIpB,OAAOo7B,sBAAsB/5B,GAAI/B,EAAI8B,EAAEc,OAAQ5C,IAC3DwN,EAAE+f,QAAQzrB,EAAE9B,IAAM,GAAKU,OAAOkB,UAAUm6B,qBAAqB57B,KAAK4B,EAAGD,EAAE9B,MACvEkB,EAAEY,EAAE9B,IAAM+B,EAAED,EAAE9B,KAE1B,OAAOkB,EAGJ,SAAS86B,EAAWC,EAAY5yB,EAAQ9H,EAAK26B,GAChD,IAA2H57B,EAAvHD,EAAIkC,UAAUK,OAAQ9B,EAAIT,EAAI,EAAIgJ,EAAkB,OAAT6yB,EAAgBA,EAAOx7B,OAAOy7B,yBAAyB9yB,EAAQ9H,GAAO26B,EACrH,GAAuB,iBAAZE,SAAoD,mBAArBA,QAAQC,SAAyBv7B,EAAIs7B,QAAQC,SAASJ,EAAY5yB,EAAQ9H,EAAK26B,QACpH,IAAK,IAAIl8B,EAAIi8B,EAAWr5B,OAAS,EAAG5C,GAAK,EAAGA,KAASM,EAAI27B,EAAWj8B,MAAIc,GAAKT,EAAI,EAAIC,EAAEQ,GAAKT,EAAI,EAAIC,EAAE+I,EAAQ9H,EAAKT,GAAKR,EAAE+I,EAAQ9H,KAAST,GAChJ,OAAOT,EAAI,GAAKS,GAAKJ,OAAOC,eAAe0I,EAAQ9H,EAAKT,GAAIA,EAGzD,SAASw7B,EAAQC,EAAYC,GAChC,OAAO,SAAUnzB,EAAQ9H,GAAOi7B,EAAUnzB,EAAQ9H,EAAKg7B,IAGpD,SAASE,EAAWC,EAAaC,GACpC,GAAuB,iBAAZP,SAAoD,mBAArBA,QAAQQ,SAAyB,OAAOR,QAAQQ,SAASF,EAAaC,GAG7G,SAASE,EAAUjO,EAASkO,EAAYC,EAAGC,GAC9C,OAAO,IAAKD,IAAMA,EAAIlO,WAAU,SAAUC,EAASC,GAC/C,SAASkO,EAAUh8B,GAAS,IAAMi8B,EAAKF,EAAU7Z,KAAKliB,IAAW,MAAOuM,GAAKuhB,EAAOvhB,IACpF,SAAS2vB,EAASl8B,GAAS,IAAMi8B,EAAKF,EAAiB,MAAE/7B,IAAW,MAAOuM,GAAKuhB,EAAOvhB,IACvF,SAAS0vB,EAAK/5B,GAAUA,EAAOi6B,KAAOtO,EAAQ3rB,EAAOlC,OAAS,IAAI87B,GAAE,SAAUjO,GAAWA,EAAQ3rB,EAAOlC,UAAWo8B,KAAKJ,EAAWE,GACnID,GAAMF,EAAYA,EAAUv6B,MAAMmsB,EAASkO,GAAc,KAAK3Z,WAI/D,SAASma,EAAY1O,EAAS2O,GACjC,IAAsGjX,EAAGnN,EAAGjY,EAAGyd,EAA3GpD,EAAI,CAAEiiB,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPv8B,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOw8B,KAAM,GAAIC,IAAK,IAChG,OAAOhf,EAAI,CAAEwE,KAAMya,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAX78B,SAA0B4d,EAAE5d,OAAO88B,UAAY,WAAa,OAAOj+B,OAAU+e,EACvJ,SAASif,EAAKn8B,GAAK,OAAO,SAAUsB,GAAK,OACzC,SAAc+6B,GACV,GAAIxX,EAAG,MAAM,IAAIoK,UAAU,mCAC3B,KAAOnV,GAAG,IACN,GAAI+K,EAAI,EAAGnN,IAAMjY,EAAY,EAAR48B,EAAG,GAAS3kB,EAAU,OAAI2kB,EAAG,GAAK3kB,EAAS,SAAOjY,EAAIiY,EAAU,SAAMjY,EAAEf,KAAKgZ,GAAI,GAAKA,EAAEgK,SAAWjiB,EAAIA,EAAEf,KAAKgZ,EAAG2kB,EAAG,KAAKV,KAAM,OAAOl8B,EAE3J,OADIiY,EAAI,EAAGjY,IAAG48B,EAAK,CAAS,EAARA,EAAG,GAAQ58B,EAAED,QACzB68B,EAAG,IACP,KAAK,EAAG,KAAK,EAAG58B,EAAI48B,EAAI,MACxB,KAAK,EAAc,OAAXviB,EAAEiiB,QAAgB,CAAEv8B,MAAO68B,EAAG,GAAIV,MAAM,GAChD,KAAK,EAAG7hB,EAAEiiB,QAASrkB,EAAI2kB,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKviB,EAAEoiB,IAAI7P,MAAOvS,EAAEmiB,KAAK5P,MAAO,SACxC,QACI,KAAkB5sB,GAAZA,EAAIqa,EAAEmiB,MAAY96B,OAAS,GAAK1B,EAAEA,EAAE0B,OAAS,MAAkB,IAAVk7B,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEviB,EAAI,EAAG,SACjG,GAAc,IAAVuiB,EAAG,MAAc58B,GAAM48B,EAAG,GAAK58B,EAAE,IAAM48B,EAAG,GAAK58B,EAAE,IAAM,CAAEqa,EAAEiiB,MAAQM,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYviB,EAAEiiB,MAAQt8B,EAAE,GAAI,CAAEqa,EAAEiiB,MAAQt8B,EAAE,GAAIA,EAAI48B,EAAI,MAC7D,GAAI58B,GAAKqa,EAAEiiB,MAAQt8B,EAAE,GAAI,CAAEqa,EAAEiiB,MAAQt8B,EAAE,GAAIqa,EAAEoiB,IAAIt6B,KAAKy6B,GAAK,MACvD58B,EAAE,IAAIqa,EAAEoiB,IAAI7P,MAChBvS,EAAEmiB,KAAK5P,MAAO,SAEtBgQ,EAAKP,EAAKp9B,KAAKyuB,EAASrT,GAC1B,MAAO/N,GAAKswB,EAAK,CAAC,EAAGtwB,GAAI2L,EAAI,EAAK,QAAUmN,EAAIplB,EAAI,EACtD,GAAY,EAAR48B,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE78B,MAAO68B,EAAG,GAAKA,EAAG,QAAK,EAAQV,MAAM,GArB9BF,CAAK,CAACz7B,EAAGsB,MAyBtD,SAASg7B,EAAa39B,EAAGZ,GAC5B,IAAK,IAAIsC,KAAK1B,EAAQZ,EAAQqC,eAAeC,KAAItC,EAAQsC,GAAK1B,EAAE0B,IAG7D,SAASk8B,EAASv9B,GACrB,IAAIL,EAAsB,mBAAXW,QAAyBN,EAAEM,OAAO88B,UAAW79B,EAAI,EAChE,OAAII,EAAUA,EAAED,KAAKM,GACd,CACH0iB,KAAM,WAEF,OADI1iB,GAAKT,GAAKS,EAAEmC,SAAQnC,OAAI,GACrB,CAAEQ,MAAOR,GAAKA,EAAET,KAAMo9B,MAAO38B,KAKzC,SAASw9B,EAAOx9B,EAAGgB,GACtB,IAAIrB,EAAsB,mBAAXW,QAAyBN,EAAEM,OAAO88B,UACjD,IAAKz9B,EAAG,OAAOK,EACf,IAAmBK,EAAY0M,EAA3BxN,EAAII,EAAED,KAAKM,GAAOy9B,EAAK,GAC3B,IACI,WAAc,IAANz8B,GAAgBA,KAAM,MAAQX,EAAId,EAAEmjB,QAAQia,MAAMc,EAAG76B,KAAKvC,EAAEG,OAExE,MAAOsF,GAASiH,EAAI,CAAEjH,MAAOA,GAC7B,QACI,IACQzF,IAAMA,EAAEs8B,OAASh9B,EAAIJ,EAAU,SAAII,EAAED,KAAKH,GAElD,QAAU,GAAIwN,EAAG,MAAMA,EAAEjH,OAE7B,OAAO23B,EAGJ,SAASC,IACZ,IAAK,IAAID,EAAK,GAAIl+B,EAAI,EAAGA,EAAIuC,UAAUK,OAAQ5C,IAC3Ck+B,EAAKA,EAAGr6B,OAAOo6B,EAAO17B,UAAUvC,KACpC,OAAOk+B,EAGJ,SAASE,IACZ,IAAK,IAAIr8B,EAAI,EAAG/B,EAAI,EAAGq+B,EAAK97B,UAAUK,OAAQ5C,EAAIq+B,EAAIr+B,IAAK+B,GAAKQ,UAAUvC,GAAG4C,OACxE,IAAI9B,EAAIwB,MAAMP,GAAIuO,EAAI,EAA3B,IAA8BtQ,EAAI,EAAGA,EAAIq+B,EAAIr+B,IACzC,IAAK,IAAIkQ,EAAI3N,UAAUvC,GAAI8O,EAAI,EAAGwvB,EAAKpuB,EAAEtN,OAAQkM,EAAIwvB,EAAIxvB,IAAKwB,IAC1DxP,EAAEwP,GAAKJ,EAAEpB,GACjB,OAAOhO,EAGJ,SAASy9B,EAAQx7B,GACpB,OAAOnD,gBAAgB2+B,GAAW3+B,KAAKmD,EAAIA,EAAGnD,MAAQ,IAAI2+B,EAAQx7B,GAG/D,SAASy7B,EAAiB5P,EAASkO,EAAYE,GAClD,IAAKj8B,OAAO09B,cAAe,MAAM,IAAI/N,UAAU,wCAC/C,IAAoD1wB,EAAhD2e,EAAIqe,EAAUv6B,MAAMmsB,EAASkO,GAAc,IAAQtrB,EAAI,GAC3D,OAAOxR,EAAI,GAAI49B,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW59B,EAAEe,OAAO09B,eAAiB,WAAc,OAAO7+B,MAASI,EACpH,SAAS49B,EAAKn8B,GAASkd,EAAEld,KAAIzB,EAAEyB,GAAK,SAAUsB,GAAK,OAAO,IAAI8rB,SAAQ,SAAU3e,EAAGC,GAAKqB,EAAEnO,KAAK,CAAC5B,EAAGsB,EAAGmN,EAAGC,IAAM,GAAKuuB,EAAOj9B,EAAGsB,QAC9H,SAAS27B,EAAOj9B,EAAGsB,GAAK,KACVjC,EADqB6d,EAAEld,GAAGsB,IACnB9B,iBAAiBs9B,EAAU1P,QAAQC,QAAQhuB,EAAEG,MAAM8B,GAAGs6B,KAAKsB,EAAS5P,GAAU6P,EAAOptB,EAAE,GAAG,GAAI1Q,GADpE,MAAO0M,GAAKoxB,EAAOptB,EAAE,GAAG,GAAIhE,GAC3E,IAAc1M,EACd,SAAS69B,EAAQ19B,GAASy9B,EAAO,OAAQz9B,GACzC,SAAS8tB,EAAO9tB,GAASy9B,EAAO,QAASz9B,GACzC,SAAS29B,EAAOtY,EAAGvjB,GAASujB,EAAEvjB,GAAIyO,EAAEgM,QAAShM,EAAE5O,QAAQ87B,EAAOltB,EAAE,GAAG,GAAIA,EAAE,GAAG,KAGzE,SAASqtB,EAAiBp+B,GAC7B,IAAIT,EAAG8B,EACP,OAAO9B,EAAI,GAAI49B,EAAK,QAASA,EAAK,SAAS,SAAUpwB,GAAK,MAAMA,KAAOowB,EAAK,UAAW59B,EAAEe,OAAO88B,UAAY,WAAc,OAAOj+B,MAASI,EAC1I,SAAS49B,EAAKn8B,EAAG6kB,GAAKtmB,EAAEyB,GAAKhB,EAAEgB,GAAK,SAAUsB,GAAK,OAAQjB,GAAKA,GAAK,CAAEb,MAAOs9B,EAAQ99B,EAAEgB,GAAGsB,IAAKq6B,KAAY,WAAN37B,GAAmB6kB,EAAIA,EAAEvjB,GAAKA,GAAOujB,GAGxI,SAASwY,EAAcr+B,GAC1B,IAAKM,OAAO09B,cAAe,MAAM,IAAI/N,UAAU,wCAC/C,IAAiC1wB,EAA7BI,EAAIK,EAAEM,OAAO09B,eACjB,OAAOr+B,EAAIA,EAAED,KAAKM,IAAMA,EAAqCu9B,EAASv9B,GAA2BT,EAAI,GAAI49B,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW59B,EAAEe,OAAO09B,eAAiB,WAAc,OAAO7+B,MAASI,GAC9M,SAAS49B,EAAKn8B,GAAKzB,EAAEyB,GAAKhB,EAAEgB,IAAM,SAAUsB,GAAK,OAAO,IAAI8rB,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQzuB,EAAGyC,GAAK8rB,QAAQC,QAAQ/rB,GAAGs6B,MAAK,SAASt6B,GAAK+rB,EAAQ,CAAE7tB,MAAO8B,EAAGq6B,KAAM98B,MAASyuB,IADJ6P,CAAO9P,EAASC,GAA7BhsB,EAAItC,EAAEgB,GAAGsB,IAA8Bq6B,KAAMr6B,EAAE9B,YAI7I,SAAS89B,EAAqBC,EAAQC,GAEzC,OADIv+B,OAAOC,eAAkBD,OAAOC,eAAeq+B,EAAQ,MAAO,CAAE/9B,MAAOg+B,IAAiBD,EAAOC,IAAMA,EAClGD,EAGJ,SAASE,EAAaxzB,GACzB,GAAIA,GAAOA,EAAItK,WAAY,OAAOsK,EAClC,IAAIvI,EAAS,GACb,GAAW,MAAPuI,EAAa,IAAK,IAAI4E,KAAK5E,EAAShL,OAAOmB,eAAe1B,KAAKuL,EAAK4E,KAAInN,EAAOmN,GAAK5E,EAAI4E,IAE5F,OADAnN,EAAOg8B,QAAUzzB,EACVvI,EAGJ,SAASi8B,EAAgB1zB,GAC5B,OAAQA,GAAOA,EAAItK,WAAcsK,EAAM,CAAEyzB,QAASzzB,K,gBClMtD,OAAC,SAAW2zB,GACV,aAkDA,IAAIC,EACFC,EAAY,6CACZC,EAA6B,mBAAVz+B,QAAkD,iBAAnBA,OAAO88B,SAEzD4B,EAAW76B,KAAKiK,KAChB6wB,EAAY96B,KAAKC,MAEjB86B,EAAiB,qBACjBC,EAAgBD,EAAiB,yDAEjCE,EAAO,KACPC,EAAW,GACXC,EAAmB,iBAEnBC,EAAW,CAAC,EAAG,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,KAAM,MAC7EC,EAAY,IAKZC,EAAM,IAwoFR,SAASC,EAAS1+B,GAChB,IAAIzB,EAAQ,EAAJyB,EACR,OAAOA,EAAI,GAAKA,IAAMzB,EAAIA,EAAIA,EAAI,EAKpC,SAASogC,EAAclwB,GAMrB,IALA,IAAInO,EAAGyhB,EACLxjB,EAAI,EACJ8O,EAAIoB,EAAEtN,OACN9B,EAAIoP,EAAE,GAAK,GAENlQ,EAAI8O,GAAI,CAGb,IAFA/M,EAAImO,EAAElQ,KAAO,GACbwjB,EAAIsc,EAAW/9B,EAAEa,OACV4gB,IAAKzhB,EAAI,IAAMA,GACtBjB,GAAKiB,EAIP,IAAK+M,EAAIhO,EAAE8B,OAA8B,KAAtB9B,EAAEgN,aAAagB,KAElC,OAAOhO,EAAEsB,MAAM,EAAG0M,EAAI,GAAK,GAK7B,SAAS4mB,EAAQxc,EAAGC,GAClB,IAAIjJ,EAAGC,EACLkwB,EAAKnnB,EAAE7Y,EACPigC,EAAKnnB,EAAE9Y,EACPL,EAAIkZ,EAAEnX,EACN+M,EAAIqK,EAAEpX,EACNuO,EAAI4I,EAAE1L,EACNvN,EAAIkZ,EAAE3L,EAGR,IAAKxN,IAAM8O,EAAG,OAAO,KAMrB,GAJAoB,EAAImwB,IAAOA,EAAG,GACdlwB,EAAImwB,IAAOA,EAAG,GAGVpwB,GAAKC,EAAG,OAAOD,EAAIC,EAAI,GAAKrB,EAAI9O,EAGpC,GAAIA,GAAK8O,EAAG,OAAO9O,EAMnB,GAJAkQ,EAAIlQ,EAAI,EACRmQ,EAAIG,GAAKrQ,GAGJogC,IAAOC,EAAI,OAAOnwB,EAAI,GAAKkwB,EAAKnwB,EAAI,GAAK,EAG9C,IAAKC,EAAG,OAAOG,EAAIrQ,EAAIiQ,EAAI,GAAK,EAKhC,IAHApB,GAAKwB,EAAI+vB,EAAGz9B,SAAW3C,EAAIqgC,EAAG19B,QAAU0N,EAAIrQ,EAGvCD,EAAI,EAAGA,EAAI8O,EAAG9O,IAAK,GAAIqgC,EAAGrgC,IAAMsgC,EAAGtgC,GAAI,OAAOqgC,EAAGrgC,GAAKsgC,EAAGtgC,GAAKkQ,EAAI,GAAK,EAG5E,OAAOI,GAAKrQ,EAAI,EAAIqQ,EAAIrQ,EAAIiQ,EAAI,GAAK,EAOvC,SAASqwB,EAAS9+B,EAAGoM,EAAKK,EAAK3N,GAC7B,GAAIkB,EAAIoM,GAAOpM,EAAIyM,GAAOzM,IAAMi+B,EAAUj+B,GACxC,MAAMsF,MACJ44B,GAAkBp/B,GAAQ,aAA2B,iBAALkB,EAC7CA,EAAIoM,GAAOpM,EAAIyM,EAAM,kBAAoB,oBACzC,6BAA+BjH,OAAOxF,IAM/C,SAASud,EAAMvd,GACb,IAAI6O,EAAI7O,EAAEpB,EAAEuC,OAAS,EACrB,OAAOu9B,EAAS1+B,EAAE+L,EAAIsyB,IAAaxvB,GAAK7O,EAAEpB,EAAEiQ,GAAK,GAAK,EAIxD,SAASkwB,EAAc9yB,EAAKF,GAC1B,OAAQE,EAAI9K,OAAS,EAAI8K,EAAI+yB,OAAO,GAAK,IAAM/yB,EAAItL,MAAM,GAAKsL,IAC5DF,EAAI,EAAI,IAAM,MAAQA,EAI1B,SAASkzB,EAAahzB,EAAKF,EAAGgW,GAC5B,IAAI5V,EAAK+yB,EAGT,GAAInzB,EAAI,EAAG,CAGT,IAAKmzB,EAAKnd,EAAI,MAAOhW,EAAGmzB,GAAMnd,GAC9B9V,EAAMizB,EAAKjzB,OAOX,KAAMF,GAHNI,EAAMF,EAAI9K,QAGK,CACb,IAAK+9B,EAAKnd,EAAGhW,GAAKI,IAAOJ,EAAGmzB,GAAMnd,GAClC9V,GAAOizB,OACEnzB,EAAII,IACbF,EAAMA,EAAItL,MAAM,EAAGoL,GAAK,IAAME,EAAItL,MAAMoL,IAI5C,OAAOE,GAOT4xB,EA9vFA,SAAS9vB,EAAMoxB,GACb,IAAIp1B,EAAKq1B,EAAaC,EAglBhBC,EAwqBAC,EACFC,EACAC,EACAC,EACAC,EA3vCFrE,EAAIuC,EAAU19B,UAAY,CAAEkB,YAAaw8B,EAAW/2B,SAAU,KAAM84B,QAAS,MAC7EC,EAAM,IAAIhC,EAAU,GAUpBiC,EAAiB,GAajBC,EAAgB,EAMhBC,GAAc,EAIdC,EAAa,GAMbC,GAAW,IAKXC,EAAU,IAGVC,GAAS,EAkBTC,EAAc,EAIdC,EAAgB,EAGhBC,EAAS,CACPC,OAAQ,GACRtxB,UAAW,EACXuxB,mBAAoB,EACpBC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAmB,EACnBC,uBAAwB,IACxBC,OAAQ,IAMVC,EAAW,uCAgBb,SAASlD,EAAUv8B,EAAGoN,GACpB,IAAIsyB,EAAUpiC,EAAGqiC,EAAal1B,EAAGxN,EAAG2iC,EAAO/0B,EAAKF,EAC9CwL,EAAItZ,KAGN,KAAMsZ,aAAaomB,GAAY,OAAO,IAAIA,EAAUv8B,EAAGoN,GAEvD,GAAS,MAALA,EAAW,CAEb,GAAIpN,IAAwB,IAAnBA,EAAE6H,aAYT,OAXAsO,EAAEnX,EAAIgB,EAAEhB,QAEHgB,EAAE1C,GAAK0C,EAAEyK,EAAIo0B,EAChB1oB,EAAE7Y,EAAI6Y,EAAE1L,EAAI,KACHzK,EAAEyK,EAAIm0B,EACfzoB,EAAE7Y,EAAI,CAAC6Y,EAAE1L,EAAI,IAEb0L,EAAE1L,EAAIzK,EAAEyK,EACR0L,EAAE7Y,EAAI0C,EAAE1C,EAAE+B,UAMd,IAAKugC,EAAoB,iBAAL5/B,IAAsB,EAAJA,GAAS,EAAG,CAMhD,GAHAmW,EAAEnX,EAAI,EAAIgB,EAAI,GAAKA,GAAKA,GAAI,GAAK,EAG7BA,MAAQA,EAAG,CACb,IAAKyK,EAAI,EAAGxN,EAAI+C,EAAG/C,GAAK,GAAIA,GAAK,GAAIwN,KASrC,YAPIA,EAAIo0B,EACN1oB,EAAE7Y,EAAI6Y,EAAE1L,EAAI,MAEZ0L,EAAE1L,EAAIA,EACN0L,EAAE7Y,EAAI,CAAC0C,KAMX2K,EAAMzG,OAAOlE,OACR,CAEL,IAAKw8B,EAAUtT,KAAKve,EAAMzG,OAAOlE,IAAK,OAAO+9B,EAAa5nB,EAAGxL,EAAKi1B,GAElEzpB,EAAEnX,EAAyB,IAArB2L,EAAII,WAAW,IAAYJ,EAAMA,EAAItL,MAAM,IAAK,GAAK,GAIxDoL,EAAIE,EAAI6f,QAAQ,OAAS,IAAG7f,EAAMA,EAAIc,QAAQ,IAAK,MAGnDxO,EAAI0N,EAAIk1B,OAAO,OAAS,GAGvBp1B,EAAI,IAAGA,EAAIxN,GACfwN,IAAME,EAAItL,MAAMpC,EAAI,GACpB0N,EAAMA,EAAInK,UAAU,EAAGvD,IACdwN,EAAI,IAGbA,EAAIE,EAAI9K,YAGL,CAOL,GAJA29B,EAASpwB,EAAG,EAAGqyB,EAAS5/B,OAAQ,QAIvB,IAALuN,EAEF,OAAOgL,EADPjC,EAAI,IAAIomB,EAAUv8B,GACFw+B,EAAiBroB,EAAE1L,EAAI,EAAGg0B,GAK5C,GAFA9zB,EAAMzG,OAAOlE,GAET4/B,EAAoB,iBAAL5/B,EAAe,CAGhC,GAAQ,EAAJA,GAAS,EAAG,OAAO+9B,EAAa5nB,EAAGxL,EAAKi1B,EAAOxyB,GAKnD,GAHA+I,EAAEnX,EAAI,EAAIgB,EAAI,GAAK2K,EAAMA,EAAItL,MAAM,IAAK,GAAK,EAGzCk9B,EAAU13B,OAAS8F,EAAIc,QAAQ,YAAa,IAAI5L,OAAS,GAC3D,MAAMmE,MACJ64B,EAAgB78B,QAGpBmW,EAAEnX,EAA0B,KAAtB2L,EAAII,WAAW,IAAaJ,EAAMA,EAAItL,MAAM,IAAK,GAAK,EAQ9D,IALAqgC,EAAWD,EAASpgC,MAAM,EAAG+N,GAC7B3C,EAAIxN,EAAI,EAIH4N,EAAMF,EAAI9K,OAAQ5C,EAAI4N,EAAK5N,IAC9B,GAAIyiC,EAASlV,QAAQltB,EAAIqN,EAAI+yB,OAAOzgC,IAAM,EAAG,CAC3C,GAAS,KAALK,GAGF,GAAIL,EAAIwN,EAAG,CACTA,EAAII,EACJ,eAEG,IAAK80B,IAGNh1B,GAAOA,EAAIm1B,gBAAkBn1B,EAAMA,EAAI5I,gBACvC4I,GAAOA,EAAI5I,gBAAkB4I,EAAMA,EAAIm1B,gBAAgB,CACzDH,GAAc,EACd1iC,GAAK,EACLwN,EAAI,EACJ,SAIJ,OAAOszB,EAAa5nB,EAAGjS,OAAOlE,GAAI4/B,EAAOxyB,GAK7CwyB,GAAQ,GAIHn1B,GAHLE,EAAMmzB,EAAYnzB,EAAKyC,EAAG,GAAI+I,EAAEnX,IAGnBwrB,QAAQ,OAAS,EAAG7f,EAAMA,EAAIc,QAAQ,IAAK,IACnDhB,EAAIE,EAAI9K,OAIf,IAAK5C,EAAI,EAAyB,KAAtB0N,EAAII,WAAW9N,GAAWA,KAGtC,IAAK4N,EAAMF,EAAI9K,OAAkC,KAA1B8K,EAAII,aAAaF,KAExC,GAAIF,EAAMA,EAAItL,MAAMpC,IAAK4N,GAAM,CAI7B,GAHAA,GAAO5N,EAGH2iC,GAASrD,EAAU13B,OACrBgG,EAAM,KAAO7K,EAAIg9B,GAAoBh9B,IAAM28B,EAAU38B,IACnD,MAAMgE,MACJ64B,EAAiB1mB,EAAEnX,EAAIgB,GAI7B,IAAKyK,EAAIA,EAAIxN,EAAI,GAAK4hC,EAGpB1oB,EAAE7Y,EAAI6Y,EAAE1L,EAAI,UAGP,GAAIA,EAAIm0B,EAGbzoB,EAAE7Y,EAAI,CAAC6Y,EAAE1L,EAAI,OACR,CAWL,GAVA0L,EAAE1L,EAAIA,EACN0L,EAAE7Y,EAAI,GAMNL,GAAKwN,EAAI,GAAKsyB,EACVtyB,EAAI,IAAGxN,GAAK8/B,GAEZ9/B,EAAI4N,EAAK,CAGX,IAFI5N,GAAGkZ,EAAE7Y,EAAEgD,MAAMqK,EAAItL,MAAM,EAAGpC,IAEzB4N,GAAOkyB,EAAU9/B,EAAI4N,GACxBsL,EAAE7Y,EAAEgD,MAAMqK,EAAItL,MAAMpC,EAAGA,GAAK8/B,IAG9B9/B,EAAI8/B,GAAYpyB,EAAMA,EAAItL,MAAMpC,IAAI4C,YAEpC5C,GAAK4N,EAGP,KAAO5N,IAAK0N,GAAO,KACnBwL,EAAE7Y,EAAEgD,MAAMqK,SAKZwL,EAAE7Y,EAAI,CAAC6Y,EAAE1L,EAAI,GA41BjB,SAASs1B,EAAOrhC,EAAGzB,EAAG+iC,EAAIC,GACxB,IAAIpc,EAAIpZ,EAAGy1B,EAAIr1B,EAAKF,EAKpB,GAHU,MAANq1B,EAAYA,EAAKvB,EAChBjB,EAASwC,EAAI,EAAG,IAEhBthC,EAAEpB,EAAG,OAAOoB,EAAE8G,WAKnB,GAHAqe,EAAKnlB,EAAEpB,EAAE,GACT4iC,EAAKxhC,EAAE+L,EAEE,MAALxN,EACF0N,EAAM0yB,EAAc3+B,EAAEpB,GACtBqN,EAAY,GAANs1B,GAAiB,GAANA,IAAYC,GAAMxB,GAAcwB,GAAMvB,GACpDlB,EAAc9yB,EAAKu1B,GACnBvC,EAAahzB,EAAKu1B,EAAI,UAezB,GAVAz1B,GAHA/L,EAAI0Z,EAAM,IAAImkB,EAAU79B,GAAIzB,EAAG+iC,IAGzBv1B,EAGNI,GADAF,EAAM0yB,EAAc3+B,EAAEpB,IACZuC,OAOA,GAANogC,GAAiB,GAANA,IAAYhjC,GAAKwN,GAAKA,GAAKi0B,GAAa,CAGrD,KAAO7zB,EAAM5N,EAAG0N,GAAO,IAAKE,KAC5BF,EAAM8yB,EAAc9yB,EAAKF,QAQzB,GAJAxN,GAAKijC,EACLv1B,EAAMgzB,EAAahzB,EAAKF,EAAG,KAGvBA,EAAI,EAAII,GACV,KAAM5N,EAAI,EAAG,IAAK0N,GAAO,IAAK1N,IAAK0N,GAAO,WAG1C,IADA1N,GAAKwN,EAAII,GACD,EAEN,IADIJ,EAAI,GAAKI,IAAKF,GAAO,KAClB1N,IAAK0N,GAAO,KAM3B,OAAOjM,EAAEM,EAAI,GAAK6kB,EAAK,IAAMlZ,EAAMA,EAKrC,SAASw1B,EAAS7gC,EAAM+iB,GAKtB,IAJA,IAAI3jB,EACFzB,EAAI,EACJI,EAAI,IAAIk/B,EAAUj9B,EAAK,IAElBrC,EAAIqC,EAAKO,OAAQ5C,IAAK,CAI3B,KAHAyB,EAAI,IAAI69B,EAAUj9B,EAAKrC,KAGhB+B,EAAG,CACR3B,EAAIqB,EACJ,MACS2jB,EAAOjlB,KAAKC,EAAGqB,KACxBrB,EAAIqB,GAIR,OAAOrB,EAQT,SAAS+iC,EAAU1hC,EAAGpB,EAAGmN,GAKvB,IAJA,IAAIxN,EAAI,EACN8O,EAAIzO,EAAEuC,QAGAvC,IAAIyO,GAAIzO,EAAEytB,OAGlB,IAAKhf,EAAIzO,EAAE,GAAIyO,GAAK,GAAIA,GAAK,GAAI9O,KAkBjC,OAfKwN,EAAIxN,EAAIwN,EAAIsyB,EAAW,GAAK8B,EAG/BngC,EAAEpB,EAAIoB,EAAE+L,EAAI,KAGHA,EAAIm0B,EAGblgC,EAAEpB,EAAI,CAACoB,EAAE+L,EAAI,IAEb/L,EAAE+L,EAAIA,EACN/L,EAAEpB,EAAIA,GAGDoB,EA0DT,SAAS0Z,EAAMjC,EAAGkqB,EAAIL,EAAIjiC,GACxB,IAAIR,EAAGN,EAAG8O,EAAGwB,EAAG7O,EAAG4hC,EAAIC,EACrBjD,EAAKnnB,EAAE7Y,EACPkjC,EAASvD,EAGX,GAAIK,EAAI,CAQNpwB,EAAK,CAGH,IAAK3P,EAAI,EAAGgQ,EAAI+vB,EAAG,GAAI/vB,GAAK,GAAIA,GAAK,GAAIhQ,KAIzC,IAHAN,EAAIojC,EAAK9iC,GAGD,EACNN,GAAK8/B,EACLhxB,EAAIs0B,EAIJE,GAHA7hC,EAAI4+B,EAAGgD,EAAK,IAGHE,EAAOjjC,EAAIwO,EAAI,GAAK,GAAK,OAIlC,IAFAu0B,EAAK5D,GAAUz/B,EAAI,GAAK8/B,KAEdO,EAAGz9B,OAAQ,CAEnB,IAAI9B,EASF,MAAMmP,EANN,KAAOowB,EAAGz9B,QAAUygC,EAAIhD,EAAGh9B,KAAK,IAChC5B,EAAI6hC,EAAK,EACThjC,EAAI,EAEJwO,GADA9O,GAAK8/B,GACGA,EAAW,MAIhB,CAIL,IAHAr+B,EAAI6O,EAAI+vB,EAAGgD,GAGN/iC,EAAI,EAAGgQ,GAAK,GAAIA,GAAK,GAAIhQ,KAU9BgjC,GAHAx0B,GAJA9O,GAAK8/B,GAIGA,EAAWx/B,GAGV,EAAI,EAAImB,EAAI8hC,EAAOjjC,EAAIwO,EAAI,GAAK,GAAK,EAmBlD,GAfAhO,EAAIA,GAAKsiC,EAAK,GAKC,MAAd/C,EAAGgD,EAAK,KAAev0B,EAAI,EAAIrN,EAAIA,EAAI8hC,EAAOjjC,EAAIwO,EAAI,IAEvDhO,EAAIiiC,EAAK,GACLO,GAAMxiC,KAAa,GAANiiC,GAAWA,IAAO7pB,EAAEnX,EAAI,EAAI,EAAI,IAC9CuhC,EAAK,GAAW,GAANA,IAAkB,GAANP,GAAWjiC,GAAW,GAANiiC,IAGrC/iC,EAAI,EAAI8O,EAAI,EAAIrN,EAAI8hC,EAAOjjC,EAAIwO,GAAK,EAAIuxB,EAAGgD,EAAK,IAAM,GAAM,GAC7DN,IAAO7pB,EAAEnX,EAAI,EAAI,EAAI,IAEpBqhC,EAAK,IAAM/C,EAAG,GAiBhB,OAhBAA,EAAGz9B,OAAS,EAER9B,GAGFsiC,GAAMlqB,EAAE1L,EAAI,EAGZ6yB,EAAG,GAAKkD,GAAQzD,EAAWsD,EAAKtD,GAAYA,GAC5C5mB,EAAE1L,GAAK41B,GAAM,GAIb/C,EAAG,GAAKnnB,EAAE1L,EAAI,EAGT0L,EAkBT,GAdS,GAALlZ,GACFqgC,EAAGz9B,OAASygC,EACZ/yB,EAAI,EACJ+yB,MAEAhD,EAAGz9B,OAASygC,EAAK,EACjB/yB,EAAIizB,EAAOzD,EAAW9/B,GAItBqgC,EAAGgD,GAAMv0B,EAAI,EAAI4wB,EAAUj+B,EAAI8hC,EAAOjjC,EAAIwO,GAAKy0B,EAAOz0B,IAAMwB,EAAI,GAI9DxP,EAEF,OAAU,CAGR,GAAU,GAANuiC,EAAS,CAGX,IAAKrjC,EAAI,EAAG8O,EAAIuxB,EAAG,GAAIvxB,GAAK,GAAIA,GAAK,GAAI9O,KAEzC,IADA8O,EAAIuxB,EAAG,IAAM/vB,EACRA,EAAI,EAAGxB,GAAK,GAAIA,GAAK,GAAIwB,KAG1BtQ,GAAKsQ,IACP4I,EAAE1L,IACE6yB,EAAG,IAAMR,IAAMQ,EAAG,GAAK,IAG7B,MAGA,GADAA,EAAGgD,IAAO/yB,EACN+vB,EAAGgD,IAAOxD,EAAM,MACpBQ,EAAGgD,KAAQ,EACX/yB,EAAI,EAMV,IAAKtQ,EAAIqgC,EAAGz9B,OAAoB,IAAZy9B,IAAKrgC,GAAUqgC,EAAGvS,QAIpC5U,EAAE1L,EAAIo0B,EACR1oB,EAAE7Y,EAAI6Y,EAAE1L,EAAI,KAGH0L,EAAE1L,EAAIm0B,IACfzoB,EAAE7Y,EAAI,CAAC6Y,EAAE1L,EAAI,IAIjB,OAAO0L,EAIT,SAASmoB,EAAQ5/B,GACf,IAAIiM,EACFF,EAAI/L,EAAE+L,EAER,OAAU,OAANA,EAAmB/L,EAAE8G,YAEzBmF,EAAM0yB,EAAc3+B,EAAEpB,GAEtBqN,EAAMF,GAAKi0B,GAAcj0B,GAAKk0B,EAC1BlB,EAAc9yB,EAAKF,GACnBkzB,EAAahzB,EAAKF,EAAG,KAElB/L,EAAEM,EAAI,EAAI,IAAM2L,EAAMA,GAiqC/B,OAv0EA4xB,EAAU9vB,MAAQA,EAElB8vB,EAAUkE,SAAW,EACrBlE,EAAUmE,WAAa,EACvBnE,EAAUoE,WAAa,EACvBpE,EAAUqE,YAAc,EACxBrE,EAAUsE,cAAgB,EAC1BtE,EAAUuE,gBAAkB,EAC5BvE,EAAUwE,gBAAkB,EAC5BxE,EAAUyE,gBAAkB,EAC5BzE,EAAU0E,iBAAmB,EAC7B1E,EAAU2E,OAAS,EAqCnB3E,EAAU4E,OAAS5E,EAAUj7B,IAAM,SAAU+sB,GAC3C,IAAItvB,EAAGiB,EAEP,GAAW,MAAPquB,EAAa,CAEf,GAAkB,iBAAPA,EA2HT,MAAMrqB,MACJ44B,EAAiB,oBAAsBvO,GAtFzC,GAlCIA,EAAIvvB,eAAeC,EAAI,oBAEzBy+B,EADAx9B,EAAIquB,EAAItvB,GACI,EAAGo+B,EAAKp+B,GACpBy/B,EAAiBx+B,GAKfquB,EAAIvvB,eAAeC,EAAI,mBAEzBy+B,EADAx9B,EAAIquB,EAAItvB,GACI,EAAG,EAAGA,GAClB0/B,EAAgBz+B,GAOdquB,EAAIvvB,eAAeC,EAAI,qBACzBiB,EAAIquB,EAAItvB,KACCiB,EAAE+qB,KACTyS,EAASx9B,EAAE,IAAKm9B,EAAK,EAAGp+B,GACxBy+B,EAASx9B,EAAE,GAAI,EAAGm9B,EAAKp+B,GACvB2/B,EAAa1+B,EAAE,GACf2+B,EAAa3+B,EAAE,KAEfw9B,EAASx9B,GAAIm9B,EAAKA,EAAKp+B,GACvB2/B,IAAeC,EAAa3+B,EAAI,GAAKA,EAAIA,KAOzCquB,EAAIvvB,eAAeC,EAAI,SAEzB,IADAiB,EAAIquB,EAAItvB,KACCiB,EAAE+qB,IACTyS,EAASx9B,EAAE,IAAKm9B,GAAM,EAAGp+B,GACzBy+B,EAASx9B,EAAE,GAAI,EAAGm9B,EAAKp+B,GACvB6/B,EAAU5+B,EAAE,GACZ6+B,EAAU7+B,EAAE,OACP,CAEL,GADAw9B,EAASx9B,GAAIm9B,EAAKA,EAAKp+B,IACnBiB,EAGF,MAAMgE,MACJ44B,EAAiB79B,EAAI,oBAAsBiB,GAH7C4+B,IAAYC,EAAU7+B,EAAI,GAAKA,EAAIA,GAWzC,GAAIquB,EAAIvvB,eAAeC,EAAI,UAAW,CAEpC,IADAiB,EAAIquB,EAAItvB,QACIiB,EAcV,MAAMgE,MACJ44B,EAAiB79B,EAAI,uBAAyBiB,GAdhD,GAAIA,EAAG,CACL,GAAqB,oBAAVohC,SAAyBA,SAClCA,OAAOC,kBAAmBD,OAAOE,YAIjC,MADAxC,GAAU9+B,EACJgE,MACJ44B,EAAiB,sBAJnBkC,EAAS9+B,OAOX8+B,EAAS9+B,EA0Bf,GAhBIquB,EAAIvvB,eAAeC,EAAI,iBAEzBy+B,EADAx9B,EAAIquB,EAAItvB,GACI,EAAG,EAAGA,GAClBggC,EAAc/+B,GAKZquB,EAAIvvB,eAAeC,EAAI,mBAEzBy+B,EADAx9B,EAAIquB,EAAItvB,GACI,EAAGo+B,EAAKp+B,GACpBigC,EAAgBh/B,GAKdquB,EAAIvvB,eAAeC,EAAI,UAAW,CAEpC,GAAgB,iBADhBiB,EAAIquB,EAAItvB,IAEH,MAAMiF,MACT44B,EAAiB79B,EAAI,mBAAqBiB,GAFlBi/B,EAASj/B,EAOrC,GAAIquB,EAAIvvB,eAAeC,EAAI,YAAa,CAKtC,GAAgB,iBAJhBiB,EAAIquB,EAAItvB,KAIqB,sBAAsBmqB,KAAKlpB,GAGtD,MAAMgE,MACJ44B,EAAiB79B,EAAI,aAAeiB,GAHtCy/B,EAAWz/B,GAenB,MAAO,CACLw+B,eAAgBA,EAChBC,cAAeA,EACf8C,eAAgB,CAAC7C,EAAYC,GAC7B6C,MAAO,CAAC5C,EAASC,GACjBC,OAAQA,EACRC,YAAaA,EACbC,cAAeA,EACfC,OAAQA,EACRQ,SAAUA,IAcdlD,EAAUkF,YAAc,SAAUzhC,GAChC,IAAKA,IAAwB,IAAnBA,EAAE6H,aAAuB,OAAO,EAC1C,IAAK00B,EAAU13B,MAAO,OAAO,EAE7B,IAAI5H,EAAGyB,EACLpB,EAAI0C,EAAE1C,EACNmN,EAAIzK,EAAEyK,EACNzL,EAAIgB,EAAEhB,EAERkO,EAAK,GAA2B,kBAAvB,GAAG1H,SAASpI,KAAKE,IAExB,IAAW,IAAN0B,IAAkB,IAAPA,IAAayL,IAAM0yB,GAAO1yB,GAAK0yB,GAAO1yB,IAAMkyB,EAAUlyB,GAAI,CAGxE,GAAa,IAATnN,EAAE,GAAU,CACd,GAAU,IAANmN,GAAwB,IAAbnN,EAAEuC,OAAc,OAAO,EACtC,MAAMqN,EASR,IALAjQ,GAAKwN,EAAI,GAAKsyB,GACN,IAAG9/B,GAAK8/B,GAIZ74B,OAAO5G,EAAE,IAAIuC,QAAU5C,EAAG,CAE5B,IAAKA,EAAI,EAAGA,EAAIK,EAAEuC,OAAQ5C,IAExB,IADAyB,EAAIpB,EAAEL,IACE,GAAKyB,GAAKo+B,GAAQp+B,IAAMi+B,EAAUj+B,GAAI,MAAMwO,EAItD,GAAU,IAANxO,EAAS,OAAO,SAKnB,GAAU,OAANpB,GAAoB,OAANmN,IAAqB,OAANzL,GAAoB,IAANA,IAAkB,IAAPA,GAC/D,OAAO,EAGT,MAAMgF,MACH44B,EAAiB,sBAAwB58B,IAS9Cu8B,EAAUmF,QAAUnF,EAAUpxB,IAAM,WAClC,OAAOg1B,EAAS3gC,UAAWw6B,EAAEjxB,KAS/BwzB,EAAUoF,QAAUpF,EAAUzxB,IAAM,WAClC,OAAOq1B,EAAS3gC,UAAWw6B,EAAE/wB,KAc/BszB,EAAU1T,QAOJmV,EANU,iBAMQn8B,KAAKgnB,SAAsB,QAC9C,WAAc,OAAO8T,EAPV,iBAOoB96B,KAAKgnB,WACpC,WAAc,OAA2C,SAAlB,WAAhBhnB,KAAKgnB,SAAwB,IACnC,QAAhBhnB,KAAKgnB,SAAsB,IAExB,SAAU+Y,GACf,IAAIz0B,EAAGC,EAAG3C,EAAG8C,EAAGvN,EACd/C,EAAI,EACJK,EAAI,GACJukC,EAAO,IAAItF,EAAUgC,GAOvB,GALU,MAANqD,EAAYA,EAAKpD,EAChBhB,EAASoE,EAAI,EAAGzE,GAErB5vB,EAAImvB,EAASkF,EAAK7E,GAEd+B,EAGF,GAAIsC,OAAOC,gBAAiB,CAI1B,IAFAl0B,EAAIi0B,OAAOC,gBAAgB,IAAI1d,YAAYpW,GAAK,IAEzCtQ,EAAIsQ,IAQTvN,EAAW,OAAPmN,EAAElQ,IAAgBkQ,EAAElQ,EAAI,KAAO,MAM1B,MACPmQ,EAAIg0B,OAAOC,gBAAgB,IAAI1d,YAAY,IAC3CxW,EAAElQ,GAAKmQ,EAAE,GACTD,EAAElQ,EAAI,GAAKmQ,EAAE,KAKb9P,EAAEgD,KAAKN,EAAI,MACX/C,GAAK,GAGTA,EAAIsQ,EAAI,MAGH,KAAI6zB,OAAOE,YA2BhB,MADAxC,GAAS,EACH96B,MACJ44B,EAAiB,sBAvBnB,IAFAzvB,EAAIi0B,OAAOE,YAAY/zB,GAAK,GAErBtQ,EAAIsQ,IAMTvN,EAAmB,iBAAN,GAAPmN,EAAElQ,IAA0C,cAAXkQ,EAAElQ,EAAI,GAC9B,WAAXkQ,EAAElQ,EAAI,GAAgC,SAAXkQ,EAAElQ,EAAI,IACjCkQ,EAAElQ,EAAI,IAAM,KAAOkQ,EAAElQ,EAAI,IAAM,GAAKkQ,EAAElQ,EAAI,KAErC,KACPmkC,OAAOE,YAAY,GAAG/0B,KAAKY,EAAGlQ,IAI9BK,EAAEgD,KAAKN,EAAI,MACX/C,GAAK,GAGTA,EAAIsQ,EAAI,EASZ,IAAKuxB,EAEH,KAAO7hC,EAAIsQ,IACTvN,EAAIg+B,KACI,OAAM1gC,EAAEL,KAAO+C,EAAI,MAc/B,IAVAuN,EAAIjQ,IAAIL,GACR2kC,GAAM7E,EAGFxvB,GAAKq0B,IACP5hC,EAAIi9B,EAASF,EAAW6E,GACxBtkC,EAAEL,GAAK0/B,EAAUpvB,EAAIvN,GAAKA,GAIZ,IAAT1C,EAAEL,GAAUK,EAAEytB,MAAO9tB,KAG5B,GAAIA,EAAI,EACNK,EAAI,CAACmN,EAAI,OACJ,CAGL,IAAKA,GAAK,EAAa,IAATnN,EAAE,GAAUA,EAAEwkC,OAAO,EAAG,GAAIr3B,GAAKsyB,GAG/C,IAAK9/B,EAAI,EAAG+C,EAAI1C,EAAE,GAAI0C,GAAK,GAAIA,GAAK,GAAI/C,KAGpCA,EAAI8/B,IAAUtyB,GAAKsyB,EAAW9/B,GAKpC,OAFA4kC,EAAKp3B,EAAIA,EACTo3B,EAAKvkC,EAAIA,EACFukC,IAUXtF,EAAUwF,IAAM,WAId,IAHA,IAAI9kC,EAAI,EACNqC,EAAOE,UACPuiC,EAAM,IAAIxF,EAAUj9B,EAAK,IACpBrC,EAAIqC,EAAKO,QAASkiC,EAAMA,EAAIC,KAAK1iC,EAAKrC,MAC7C,OAAO8kC,GAQTjE,EAAc,WAQZ,SAASmE,EAAUt3B,EAAKu3B,EAAQC,EAASzC,GAOvC,IANA,IAAI3zB,EAEFq2B,EADAzS,EAAM,CAAC,GAEP1yB,EAAI,EACJ4N,EAAMF,EAAI9K,OAEL5C,EAAI4N,GAAM,CACf,IAAKu3B,EAAOzS,EAAI9vB,OAAQuiC,IAAQzS,EAAIyS,IAASF,GAI7C,IAFAvS,EAAI,IAAM+P,EAASlV,QAAQ7f,EAAI+yB,OAAOzgC,MAEjC8O,EAAI,EAAGA,EAAI4jB,EAAI9vB,OAAQkM,IAEtB4jB,EAAI5jB,GAAKo2B,EAAU,IACH,MAAdxS,EAAI5jB,EAAI,KAAY4jB,EAAI5jB,EAAI,GAAK,GACrC4jB,EAAI5jB,EAAI,IAAM4jB,EAAI5jB,GAAKo2B,EAAU,EACjCxS,EAAI5jB,IAAMo2B,GAKhB,OAAOxS,EAAI0S,UAMb,OAAO,SAAU13B,EAAKu3B,EAAQC,EAASG,EAAMC,GAC3C,IAAI7C,EAAUniC,EAAGkN,EAAG8C,EAAGxP,EAAGoY,EAAGmnB,EAAIlnB,EAC/BnZ,EAAI0N,EAAI6f,QAAQ,KAChBoX,EAAKpD,EACLwB,EAAKvB,EA+BP,IA5BIxhC,GAAK,IACPsQ,EAAIyxB,EAGJA,EAAgB,EAChBr0B,EAAMA,EAAIc,QAAQ,IAAK,IAEvB0K,GADAC,EAAI,IAAImmB,EAAU2F,IACZt5B,IAAI+B,EAAI9K,OAAS5C,GACvB+hC,EAAgBzxB,EAKhB6I,EAAE9Y,EAAI2kC,EAAUtE,EAAaN,EAAclnB,EAAE7Y,GAAI6Y,EAAE1L,EAAG,KACrD,GAAI03B,EAxDK,cAyDV/rB,EAAE3L,EAAI2L,EAAE9Y,EAAEuC,QAUZ4K,EAAI8C,GALJ+vB,EAAK2E,EAAUt3B,EAAKu3B,EAAQC,EAASI,GACjC7C,EAAWD,EA/DH,eAgERC,EAhEQ,aAgEYD,KAGb5/B,OAGO,GAAXy9B,IAAK/vB,GAAS+vB,EAAGvS,OAGxB,IAAKuS,EAAG,GAAI,OAAOoC,EAAShC,OAAO,GAqCnC,GAlCIzgC,EAAI,IACJwN,GAEF0L,EAAE7Y,EAAIggC,EACNnnB,EAAE1L,EAAIA,EAGN0L,EAAEnX,EAAIsjC,EAENhF,GADAnnB,EAAI1N,EAAI0N,EAAGC,EAAGwrB,EAAI5B,EAAImC,IACf7kC,EACPS,EAAIoY,EAAEpY,EACN0M,EAAI0L,EAAE1L,GASRxN,EAAIqgC,EAHJ//B,EAAIkN,EAAIm3B,EAAK,GAObr0B,EAAI40B,EAAU,EACdpkC,EAAIA,GAAKR,EAAI,GAAkB,MAAb+/B,EAAG//B,EAAI,GAEzBQ,EAAIiiC,EAAK,GAAU,MAAL/iC,GAAac,KAAa,GAANiiC,GAAWA,IAAO7pB,EAAEnX,EAAI,EAAI,EAAI,IAC1D/B,EAAIsQ,GAAKtQ,GAAKsQ,IAAW,GAANyyB,GAAWjiC,GAAW,GAANiiC,GAAuB,EAAZ1C,EAAG//B,EAAI,IACtDyiC,IAAO7pB,EAAEnX,EAAI,EAAI,EAAI,IAKxBzB,EAAI,IAAM+/B,EAAG,GAGf3yB,EAAM5M,EAAI4/B,EAAa+B,EAAShC,OAAO,IAAKkE,EAAIlC,EAAShC,OAAO,IAAMgC,EAAShC,OAAO,OACjF,CAML,GAHAJ,EAAGz9B,OAAStC,EAGRQ,EAGF,MAAOokC,IAAW7E,IAAK//B,GAAK4kC,GAC1B7E,EAAG//B,GAAK,EAEHA,MACDkN,EACF6yB,EAAK,CAAC,GAAGx8B,OAAOw8B,IAMtB,IAAK/vB,EAAI+vB,EAAGz9B,QAASy9B,IAAK/vB,KAG1B,IAAKtQ,EAAI,EAAG0N,EAAM,GAAI1N,GAAKsQ,EAAG5C,GAAO+0B,EAAShC,OAAOJ,EAAGrgC,OAGxD0N,EAAMgzB,EAAahzB,EAAKF,EAAGi1B,EAAShC,OAAO,IAI7C,OAAO/yB,GAjJG,GAuJdlC,EAAM,WAGJ,SAAS+5B,EAASrsB,EAAG5I,EAAGvD,GACtB,IAAI3M,EAAGolC,EAAMC,EAAKC,EAChBr1B,EAAQ,EACRrQ,EAAIkZ,EAAEtW,OACN+iC,EAAMr1B,EAAI2vB,EACV2F,EAAMt1B,EAAI2vB,EAAY,EAExB,IAAK/mB,EAAIA,EAAE9W,QAASpC,KAKlBqQ,IADAm1B,EAAOG,GAHPF,EAAMvsB,EAAElZ,GAAKigC,IAEb7/B,EAAIwlC,EAAMH,GADVC,EAAMxsB,EAAElZ,GAAKigC,EAAY,GACH0F,GACG1F,EAAaA,EAAa5vB,GACnCtD,EAAO,IAAM3M,EAAI6/B,EAAY,GAAK2F,EAAMF,EACxDxsB,EAAElZ,GAAKwlC,EAAOz4B,EAKhB,OAFIsD,IAAO6I,EAAI,CAAC7I,GAAOxM,OAAOqV,IAEvBA,EAGT,SAASwc,EAAQxlB,EAAGC,EAAG01B,EAAIC,GACzB,IAAI9lC,EAAGqO,EAEP,GAAIw3B,GAAMC,EACRz3B,EAAMw3B,EAAKC,EAAK,GAAK,OAGrB,IAAK9lC,EAAIqO,EAAM,EAAGrO,EAAI6lC,EAAI7lC,IAExB,GAAIkQ,EAAElQ,IAAMmQ,EAAEnQ,GAAI,CAChBqO,EAAM6B,EAAElQ,GAAKmQ,EAAEnQ,GAAK,GAAK,EACzB,MAKN,OAAOqO,EAGT,SAAS03B,EAAS71B,EAAGC,EAAG01B,EAAI94B,GAI1B,IAHA,IAAI/M,EAAI,EAGD6lC,KACL31B,EAAE21B,IAAO7lC,EACTA,EAAIkQ,EAAE21B,GAAM11B,EAAE01B,GAAM,EAAI,EACxB31B,EAAE21B,GAAM7lC,EAAI+M,EAAOmD,EAAE21B,GAAM11B,EAAE01B,GAI/B,MAAQ31B,EAAE,IAAMA,EAAEtN,OAAS,EAAGsN,EAAE20B,OAAO,EAAG,KAI5C,OAAO,SAAU3rB,EAAGC,EAAGwrB,EAAI5B,EAAIh2B,GAC7B,IAAIsB,EAAKb,EAAGxN,EAAGgmC,EAAMvkC,EAAGwkC,EAAMC,EAAO10B,EAAG20B,EAAIC,EAAKC,EAAMC,EAAMC,EAAIC,EAAIC,EACnEC,EAAIC,EACJ5kC,EAAImX,EAAEnX,GAAKoX,EAAEpX,EAAI,GAAK,EACtBs+B,EAAKnnB,EAAE7Y,EACPigC,EAAKnnB,EAAE9Y,EAGT,KAAKggC,GAAOA,EAAG,IAAOC,GAAOA,EAAG,IAE9B,OAAO,IAAIhB,EAGTpmB,EAAEnX,GAAMoX,EAAEpX,IAAMs+B,GAAKC,GAAMD,EAAG,IAAMC,EAAG,GAAMA,GAG7CD,GAAe,GAATA,EAAG,KAAYC,EAAS,EAAJv+B,EAAQA,EAAI,EAHaq5B,KAoBvD,IAZA+K,GADA30B,EAAI,IAAI8tB,EAAUv9B,IACX1B,EAAI,GAEX0B,EAAI4iC,GADJn3B,EAAI0L,EAAE1L,EAAI2L,EAAE3L,GACC,EAERT,IACHA,EAAO8yB,EACPryB,EAAI2yB,EAASjnB,EAAE1L,EAAIsyB,GAAYK,EAAShnB,EAAE3L,EAAIsyB,GAC9C/9B,EAAIA,EAAI+9B,EAAW,GAKhB9/B,EAAI,EAAGsgC,EAAGtgC,KAAOqgC,EAAGrgC,IAAM,GAAIA,KAInC,GAFIsgC,EAAGtgC,IAAMqgC,EAAGrgC,IAAM,IAAIwN,IAEtBzL,EAAI,EACNokC,EAAG9iC,KAAK,GACR2iC,GAAO,MACF,CAwBL,IAvBAQ,EAAKnG,EAAGz9B,OACR8jC,EAAKpG,EAAG19B,OACR5C,EAAI,EACJ+B,GAAK,GAILN,EAAIi+B,EAAU3yB,GAAQuzB,EAAG,GAAK,KAItB,IACNA,EAAKiF,EAASjF,EAAI7+B,EAAGsL,GACrBszB,EAAKkF,EAASlF,EAAI5+B,EAAGsL,GACrB25B,EAAKpG,EAAG19B,OACR4jC,EAAKnG,EAAGz9B,QAGV2jC,EAAKG,EAELL,GADAD,EAAM/F,EAAGj+B,MAAM,EAAGskC,IACP9jC,OAGJyjC,EAAOK,EAAIN,EAAIC,KAAU,GAChCM,EAAKrG,EAAGl+B,QACRukC,EAAK,CAAC,GAAG9iC,OAAO8iC,GAChBF,EAAMnG,EAAG,GACLA,EAAG,IAAMvzB,EAAO,GAAG05B,IAIvB,EAAG,CAOD,GANAhlC,EAAI,GAGJ4M,EAAMqnB,EAAQ4K,EAAI8F,EAAKM,EAAIL,IAGjB,EAAG,CAqBX,GAjBAC,EAAOF,EAAI,GACPM,GAAML,IAAMC,EAAOA,EAAOv5B,GAAQq5B,EAAI,IAAM,KAGhD3kC,EAAIi+B,EAAU4G,EAAOG,IAab,EAcN,IAXIhlC,GAAKsL,IAAMtL,EAAIsL,EAAO,GAI1Bm5B,GADAD,EAAOV,EAASjF,EAAI7+B,EAAGsL,IACVnK,OACbyjC,EAAOD,EAAIxjC,OAM+B,GAAnC8yB,EAAQuQ,EAAMG,EAAKF,EAAOG,IAC/B5kC,IAGAskC,EAASE,EAAMS,EAAKR,EAAQS,EAAKrG,EAAI4F,EAAOn5B,GAC5Cm5B,EAAQD,EAAKrjC,OACbyL,EAAM,OAQC,GAAL5M,IAGF4M,EAAM5M,EAAI,GAKZykC,GADAD,EAAO3F,EAAGl+B,SACGQ,OAUf,GAPIsjC,EAAQG,IAAMJ,EAAO,CAAC,GAAGpiC,OAAOoiC,IAGpCF,EAASK,EAAKH,EAAMI,EAAMt5B,GAC1Bs5B,EAAOD,EAAIxjC,QAGC,GAARyL,EAMF,KAAOqnB,EAAQ4K,EAAI8F,EAAKM,EAAIL,GAAQ,GAClC5kC,IAGAskC,EAASK,EAAKM,EAAKL,EAAOM,EAAKrG,EAAI+F,EAAMt5B,GACzCs5B,EAAOD,EAAIxjC,YAGE,IAARyL,IACT5M,IACA2kC,EAAM,CAAC,IAITD,EAAGnmC,KAAOyB,EAGN2kC,EAAI,GACNA,EAAIC,KAAUhG,EAAGkG,IAAO,GAExBH,EAAM,CAAC/F,EAAGkG,IACVF,EAAO,UAEDE,IAAOC,GAAgB,MAAVJ,EAAI,KAAerkC,KAE1CikC,EAAiB,MAAVI,EAAI,GAGND,EAAG,IAAIA,EAAGtB,OAAO,EAAG,GAG3B,GAAI93B,GAAQ8yB,EAAM,CAGhB,IAAK7/B,EAAI,EAAG+B,EAAIokC,EAAG,GAAIpkC,GAAK,GAAIA,GAAK,GAAI/B,KAEzCmb,EAAM3J,EAAGmzB,GAAMnzB,EAAEhE,EAAIxN,EAAIwN,EAAIsyB,EAAW,GAAK,EAAGiD,EAAIiD,QAIpDx0B,EAAEhE,EAAIA,EACNgE,EAAE1Q,GAAKklC,EAGT,OAAOx0B,GA9PL,GAgYAwvB,EAAa,8BACfC,EAAW,cACXC,EAAY,cACZC,EAAkB,qBAClBC,EAAmB,6BALvBN,EAOS,SAAU5nB,EAAGxL,EAAKi1B,EAAOxyB,GAC9B,IAAIpD,EACFhL,EAAI4gC,EAAQj1B,EAAMA,EAAIc,QAAQ4yB,EAAkB,IAGlD,GAAID,EAAgBlV,KAAKlqB,GACvBmX,EAAEnX,EAAIwwB,MAAMxwB,GAAK,KAAOA,EAAI,GAAK,EAAI,MAChC,CACL,IAAK4gC,IAGH5gC,EAAIA,EAAEyM,QAAQwyB,GAAY,SAAU5gC,EAAGwmC,EAAIC,GAEzC,OADA95B,EAAkC,MAA1B85B,EAAKA,EAAG/hC,eAAwB,GAAW,KAAN+hC,EAAY,EAAI,EACrD12B,GAAKA,GAAKpD,EAAY3M,EAALwmC,KAGvBz2B,IACFpD,EAAOoD,EAGPpO,EAAIA,EAAEyM,QAAQyyB,EAAU,MAAMzyB,QAAQ0yB,EAAW,SAG/CxzB,GAAO3L,GAAG,OAAO,IAAIu9B,EAAUv9B,EAAGgL,GAKxC,GAAIuyB,EAAU13B,MACZ,MAAMb,MACH44B,EAAiB,SAAWxvB,EAAI,SAAWA,EAAI,IAAM,YAAczC,GAIxEwL,EAAEnX,EAAI,KAGRmX,EAAE7Y,EAAI6Y,EAAE1L,EAAI,MA6LhBuvB,EAAE+J,cAAgB/J,EAAE7qB,IAAM,WACxB,IAAIgH,EAAI,IAAIomB,EAAU1/B,MAEtB,OADIsZ,EAAEnX,EAAI,IAAGmX,EAAEnX,EAAI,GACZmX,GAWT6jB,EAAEgK,WAAa,SAAU5tB,EAAGhJ,GAC1B,OAAOulB,EAAQ91B,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,KAiBxC4sB,EAAEiK,cAAgBjK,EAAE4H,GAAK,SAAUA,EAAI5B,GACrC,IAAI1iC,EAAGoB,EAAGsB,EACRmW,EAAItZ,KAEN,GAAU,MAAN+kC,EAKF,OAJApE,EAASoE,EAAI,EAAGzE,GACN,MAAN6C,EAAYA,EAAKvB,EAChBjB,EAASwC,EAAI,EAAG,GAEd5nB,EAAM,IAAImkB,EAAUpmB,GAAIyrB,EAAKzrB,EAAE1L,EAAI,EAAGu1B,GAG/C,KAAM1iC,EAAI6Y,EAAE7Y,GAAI,OAAO,KAIvB,GAHAoB,IAAMsB,EAAI1C,EAAEuC,OAAS,GAAKu9B,EAASvgC,KAAK4N,EAAIsyB,IAAaA,EAGrD/8B,EAAI1C,EAAE0C,GAAI,KAAOA,EAAI,IAAM,EAAGA,GAAK,GAAItB,KAG3C,OAFIA,EAAI,IAAGA,EAAI,GAERA,GAwBTs7B,EAAEkK,UAAYlK,EAAEvxB,IAAM,SAAU2N,EAAGhJ,GACjC,OAAO3E,EAAI5L,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,GAAIoxB,EAAgBC,IAQxDzE,EAAEmK,mBAAqBnK,EAAEoK,KAAO,SAAUhuB,EAAGhJ,GAC3C,OAAO3E,EAAI5L,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,GAAI,EAAG,IAmB3C4sB,EAAEqK,gBAAkBrK,EAAEpxB,IAAM,SAAUlK,EAAGrB,GACvC,IAAI+d,EAAMkpB,EAAUrnC,EAAGsQ,EAASg3B,EAAQC,EAAQC,EAAQruB,EACtDD,EAAItZ,KAKN,IAHA6B,EAAI,IAAI69B,EAAU79B,IAGZpB,IAAMoB,EAAEgmC,YACZ,MAAM1gC,MACH44B,EAAiB,4BAA8B0B,EAAQ5/B,IAS5D,GANS,MAALrB,IAAWA,EAAI,IAAIk/B,EAAUl/B,IAGjCknC,EAAS7lC,EAAE+L,EAAI,IAGV0L,EAAE7Y,IAAM6Y,EAAE7Y,EAAE,IAAgB,GAAV6Y,EAAE7Y,EAAE,KAAY6Y,EAAE1L,GAAmB,GAAd0L,EAAE7Y,EAAEuC,SAAgBnB,EAAEpB,IAAMoB,EAAEpB,EAAE,GAK5E,OADA8Y,EAAI,IAAImmB,EAAU16B,KAAK+G,KAAK01B,EAAQnoB,GAAIouB,EAAS,EAAItoB,EAAMvd,IAAM4/B,EAAQ5/B,KAClErB,EAAI+Y,EAAEzN,IAAItL,GAAK+Y,EAKxB,GAFAouB,EAAS9lC,EAAEM,EAAI,EAEX3B,EAAG,CAGL,GAAIA,EAAEC,GAAKD,EAAEC,EAAE,IAAMD,EAAE2B,EAAG,OAAO,IAAIu9B,EAAUlE,MAE/CiM,GAAYE,GAAUruB,EAAEuuB,aAAernC,EAAEqnC,eAE3BvuB,EAAIA,EAAExN,IAAItL,QAInB,IAAIqB,EAAE+L,EAAI,IAAM0L,EAAE1L,EAAI,GAAK0L,EAAE1L,GAAK,IAAa,GAAP0L,EAAE1L,EAE7C0L,EAAE7Y,EAAE,GAAK,GAAKinC,GAAUpuB,EAAE7Y,EAAE,IAAM,KAElC6Y,EAAE7Y,EAAE,GAAK,MAAQinC,GAAUpuB,EAAE7Y,EAAE,IAAM,YASvC,OANAiQ,EAAI4I,EAAEnX,EAAI,GAAKid,EAAMvd,IAAM,EAAI,EAG3ByX,EAAE1L,GAAK,IAAG8C,EAAI,EAAIA,GAGf,IAAIgvB,EAAUiI,EAAS,EAAIj3B,EAAIA,GAE7ByxB,IAKTzxB,EAAImvB,EAASsC,EAAgBjC,EAAW,IAe1C,IAZIwH,GACFnpB,EAAO,IAAImhB,EAAU,IACjBiI,IAAQ9lC,EAAEM,EAAI,GAClBylC,EAASxoB,EAAMvd,IAGf+lC,GADAxnC,EAAI4E,KAAKsN,KAAKmvB,EAAQ5/B,KACT,EAGf0X,EAAI,IAAImmB,EAAUgC,KAGR,CAER,GAAIkG,EAAQ,CAEV,KADAruB,EAAIA,EAAEuuB,MAAMxuB,IACL7Y,EAAG,MAENiQ,EACE6I,EAAE9Y,EAAEuC,OAAS0N,IAAG6I,EAAE9Y,EAAEuC,OAAS0N,GACxB+2B,IACTluB,EAAIA,EAAEzN,IAAItL,IAId,GAAIJ,EAAG,CAEL,GAAU,KADVA,EAAI0/B,EAAU1/B,EAAI,IACL,MACbwnC,EAASxnC,EAAI,OAKb,GAFAmb,EADA1Z,EAAIA,EAAEimC,MAAMvpB,GACH1c,EAAE+L,EAAI,EAAG,GAEd/L,EAAE+L,EAAI,GACRg6B,EAASxoB,EAAMvd,OACV,CAEL,GAAU,KADVzB,GAAKqhC,EAAQ5/B,IACA,MACb+lC,EAASxnC,EAAI,EAIjBkZ,EAAIA,EAAEwuB,MAAMxuB,GAER5I,EACE4I,EAAE7Y,GAAK6Y,EAAE7Y,EAAEuC,OAAS0N,IAAG4I,EAAE7Y,EAAEuC,OAAS0N,GAC/B+2B,IACTnuB,EAAIA,EAAExN,IAAItL,IAId,OAAIinC,EAAiBluB,GACjBouB,IAAQpuB,EAAImoB,EAAI91B,IAAI2N,IAEjB/Y,EAAI+Y,EAAEzN,IAAItL,GAAKkQ,EAAI6K,EAAMhC,EAAG4oB,EAAeP,OAnHxBwE,GAmH+C7sB,IAY3E4jB,EAAE4K,aAAe,SAAU5E,GACzB,IAAIthC,EAAI,IAAI69B,EAAU1/B,MAGtB,OAFU,MAANmjC,EAAYA,EAAKvB,EAChBjB,EAASwC,EAAI,EAAG,GACd5nB,EAAM1Z,EAAGA,EAAE+L,EAAI,EAAGu1B,IAQ3BhG,EAAE6K,UAAY7K,EAAElxB,GAAK,SAAUsN,EAAGhJ,GAChC,OAA8C,IAAvCulB,EAAQ91B,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,KAOxC4sB,EAAE1G,SAAW,WACX,QAASz2B,KAAKS,GAQhB08B,EAAE8K,cAAgB9K,EAAE/wB,GAAK,SAAUmN,EAAGhJ,GACpC,OAAOulB,EAAQ91B,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,IAAM,GAQ9C4sB,EAAE+K,uBAAyB/K,EAAE9wB,IAAM,SAAUkN,EAAGhJ,GAC9C,OAAoD,KAA5CA,EAAIulB,EAAQ91B,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,MAAoB,IAANA,GAQ3D4sB,EAAE0K,UAAY,WACZ,QAAS7nC,KAAKS,GAAK8/B,EAASvgC,KAAK4N,EAAIsyB,GAAYlgC,KAAKS,EAAEuC,OAAS,GAQnEm6B,EAAEgL,WAAahL,EAAEjxB,GAAK,SAAUqN,EAAGhJ,GACjC,OAAOulB,EAAQ91B,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,IAAM,GAQ9C4sB,EAAEiL,oBAAsBjL,EAAEhxB,IAAM,SAAUoN,EAAGhJ,GAC3C,OAAqD,KAA7CA,EAAIulB,EAAQ91B,KAAM,IAAI0/B,EAAUnmB,EAAGhJ,MAAqB,IAANA,GAO5D4sB,EAAExK,MAAQ,WACR,OAAQ3yB,KAAKmC,GAOfg7B,EAAEkL,WAAa,WACb,OAAOroC,KAAKmC,EAAI,GAOlBg7B,EAAEmL,WAAa,WACb,OAAOtoC,KAAKmC,EAAI,GAOlBg7B,EAAEzxB,OAAS,WACT,QAAS1L,KAAKS,GAAkB,GAAbT,KAAKS,EAAE,IAwB5B08B,EAAEoL,MAAQ,SAAUhvB,EAAGhJ,GACrB,IAAInQ,EAAG8O,EAAG5N,EAAGknC,EACXlvB,EAAItZ,KACJsQ,EAAIgJ,EAAEnX,EAMR,GAHAoO,GADAgJ,EAAI,IAAImmB,EAAUnmB,EAAGhJ,IACfpO,GAGDmO,IAAMC,EAAG,OAAO,IAAImvB,EAAUlE,KAGnC,GAAIlrB,GAAKC,EAEP,OADAgJ,EAAEpX,GAAKoO,EACA+I,EAAE6rB,KAAK5rB,GAGhB,IAAIkvB,EAAKnvB,EAAE1L,EAAIsyB,EACbwI,EAAKnvB,EAAE3L,EAAIsyB,EACXO,EAAKnnB,EAAE7Y,EACPigC,EAAKnnB,EAAE9Y,EAET,IAAKgoC,IAAOC,EAAI,CAGd,IAAKjI,IAAOC,EAAI,OAAOD,GAAMlnB,EAAEpX,GAAKoO,EAAGgJ,GAAK,IAAImmB,EAAUgB,EAAKpnB,EAAIkiB,KAGnE,IAAKiF,EAAG,KAAOC,EAAG,GAGhB,OAAOA,EAAG,IAAMnnB,EAAEpX,GAAKoO,EAAGgJ,GAAK,IAAImmB,EAAUe,EAAG,GAAKnnB,EAGnC,GAAjBsoB,GAAsB,EAAI,GAS/B,GALA6G,EAAKlI,EAASkI,GACdC,EAAKnI,EAASmI,GACdjI,EAAKA,EAAGj+B,QAGJ8N,EAAIm4B,EAAKC,EAAI,CAaf,KAXIF,EAAOl4B,EAAI,IACbA,GAAKA,EACLhP,EAAIm/B,IAEJiI,EAAKD,EACLnnC,EAAIo/B,GAGNp/B,EAAEkkC,UAGGj1B,EAAID,EAAGC,IAAKjP,EAAEmC,KAAK,IACxBnC,EAAEkkC,eAMF,IAFAt2B,GAAKs5B,GAAQl4B,EAAImwB,EAAGz9B,SAAWuN,EAAImwB,EAAG19B,SAAWsN,EAAIC,EAEhDD,EAAIC,EAAI,EAAGA,EAAIrB,EAAGqB,IAErB,GAAIkwB,EAAGlwB,IAAMmwB,EAAGnwB,GAAI,CAClBi4B,EAAO/H,EAAGlwB,GAAKmwB,EAAGnwB,GAClB,MAYN,GANIi4B,IAAMlnC,EAAIm/B,EAAIA,EAAKC,EAAIA,EAAKp/B,EAAGiY,EAAEpX,GAAKoX,EAAEpX,IAE5CoO,GAAKrB,EAAIwxB,EAAG19B,SAAW5C,EAAIqgC,EAAGz9B,SAItB,EAAG,KAAOuN,IAAKkwB,EAAGrgC,KAAO,GAIjC,IAHAmQ,EAAI0vB,EAAO,EAGJ/wB,EAAIoB,GAAI,CAEb,GAAImwB,IAAKvxB,GAAKwxB,EAAGxxB,GAAI,CACnB,IAAK9O,EAAI8O,EAAG9O,IAAMqgC,IAAKrgC,GAAIqgC,EAAGrgC,GAAKmQ,KACjCkwB,EAAGrgC,GACLqgC,EAAGvxB,IAAM+wB,EAGXQ,EAAGvxB,IAAMwxB,EAAGxxB,GAId,KAAgB,GAATuxB,EAAG,GAASA,EAAGwE,OAAO,EAAG,KAAMyD,GAGtC,OAAKjI,EAAG,GAWD8C,EAAUhqB,EAAGknB,EAAIiI,IAPtBnvB,EAAEpX,EAAqB,GAAjBy/B,GAAsB,EAAI,EAChCroB,EAAE9Y,EAAI,CAAC8Y,EAAE3L,EAAI,GACN2L,IA8BX4jB,EAAEwL,OAASxL,EAAErxB,IAAM,SAAUyN,EAAGhJ,GAC9B,IAAIqB,EAAGzP,EACLmX,EAAItZ,KAKN,OAHAuZ,EAAI,IAAImmB,EAAUnmB,EAAGhJ,IAGhB+I,EAAE7Y,IAAM8Y,EAAEpX,GAAKoX,EAAE9Y,IAAM8Y,EAAE9Y,EAAE,GACvB,IAAIi/B,EAAUlE,MAGXjiB,EAAE9Y,GAAK6Y,EAAE7Y,IAAM6Y,EAAE7Y,EAAE,GACtB,IAAIi/B,EAAUpmB,IAGJ,GAAf4oB,GAIF//B,EAAIoX,EAAEpX,EACNoX,EAAEpX,EAAI,EACNyP,EAAIhG,EAAI0N,EAAGC,EAAG,EAAG,GACjBA,EAAEpX,EAAIA,EACNyP,EAAEzP,GAAKA,GAEPyP,EAAIhG,EAAI0N,EAAGC,EAAG,EAAG2oB,IAGnB3oB,EAAID,EAAEivB,MAAM32B,EAAEk2B,MAAMvuB,KAGb9Y,EAAE,IAAqB,GAAfyhC,IAAkB3oB,EAAEpX,EAAImX,EAAEnX,GAElCoX,IAwBT4jB,EAAEyL,aAAezL,EAAE2K,MAAQ,SAAUvuB,EAAGhJ,GACtC,IAAI9P,EAAGmN,EAAGxN,EAAG8O,EAAGwB,EAAGlQ,EAAGqoC,EAAKhD,EAAKC,EAAKgD,EAAKC,EAAKC,EAAKC,EAClD97B,EAAM+7B,EACN5vB,EAAItZ,KACJygC,EAAKnnB,EAAE7Y,EACPigC,GAAMnnB,EAAI,IAAImmB,EAAUnmB,EAAGhJ,IAAI9P,EAGjC,KAAKggC,GAAOC,GAAOD,EAAG,IAAOC,EAAG,IAmB9B,OAhBKpnB,EAAEnX,IAAMoX,EAAEpX,GAAKs+B,IAAOA,EAAG,KAAOC,GAAMA,IAAOA,EAAG,KAAOD,EAC1DlnB,EAAE9Y,EAAI8Y,EAAE3L,EAAI2L,EAAEpX,EAAI,MAElBoX,EAAEpX,GAAKmX,EAAEnX,EAGJs+B,GAAOC,GAKVnnB,EAAE9Y,EAAI,CAAC,GACP8Y,EAAE3L,EAAI,GALN2L,EAAE9Y,EAAI8Y,EAAE3L,EAAI,MAST2L,EAYT,IATA3L,EAAI2yB,EAASjnB,EAAE1L,EAAIsyB,GAAYK,EAAShnB,EAAE3L,EAAIsyB,GAC9C3mB,EAAEpX,GAAKmX,EAAEnX,GACT0mC,EAAMpI,EAAGz9B,SACT8lC,EAAMpI,EAAG19B,UAGMimC,EAAKxI,EAAIA,EAAKC,EAAIA,EAAKuI,EAAI7oC,EAAIyoC,EAAKA,EAAMC,EAAKA,EAAM1oC,GAG/DA,EAAIyoC,EAAMC,EAAKG,EAAK,GAAI7oC,IAAK6oC,EAAGxlC,KAAK,IAK1C,IAHA0J,EAAO8yB,EACPiJ,EAAW7I,EAENjgC,EAAI0oC,IAAO1oC,GAAK,GAAI,CAKvB,IAJAK,EAAI,EACJsoC,EAAMrI,EAAGtgC,GAAK8oC,EACdF,EAAMtI,EAAGtgC,GAAK8oC,EAAW,EAEXh6B,EAAI9O,GAAbsQ,EAAIm4B,GAAgB35B,EAAI9O,GAK3BK,IADAolC,EAAMkD,GAHNlD,EAAMpF,IAAK/vB,GAAKw4B,IAEhB1oC,EAAIwoC,EAAMnD,GADVC,EAAMrF,EAAG/vB,GAAKw4B,EAAW,GACHH,GACEG,EAAYA,EAAYD,EAAG/5B,GAAKzO,GAC7C0M,EAAO,IAAM3M,EAAI0oC,EAAW,GAAKF,EAAMlD,EAClDmD,EAAG/5B,KAAO22B,EAAM14B,EAGlB87B,EAAG/5B,GAAKzO,EASV,OANIA,IACAmN,EAEFq7B,EAAGhE,OAAO,EAAG,GAGR1B,EAAUhqB,EAAG0vB,EAAIr7B,IAQ1BuvB,EAAEgM,QAAU,WACV,IAAI7vB,EAAI,IAAIomB,EAAU1/B,MAEtB,OADAsZ,EAAEnX,GAAKmX,EAAEnX,GAAK,KACPmX,GAwBT6jB,EAAEgI,KAAO,SAAU5rB,EAAGhJ,GACpB,IAAIjP,EACFgY,EAAItZ,KACJsQ,EAAIgJ,EAAEnX,EAMR,GAHAoO,GADAgJ,EAAI,IAAImmB,EAAUnmB,EAAGhJ,IACfpO,GAGDmO,IAAMC,EAAG,OAAO,IAAImvB,EAAUlE,KAGlC,GAAIlrB,GAAKC,EAER,OADAgJ,EAAEpX,GAAKoO,EACA+I,EAAEivB,MAAMhvB,GAGjB,IAAIkvB,EAAKnvB,EAAE1L,EAAIsyB,EACbwI,EAAKnvB,EAAE3L,EAAIsyB,EACXO,EAAKnnB,EAAE7Y,EACPigC,EAAKnnB,EAAE9Y,EAET,IAAKgoC,IAAOC,EAAI,CAGd,IAAKjI,IAAOC,EAAI,OAAO,IAAIhB,EAAUpvB,EAAI,GAIzC,IAAKmwB,EAAG,KAAOC,EAAG,GAAI,OAAOA,EAAG,GAAKnnB,EAAI,IAAImmB,EAAUe,EAAG,GAAKnnB,EAAQ,EAAJhJ,GAQrE,GALAm4B,EAAKlI,EAASkI,GACdC,EAAKnI,EAASmI,GACdjI,EAAKA,EAAGj+B,QAGJ8N,EAAIm4B,EAAKC,EAAI,CAUf,IATIp4B,EAAI,GACNo4B,EAAKD,EACLnnC,EAAIo/B,IAEJpwB,GAAKA,EACLhP,EAAIm/B,GAGNn/B,EAAEkkC,UACKl1B,IAAKhP,EAAEmC,KAAK,IACnBnC,EAAEkkC,UAUJ,KAPAl1B,EAAImwB,EAAGz9B,SACPuN,EAAImwB,EAAG19B,QAGK,IAAG1B,EAAIo/B,EAAIA,EAAKD,EAAIA,EAAKn/B,EAAGiP,EAAID,GAGvCA,EAAI,EAAGC,GACVD,GAAKmwB,IAAKlwB,GAAKkwB,EAAGlwB,GAAKmwB,EAAGnwB,GAAKD,GAAK2vB,EAAO,EAC3CQ,EAAGlwB,GAAK0vB,IAASQ,EAAGlwB,GAAK,EAAIkwB,EAAGlwB,GAAK0vB,EAUvC,OAPI3vB,IACFmwB,EAAK,CAACnwB,GAAGrM,OAAOw8B,KACdiI,GAKGnF,EAAUhqB,EAAGknB,EAAIiI,IAmB1BvL,EAAEiM,UAAYjM,EAAEqG,GAAK,SAAUA,EAAIL,GACjC,IAAI1iC,EAAGoB,EAAGsB,EACRmW,EAAItZ,KAEN,GAAU,MAANwjC,GAAcA,MAASA,EAKzB,OAJA7C,EAAS6C,EAAI,EAAGlD,GACN,MAAN6C,EAAYA,EAAKvB,EAChBjB,EAASwC,EAAI,EAAG,GAEd5nB,EAAM,IAAImkB,EAAUpmB,GAAIkqB,EAAIL,GAGrC,KAAM1iC,EAAI6Y,EAAE7Y,GAAI,OAAO,KAIvB,GAFAoB,GADAsB,EAAI1C,EAAEuC,OAAS,GACPk9B,EAAW,EAEf/8B,EAAI1C,EAAE0C,GAAI,CAGZ,KAAOA,EAAI,IAAM,EAAGA,GAAK,GAAItB,KAG7B,IAAKsB,EAAI1C,EAAE,GAAI0C,GAAK,GAAIA,GAAK,GAAItB,MAKnC,OAFI2hC,GAAMlqB,EAAE1L,EAAI,EAAI/L,IAAGA,EAAIyX,EAAE1L,EAAI,GAE1B/L,GAYTs7B,EAAEkM,UAAY,SAAU34B,GAEtB,OADAiwB,EAASjwB,GAAIyvB,EAAkBA,GACxBngC,KAAK8nC,MAAM,KAAOp3B,IAe3BysB,EAAEmM,WAAanM,EAAE1b,KAAO,WACtB,IAAIjhB,EAAGqB,EAAGX,EAAGqoC,EAAKjoC,EAChBgY,EAAItZ,KACJS,EAAI6Y,EAAE7Y,EACN0B,EAAImX,EAAEnX,EACNyL,EAAI0L,EAAE1L,EACNm3B,EAAKpD,EAAiB,EACtBpjB,EAAO,IAAImhB,EAAU,OAGvB,GAAU,IAANv9B,IAAY1B,IAAMA,EAAE,GACtB,OAAO,IAAIi/B,GAAWv9B,GAAKA,EAAI,KAAO1B,GAAKA,EAAE,IAAM+6B,IAAM/6B,EAAI6Y,EAAI,KA8BnE,GAtBS,IAJTnX,EAAI6C,KAAKyc,MAAMggB,EAAQnoB,MAITnX,GAAK,OACjBN,EAAI2+B,EAAc//B,IACXuC,OAAS4K,GAAK,GAAK,IAAG/L,GAAK,KAClCM,EAAI6C,KAAKyc,MAAM5f,GACf+L,EAAI2yB,GAAU3yB,EAAI,GAAK,IAAMA,EAAI,GAAKA,EAAI,GAS1C1M,EAAI,IAAIw+B,EANN79B,EADEM,GAAK,IACH,KAAOyL,GAEX/L,EAAIM,EAAEy+B,iBACAp+B,MAAM,EAAGX,EAAE8rB,QAAQ,KAAO,GAAK/f,IAKvC1M,EAAI,IAAIw+B,EAAUv9B,EAAI,IAOpBjB,EAAET,EAAE,GAMN,KAJA0B,GADAyL,EAAI1M,EAAE0M,GACEm3B,GACA,IAAG5iC,EAAI,KAOb,GAHAb,EAAIJ,EACJA,EAAIqd,EAAKupB,MAAMxmC,EAAE6jC,KAAKv5B,EAAI0N,EAAGhY,EAAGyjC,EAAI,KAEhCvE,EAAcl/B,EAAEb,GAAG+B,MAAM,EAAGL,MAAQN,EAAI2+B,EAAct/B,EAAET,IAAI+B,MAAM,EAAGL,GAAI,CAW3E,GANIjB,EAAE0M,EAAIA,KAAKzL,EAMN,SALTN,EAAIA,EAAEW,MAAML,EAAI,EAAGA,EAAI,MAKHonC,GAAY,QAAL1nC,GAgBpB,EAICA,KAAOA,EAAEW,MAAM,IAAqB,KAAfX,EAAEg/B,OAAO,MAGlCtlB,EAAMra,EAAGA,EAAE0M,EAAI+zB,EAAiB,EAAG,GACnCnhC,GAAKU,EAAE4mC,MAAM5mC,GAAG+K,GAAGqN,IAGrB,MAvBA,IAAKiwB,IACHhuB,EAAMja,EAAGA,EAAEsM,EAAI+zB,EAAiB,EAAG,GAE/BrgC,EAAEwmC,MAAMxmC,GAAG2K,GAAGqN,IAAI,CACpBpY,EAAII,EACJ,MAIJyjC,GAAM,EACN5iC,GAAK,EACLonC,EAAM,EAkBd,OAAOhuB,EAAMra,EAAGA,EAAE0M,EAAI+zB,EAAiB,EAAGC,EAAephC,IAa3D28B,EAAEyD,cAAgB,SAAUmE,EAAI5B,GAK9B,OAJU,MAAN4B,IACFpE,EAASoE,EAAI,EAAGzE,GAChByE,KAEK7B,EAAOljC,KAAM+kC,EAAI5B,EAAI,IAgB9BhG,EAAEqM,QAAU,SAAUzE,EAAI5B,GAKxB,OAJU,MAAN4B,IACFpE,EAASoE,EAAI,EAAGzE,GAChByE,EAAKA,EAAK/kC,KAAK4N,EAAI,GAEds1B,EAAOljC,KAAM+kC,EAAI5B,IA6B1BhG,EAAEsM,SAAW,SAAU1E,EAAI5B,EAAID,GAC7B,IAAIp1B,EACFwL,EAAItZ,KAEN,GAAc,MAAVkjC,EACQ,MAAN6B,GAAc5B,GAAmB,iBAANA,GAC7BD,EAASC,EACTA,EAAK,MACI4B,GAAmB,iBAANA,GACtB7B,EAAS6B,EACTA,EAAK5B,EAAK,MAEVD,EAASd,OAEN,GAAqB,iBAAVc,EAChB,MAAM/7B,MACH44B,EAAiB,2BAA6BmD,GAKnD,GAFAp1B,EAAMwL,EAAEkwB,QAAQzE,EAAI5B,GAEhB7pB,EAAE7Y,EAAG,CACP,IAAIL,EACF0yB,EAAMhlB,EAAImV,MAAM,KAChBymB,GAAMxG,EAAOnyB,UACb44B,GAAMzG,EAAOZ,mBACbC,EAAiBW,EAAOX,gBAAkB,GAC1CqH,EAAU9W,EAAI,GACd+W,EAAe/W,EAAI,GACnBlgB,EAAQ0G,EAAEnX,EAAI,EACd2nC,EAAYl3B,EAAQg3B,EAAQpnC,MAAM,GAAKonC,EACvC57B,EAAM87B,EAAU9mC,OAIlB,GAFI2mC,IAAIvpC,EAAIspC,EAAIA,EAAKC,EAAIA,EAAKvpC,EAAG4N,GAAO5N,GAEpCspC,EAAK,GAAK17B,EAAM,EAAG,CAGrB,IAFA5N,EAAI4N,EAAM07B,GAAMA,EAChBE,EAAUE,EAAUre,OAAO,EAAGrrB,GACvBA,EAAI4N,EAAK5N,GAAKspC,EAAIE,GAAWrH,EAAiBuH,EAAUre,OAAOrrB,EAAGspC,GACrEC,EAAK,IAAGC,GAAWrH,EAAiBuH,EAAUtnC,MAAMpC,IACpDwS,IAAOg3B,EAAU,IAAMA,GAG7B97B,EAAM+7B,EACHD,GAAW1G,EAAOV,kBAAoB,MAAQmH,GAAMzG,EAAOT,mBAC1DoH,EAAaj7B,QAAQ,IAAIm7B,OAAO,OAASJ,EAAK,OAAQ,KACvD,MAAQzG,EAAOR,wBAA0B,KACxCmH,GACDD,EAGL,OAAQ1G,EAAOb,QAAU,IAAMv0B,GAAOo1B,EAAOP,QAAU,KAezDxF,EAAE6M,WAAa,SAAUC,GACvB,IAAIvpC,EAAGwpC,EAAIC,EAAIC,EAAIx8B,EAAGy8B,EAAKxoC,EAAGyoC,EAAIC,EAAI34B,EAAG1Q,EAAGiB,EAC1CmX,EAAItZ,KACJygC,EAAKnnB,EAAE7Y,EAET,GAAU,MAANwpC,MACFpoC,EAAI,IAAI69B,EAAUuK,IAGXpC,cAAgBhmC,EAAEpB,GAAa,IAARoB,EAAEM,IAAYN,EAAEqK,GAAGw1B,IAC/C,MAAMv6B,MACH44B,EAAiB,aACfl+B,EAAEgmC,YAAc,iBAAmB,oBAAsBpG,EAAQ5/B,IAI1E,IAAK4+B,EAAI,OAAO,IAAIf,EAAUpmB,GAoB9B,IAlBA5Y,EAAI,IAAIg/B,EAAUgC,GAClB6I,EAAKL,EAAK,IAAIxK,EAAUgC,GACxByI,EAAKG,EAAK,IAAI5K,EAAUgC,GACxBv/B,EAAIq+B,EAAcC,GAIlB7yB,EAAIlN,EAAEkN,EAAIzL,EAAEa,OAASsW,EAAE1L,EAAI,EAC3BlN,EAAED,EAAE,GAAK2/B,GAAUiK,EAAMz8B,EAAIsyB,GAAY,EAAIA,EAAWmK,EAAMA,GAC9DJ,GAAMA,GAAMpoC,EAAEslC,WAAWzmC,GAAK,EAAKkN,EAAI,EAAIlN,EAAI6pC,EAAM1oC,EAErDwoC,EAAMrI,EACNA,EAAU,IACVngC,EAAI,IAAI69B,EAAUv9B,GAGlBmoC,EAAG7pC,EAAE,GAAK,EAGRmR,EAAIhG,EAAI/J,EAAGnB,EAAG,EAAG,GAEQ,IADzB0pC,EAAKF,EAAG/E,KAAKvzB,EAAEk2B,MAAMqC,KACdhD,WAAW8C,IAClBC,EAAKC,EACLA,EAAKC,EACLG,EAAKD,EAAGnF,KAAKvzB,EAAEk2B,MAAMsC,EAAKG,IAC1BD,EAAKF,EACL1pC,EAAImB,EAAE0mC,MAAM32B,EAAEk2B,MAAMsC,EAAK1pC,IACzBmB,EAAIuoC,EAeN,OAZAA,EAAKx+B,EAAIq+B,EAAG1B,MAAM2B,GAAKC,EAAI,EAAG,GAC9BG,EAAKA,EAAGnF,KAAKiF,EAAGtC,MAAMyC,IACtBL,EAAKA,EAAG/E,KAAKiF,EAAGtC,MAAMqC,IACtBG,EAAGnoC,EAAIooC,EAAGpoC,EAAImX,EAAEnX,EAIhBjB,EAAI0K,EAAI2+B,EAAIJ,EAHZv8B,GAAQ,EAGWg0B,GAAe2G,MAAMjvB,GAAGhH,MAAM60B,WAC7Cv7B,EAAI0+B,EAAIJ,EAAIt8B,EAAGg0B,GAAe2G,MAAMjvB,GAAGhH,OAAS,EAAI,CAACi4B,EAAIJ,GAAM,CAACG,EAAIJ,GAExElI,EAAUqI,EAEHnpC,GAOTi8B,EAAE7wB,SAAW,WACX,OAAQm1B,EAAQzhC,OAelBm9B,EAAEqN,YAAc,SAAUhH,EAAIL,GAE5B,OADU,MAANK,GAAY7C,EAAS6C,EAAI,EAAGlD,GACzB4C,EAAOljC,KAAMwjC,EAAIL,EAAI,IAe9BhG,EAAEx0B,SAAW,SAAU4H,GACrB,IAAIzC,EACFjM,EAAI7B,KACJmC,EAAIN,EAAEM,EACNyL,EAAI/L,EAAE+L,EA0BR,OAvBU,OAANA,EACEzL,GACF2L,EAAM,WACF3L,EAAI,IAAG2L,EAAM,IAAMA,IAEvBA,EAAM,OAGC,MAALyC,EACFzC,EAAMF,GAAKi0B,GAAcj0B,GAAKk0B,EAC3BlB,EAAcJ,EAAc3+B,EAAEpB,GAAImN,GAClCkzB,EAAaN,EAAc3+B,EAAEpB,GAAImN,EAAG,KACxB,KAAN2C,EAETzC,EAAMgzB,EAAaN,GADnB3+B,EAAI0Z,EAAM,IAAImkB,EAAU79B,GAAI8/B,EAAiB/zB,EAAI,EAAGg0B,IACjBnhC,GAAIoB,EAAE+L,EAAG,MAE5C+yB,EAASpwB,EAAG,EAAGqyB,EAAS5/B,OAAQ,QAChC8K,EAAMmzB,EAAYH,EAAaN,EAAc3+B,EAAEpB,GAAImN,EAAG,KAAM,GAAI2C,EAAGpO,GAAG,IAGpEA,EAAI,GAAKN,EAAEpB,EAAE,KAAIqN,EAAM,IAAMA,IAG5BA,GAQTqvB,EAAEsE,QAAUtE,EAAE/rB,OAAS,WACrB,OAAOqwB,EAAQzhC,OAIjBm9B,EAAEnyB,cAAe,EAEb40B,IACFzC,EAAEh8B,OAAOC,aAAe,YAGxB+7B,EAAEh8B,OAAOspC,IAAI,+BAAiCtN,EAAEsE,SAG9B,MAAhBT,GAAsBtB,EAAUj7B,IAAIu8B,GAEjCtB,EAsIG9vB,IACO,QAAI8vB,EAAUA,UAAYA,OAIH,KAAxC,aAAqB,OAAOA,GAAY,8BAh1F3C,I,cCAD7/B,EAAOD,QAAU,SAASC,GAoBzB,OAnBKA,EAAO6qC,kBACX7qC,EAAO8qC,UAAY,aACnB9qC,EAAO+qC,MAAQ,GAEV/qC,EAAOgrC,WAAUhrC,EAAOgrC,SAAW,IACxC/pC,OAAOC,eAAelB,EAAQ,SAAU,CACvCmB,YAAY,EACZC,IAAK,WACJ,OAAOpB,EAAOQ,KAGhBS,OAAOC,eAAelB,EAAQ,KAAM,CACnCmB,YAAY,EACZC,IAAK,WACJ,OAAOpB,EAAOO,KAGhBP,EAAO6qC,gBAAkB,GAEnB7qC,I,8BCnBR,IAOIirC,EACAC,EARAzmB,EAAUzkB,EAAOD,QAAU,GAU/B,SAASorC,IACL,MAAM,IAAI7jC,MAAM,mCAEpB,SAAS8jC,IACL,MAAM,IAAI9jC,MAAM,qCAsBpB,SAAS+jC,EAAWC,GAChB,GAAIL,IAAqBM,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKL,IAAqBE,IAAqBF,IAAqBM,WAEhE,OADAN,EAAmBM,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOL,EAAiBK,EAAK,GAC/B,MAAMv9B,GACJ,IAEI,OAAOk9B,EAAiBvqC,KAAK,KAAM4qC,EAAK,GAC1C,MAAMv9B,GAEJ,OAAOk9B,EAAiBvqC,KAAKP,KAAMmrC,EAAK,MAvCnD,WACG,IAEQL,EADsB,mBAAfM,WACYA,WAEAJ,EAEzB,MAAOp9B,GACLk9B,EAAmBE,EAEvB,IAEQD,EADwB,mBAAjBM,aACcA,aAEAJ,EAE3B,MAAOr9B,GACLm9B,EAAqBE,GAjB7B,GAwEA,IAEIK,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAatoC,OACbuoC,EAAQD,EAAarnC,OAAOsnC,GAE5BE,GAAc,EAEdF,EAAMvoC,QACN2oC,KAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUV,EAAWQ,GACzBF,GAAW,EAGX,IADA,IAAIx9B,EAAMu9B,EAAMvoC,OACVgL,GAAK,CAGP,IAFAs9B,EAAeC,EACfA,EAAQ,KACCE,EAAaz9B,GACds9B,GACAA,EAAaG,GAAYI,MAGjCJ,GAAc,EACdz9B,EAAMu9B,EAAMvoC,OAEhBsoC,EAAe,KACfE,GAAW,EAnEf,SAAyBM,GACrB,GAAIf,IAAuBM,aAEvB,OAAOA,aAAaS,GAGxB,IAAKf,IAAuBE,IAAwBF,IAAuBM,aAEvE,OADAN,EAAqBM,aACdA,aAAaS,GAExB,IAEWf,EAAmBe,GAC5B,MAAOl+B,GACL,IAEI,OAAOm9B,EAAmBxqC,KAAK,KAAMurC,GACvC,MAAOl+B,GAGL,OAAOm9B,EAAmBxqC,KAAKP,KAAM8rC,KAgD7CC,CAAgBH,IAiBpB,SAASI,EAAKb,EAAK5oC,GACfvC,KAAKmrC,IAAMA,EACXnrC,KAAKuC,MAAQA,EAYjB,SAAS0pC,KA5BT3nB,EAAQ4nB,SAAW,SAAUf,GACzB,IAAI1oC,EAAO,IAAIC,MAAMC,UAAUK,OAAS,GACxC,GAAIL,UAAUK,OAAS,EACnB,IAAK,IAAI5C,EAAI,EAAGA,EAAIuC,UAAUK,OAAQ5C,IAClCqC,EAAKrC,EAAI,GAAKuC,UAAUvC,GAGhCmrC,EAAM9nC,KAAK,IAAIuoC,EAAKb,EAAK1oC,IACJ,IAAjB8oC,EAAMvoC,QAAiBwoC,GACvBN,EAAWS,IASnBK,EAAKhqC,UAAU6pC,IAAM,WACjB7rC,KAAKmrC,IAAItoC,MAAM,KAAM7C,KAAKuC,QAE9B+hB,EAAQ4I,MAAQ,UAChB5I,EAAQ6nB,SAAU,EAClB7nB,EAAQ8nB,IAAM,GACd9nB,EAAQ+nB,KAAO,GACf/nB,EAAQle,QAAU,GAClBke,EAAQC,SAAW,GAInBD,EAAQgoB,GAAKL,EACb3nB,EAAQioB,YAAcN,EACtB3nB,EAAQkoB,KAAOP,EACf3nB,EAAQ1d,IAAMqlC,EACd3nB,EAAQmoB,eAAiBR,EACzB3nB,EAAQooB,mBAAqBT,EAC7B3nB,EAAQqoB,KAAOV,EACf3nB,EAAQsoB,gBAAkBX,EAC1B3nB,EAAQuoB,oBAAsBZ,EAE9B3nB,EAAQwoB,UAAY,SAAUnsC,GAAQ,MAAO,IAE7C2jB,EAAQyoB,QAAU,SAAUpsC,GACxB,MAAM,IAAIwG,MAAM,qCAGpBmd,EAAQ0oB,IAAM,WAAc,MAAO,KACnC1oB,EAAQ2oB,MAAQ,SAAUva,GACtB,MAAM,IAAIvrB,MAAM,mCAEpBmd,EAAQ4oB,MAAQ,WAAa,OAAO,I,+CCrLpC,MACMC,EAAW,qEAKG,IAAU7hC,MAAM,GACvB,IAAUA,KAAK,GAChB,IAAUA,KAAK,GACf,IAAUA,KAAK,GACP,IAAUA,KAAK,uBAChB,IAAUA,KAAK,sE,WCb3B,MCIDlJ,EAAS,I,KAAI,GDJI,0BCMhB,IAAIgrC,EAUX,SAASC,EAAkBpnC,EAAOqnC,GAC9BrnC,EAAQ,mBAASA,GACjB,IAAI1C,EAAS,GACTnD,EAAI,EAER,KAAOA,EAAI6F,EAAMjD,QAAQ,CACrB,IAAIvC,EAAIwF,EAAM7F,KAEd,GAAIK,GAAK,GAAM,EAAG,CACd8C,EAAOE,KAAKhD,GACZ,SAGJ,IAAI8sC,EAAc,KACdC,EAAe,KAEnB,GAAmB,MAAV,IAAJ/sC,GACD8sC,EAAc,EACdC,EAAe,SAGd,GAAmB,MAAV,IAAJ/sC,GACN8sC,EAAc,EACdC,EAAe,SAGd,IAAmB,MAAV,IAAJ/sC,GAIL,CACD,IAAK6sC,EAAc,CACf,GAAmB,MAAV,IAAJ7sC,GACD,MAAM,IAAI0G,MAAM,4DAEpB,MAAM,IAAIA,MAAM,8CAEpB,SAVAomC,EAAc,EACdC,EAAe,MAYnB,GAAIptC,EAAImtC,EAActnC,EAAMjD,OAAQ,CAChC,IAAKsqC,EACD,MAAM,IAAInmC,MAAM,yCAGpB,KAAO/G,EAAI6F,EAAMjD,QACTiD,EAAM7F,IAAM,GAAM,EADDA,KAKzB,SAGJ,IAAIuR,EAAMlR,GAAM,GAAM,EAAI8sC,EAAc,GAAM,EAC9C,IAAK,IAAIr+B,EAAI,EAAGA,EAAIq+B,EAAar+B,IAAK,CAClC,IAAIu+B,EAAWxnC,EAAM7F,GAErB,GAAyB,MAAT,IAAXqtC,GAA0B,CAC3B97B,EAAM,KACN,MAGJA,EAAOA,GAAO,EAAiB,GAAX87B,EACpBrtC,IAEJ,GAAY,OAARuR,EAOJ,GAAIA,GAAO67B,GACP,IAAKF,EACD,MAAM,IAAInmC,MAAM,6CAKxB,GAAIwK,EAAM,SACN,IAAK27B,EACD,MAAM,IAAInmC,MAAM,iDAKxB,GAAIwK,GAAO,OAAUA,GAAO,OACxB,IAAK27B,EACD,MAAM,IAAInmC,MAAM,qDAIxB5D,EAAOE,KAAKkO,QA1BR,IAAK27B,EACD,MAAM,IAAInmC,MAAM,yDA2B5B,OAAO5D,EAGJ,SAASonB,EAAY7c,EAAK7G,EAAOmmC,EAAyBrpB,SACzD9c,GAAQmmC,EAAyBrpB,UACjC3hB,EAAOsrC,iBACP5/B,EAAMA,EAAI5G,UAAUD,IAExB,IAAI1D,EAAS,GACb,IAAK,IAAInD,EAAI,EAAGA,EAAI0N,EAAI9K,OAAQ5C,IAAK,CACjC,IAAIK,EAAIqN,EAAII,WAAW9N,GACvB,GAAIK,EAAI,IACJ8C,EAAOE,KAAKhD,QAEX,GAAIA,EAAI,KACT8C,EAAOE,KAAMhD,GAAK,EAAK,KACvB8C,EAAOE,KAAU,GAAJhD,EAAY,UAExB,GAAoB,QAAX,MAAJA,GAAuB,CAC7BL,IACA,IAAI8mB,EAAKpZ,EAAII,WAAW9N,GACxB,GAAIA,GAAK0N,EAAI9K,QAA4B,QAAZ,MAALkkB,GACpB,MAAM,IAAI/f,MAAM,wBAGpB1G,EAAI,QAAgB,KAAJA,IAAe,KAAY,KAALymB,GACtC3jB,EAAOE,KAAMhD,GAAK,GAAM,KACxB8C,EAAOE,KAAOhD,GAAK,GAAM,GAAQ,KACjC8C,EAAOE,KAAOhD,GAAK,EAAK,GAAQ,KAChC8C,EAAOE,KAAU,GAAJhD,EAAY,UAGzB8C,EAAOE,KAAMhD,GAAK,GAAM,KACxB8C,EAAOE,KAAOhD,GAAK,EAAK,GAAQ,KAChC8C,EAAOE,KAAU,GAAJhD,EAAY,KAGjC,OAAO,mBAAS8C,GAGpB,SAASoqC,EAAWtsC,GAChB,IAAIwC,EAAO,OAASxC,EAAMsH,SAAS,IACnC,MAAO,MAAQ9E,EAAIF,UAAUE,EAAIb,OAAS,GAEvC,SAAS4qC,EAAqB3nC,EAAOqnC,GACxC,MAAO,IAAMD,EAAkBpnC,EAAOqnC,GAAclpC,IAAKwwB,IACrD,GAAIA,EAAY,IAAK,CACjB,OAAQA,GACJ,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,MACf,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,MAChB,KAAK,GAAI,MAAO,OAEpB,GAAIA,GAAa,IAAMA,EAAY,IAC/B,OAAOvtB,OAAOC,aAAastB,GAGnC,OAAIA,GAAa,MACN+Y,EAAW/Y,GAGf+Y,EAAyC,QADhD/Y,GAAa,QACoB,GAAM,OAAmB+Y,EAAiC,OAAT,KAAZ/Y,MACvExtB,KAAK,IAAM,IAEX,SAASymC,EAAc/Y,GAC1B,OAAOA,EAAW1wB,IAAKwwB,GACfA,GAAa,MACNvtB,OAAOC,aAAastB,IAE/BA,GAAa,MACNvtB,OAAOC,aAA4C,OAA5BstB,GAAa,GAAM,MAAyC,OAAT,KAAZA,MACtExtB,KAAK,IAEL,SAAS+iB,EAAalkB,EAAOqnC,GAChC,OAAOO,EAAcR,EAAkBpnC,EAAOqnC,IAE3C,SAASQ,EAAiBhgC,EAAK7G,EAAOmmC,EAAyBrpB,SAClE,OAAOspB,EAAkB1iB,EAAY7c,EAAK7G,ICzLvC,SAAS8mC,EAAoBC,GAEhC,IAAI/nC,EAAQ0kB,EAAYqjB,GAExB,GAAI/nC,EAAMjD,OAAS,GACf,MAAM,IAAImE,MAAM,6CAGpB,OAAO,kBAAQ,iBAAO,CAAClB,EAAOknC,IAAW3qC,MAAM,EAAG,KAE/C,SAASyrC,EAAmBhoC,GAC/B,IAAIb,EAAO,mBAASa,GAEpB,GAAoB,KAAhBb,EAAKpC,OACL,MAAM,IAAImE,MAAM,uCAEpB,GAAiB,IAAb/B,EAAK,IACL,MAAM,IAAI+B,MAAM,+CAGpB,IAAInE,EAAS,GACb,KAA4B,IAArBoC,EAAKpC,EAAS,IACjBA,IAGJ,OAAOmnB,EAAa/kB,EAAK5C,MAAM,EAAGQ,ICjBtC,SAASkrC,EAAY9oC,EAAM+oC,GAClBA,IACDA,EAAO,SAAU9sC,GAAS,MAAO,CAAC2C,SAAS3C,EAAO,OAEtD,IAAImP,EAAK,EACLjN,EAAS,GAMb,OALA6B,EAAK6d,MAAM,KAAKzd,QAAS4oC,IACrB,IAAIC,EAAQD,EAAKnrB,MAAM,KACvBzS,GAAMxM,SAASqqC,EAAM,GAAI,IACzB9qC,EAAOiN,GAAM29B,EAAKE,EAAM,MAErB9qC,EAEX,SAAS+qC,EAAiBlpC,GACtB,IAAI+M,EAAK,EACT,OAAO/M,EAAK6d,MAAM,KAAK7e,IAAKjB,IACxB,IAAIkrC,EAAQlrC,EAAE8f,MAAM,KASpB,OARqB,IAAjBorB,EAAMrrC,OACNqrC,EAAM,GAAK,IAEO,KAAbA,EAAM,KACXA,EAAM,GAAK,KAIR,CAAEhuC,EAFA8R,EAAKnO,SAASqqC,EAAM,GAAI,IAEjBvxB,EADhB3K,EAAKnO,SAASqqC,EAAM,GAAI,OAIhC,SAASE,EAASltC,EAAOmtC,GACrB,IAAIh+B,EAAK,EACT,IAAK,IAAIpQ,EAAI,EAAGA,EAAIouC,EAAOxrC,OAAQ5C,IAAK,CACpC,IAAIquC,EAAQD,EAAOpuC,GAEnB,GAAIiB,IADJmP,GAAMi+B,EAAMpuC,IACOgB,GAASmP,EAAKi+B,EAAM3xB,IAAOzb,EAAQmP,IAAOi+B,EAAM/tC,GAAK,IAAQ,EAAG,CAC/E,GAAI+tC,EAAM7gC,IAAsC,IAAjC6gC,EAAM7gC,EAAE+f,QAAQtsB,EAAQmP,GACnC,SAEJ,OAAOi+B,GAGf,OAAO,MF7CX,SAAWrB,GACPA,EAAkC,QAAI,GACtCA,EAA8B,IAAI,MAClCA,EAA8B,IAAI,MAClCA,EAA+B,KAAI,OACnCA,EAA+B,KAAI,OALvC,CAMGA,IAA6BA,EAA2B,KEyC3D,MAAMsB,EAAmBJ,EAAiB,g8CAEpCK,EAAkB,sDAAsD1rB,MAAM,KAAK7e,IAAKjB,GAAMa,SAASb,EAAG,KAC1GyrC,EAAmB,CACrB,CAAE9xB,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,IACnB,CAAEyc,EAAG,GAAI3a,EAAG,GAAIyL,EAAG,CAAC,IAAKvN,EAAG,KAC5B,CAAEyc,EAAG,GAAI3a,EAAG,EAAGyL,EAAG,CAAC,IAAKvN,EAAG,GAAIK,EAAG,GAClC,CAAEoc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,EAAGyL,EAAG,CAAC,EAAG,EAAG,GAAIvN,EAAG,GAAIK,EAAG,GACvC,CAAEoc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,EAAGyL,EAAG,CAAC,GAAI,GAAI,IAAKvN,EAAG,GAAIK,EAAG,GAC1C,CAAEoc,EAAG,GAAI3a,EAAG,GAAIyL,EAAG,CAAC,IAAKvN,EAAG,KAC5B,CAAEyc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,IACnB,CAAEyc,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,IACnB,CAAEyc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,EAAGyL,EAAG,CAAC,IAAKvN,EAAG,GAAIK,EAAG,GAClC,CAAEoc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,GAAIK,EAAG,GACzB,CAAEoc,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,IACnB,CAAEyc,EAAG,IAAK3a,EAAG,EAAG9B,EAAG,KAAMK,EAAG,GAC5B,CAAEoc,EAAG,GAAI3a,EAAG,EAAG9B,EAAG,IAAKK,EAAG,GAC1B,CAAEoc,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,KACnB,CAAEyc,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,KACnB,CAAEyc,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,OACnB,CAAEyc,EAAG,GAAI3a,EAAG,GAAI9B,EAAG,MACnB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,OACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAAKvN,EAAG,IACxD,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,EAAG,EAAG,EAAG,IAAKvN,EAAG,IAC1C,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IAAKvN,EAAG,IACnD,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQ9B,EAAG,IACxB,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,IAAKvN,EAAG,IACjC,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,IAAKvN,EAAG,IACjC,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,IAAKvN,EAAG,IACjC,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,IAAKvN,EAAG,IACjC,CAAEyc,EAAG,GAAI3a,GAAI,OAAQyL,EAAG,CAAC,IAAKvN,EAAG,KAE/BwuC,EAAoBX,EAAY,yfAChCY,EAAoBZ,EAAY,0dAChCa,EAAoBb,EAAY,03DArGtC,SAAgB9oC,GACZ,GAAKA,EAAKpC,OAAS,GAAO,EACtB,MAAM,IAAImE,MAAM,YAEpB,IAAI5D,EAAS,GACb,IAAK,IAAInD,EAAI,EAAGA,EAAIgF,EAAKpC,OAAQ5C,GAAK,EAClCmD,EAAOE,KAAKO,SAASoB,EAAKzB,UAAUvD,EAAGA,EAAI,GAAI,KAEnD,OAAOmD,KA8FLyrC,EAAiBV,EAAiB,2LAgCjC,SAASW,EAAS5tC,GAIrB,GAAIA,EAAMwD,MAAM,kBAAoBxD,EAAM2B,QAAU,GAChD,OAAO3B,EAAM6D,cAGjB,IAAIgqC,EAAQpB,EAAiBzsC,GAvCjC,IAAiBotB,IAwCGygB,EAAM9qC,IAAK+D,IAEvB,GAAIwmC,EAAgBhhB,QAAQxlB,IAAS,EACjC,MAAO,GAEX,GAAIA,GAAQ,OAAUA,GAAQ,MAC1B,MAAO,GAGX,IAAIgnC,EAxCL,SAA0BC,GAC7B,IAAIX,EAAQF,EAASa,EAAWR,GAChC,GAAIH,EACA,MAAO,CAACW,EAAYX,EAAMtsC,GAE9B,IAAI+sC,EAAQL,EAAkBO,GAC9B,GAAIF,EACA,OAAOA,EAEX,IAAItxB,EAAQkxB,EAAkBM,GAC9B,GAAIxxB,EACA,MAAO,CAACwxB,EAAYxxB,EAAM,IAE9B,IAAIyxB,EAAUN,EAAkBK,GAChC,OAAIC,GAGG,KAuBgBC,CAAiBnnC,GACpC,OAAIgnC,GAIG,CAAChnC,MAGZ+mC,EAAQpB,EAAiBD,EAjBzBqB,EAvCOzgB,EAAOnqB,OAAO,CAACC,EAAOlD,KACzBA,EAAMmE,QAASnE,IAAYkD,EAAMd,KAAKpC,KAC/BkD,GACR,KAqD4C6oC,EAAyBmC,OAElE/pC,QAAS2C,IACX,GAhCD,SAAyBinC,GAC5B,QAASb,EAASa,EAAWJ,GA+BrBQ,CAAgBrnC,GAChB,MAAM,IAAIhB,MAAM,oCAIxB+nC,EAAM1pC,QAAS2C,IACX,GA5DD,SAA0BinC,GAC7B,QAASb,EAASa,EAAWV,GA2DrBe,CAAiBtnC,GACjB,MAAM,IAAIhB,MAAM,oCAIxB,IAAIxG,EAAOktC,EAAcqB,GAEzB,GAA6B,MAAzBvuC,EAAKgD,UAAU,EAAG,IAAuC,OAAzBhD,EAAKgD,UAAU,EAAG,IAAmD,MAApChD,EAAKgD,UAAUhD,EAAKqC,OAAS,GAC9F,MAAM,IAAImE,MAAM,kBAGpB,GAAIxG,EAAKqC,OAAS,GACd,MAAM,IAAImE,MAAM,YAEpB,OAAOxG,ECzLX,yY,6ECGO,SAAS+uC,EAAUtqC,GACtB,MAAO,KAAO,IAAKuqC,WAAW,mBAASvqC,ICD3C,SAASwqC,EAAgBvuC,GACrB,IAAIkC,EAAS,GACb,KAAOlC,GACHkC,EAAOC,QAAgB,IAARnC,GACfA,IAAU,EAEd,OAAOkC,EAmCJ,SAASssC,EAAO/tC,GACnB,OAAO,kBA3BX,SAASguC,EAAQhuC,GACb,GAAIY,MAAM2L,QAAQvM,GAAS,CACvB,IAAIiuC,EAAU,GAId,GAHAjuC,EAAO0D,SAAQ,SAAUwqC,GACrBD,EAAUA,EAAQ9rC,OAAO6rC,EAAQE,OAEjCD,EAAQ/sC,QAAU,GAElB,OADA+sC,EAAQvsC,QAAQ,IAAOusC,EAAQ/sC,QACxB+sC,EAEX,IAAI/sC,EAAS4sC,EAAgBG,EAAQ/sC,QAErC,OADAA,EAAOQ,QAAQ,IAAOR,EAAOA,QACtBA,EAAOiB,OAAO8rC,GAEzB,IAAI3qC,EAAO1C,MAAMV,UAAUQ,MAAMjC,KAAK,mBAASuB,IAC/C,GAAoB,IAAhBsD,EAAKpC,QAAgBoC,EAAK,IAAM,IAChC,OAAOA,EAEN,GAAIA,EAAKpC,QAAU,GAEpB,OADAoC,EAAK5B,QAAQ,IAAO4B,EAAKpC,QAClBoC,EAEX,IAAIpC,EAAS4sC,EAAgBxqC,EAAKpC,QAElC,OADAA,EAAOQ,QAAQ,IAAOR,EAAOA,QACtBA,EAAOiB,OAAOmB,GAGN0qC,CAAQhuC,I,WC7C3B,uLASA,MAAMM,EAAS,IAAI,ICTI,0BDUvB,SAAS6tC,EAAmB/jB,GACnB,sBAAYA,EAAS,KACtB9pB,EAAO2B,mBAAmB,kBAAmB,UAAWmoB,GAG5D,IAAIgkB,GADJhkB,EAAUA,EAAQhnB,eACEvB,UAAU,GAAGsf,MAAM,IACnCktB,EAAS,IAAIvtC,WAAW,IAC5B,IAAK,IAAIxC,EAAI,EAAGA,EAAI,GAAIA,IACpB+vC,EAAO/vC,GAAK8vC,EAAM9vC,GAAG8N,WAAW,GAEpCiiC,EAAS,mBAAST,EAAUS,IAC5B,IAAK,IAAI/vC,EAAI,EAAGA,EAAI,GAAIA,GAAK,EACpB+vC,EAAO/vC,GAAK,IAAM,GAAM,IACzB8vC,EAAM9vC,GAAK8vC,EAAM9vC,GAAG6iC,gBAEF,GAAjBkN,EAAO/vC,GAAK,KAAc,IAC3B8vC,EAAM9vC,EAAI,GAAK8vC,EAAM9vC,EAAI,GAAG6iC,eAGpC,MAAO,KAAOiN,EAAM9oC,KAAK,IAY7B,IAAIgpC,EAAa,GACjB,IAAK,IAAIhwC,EAAI,EAAGA,EAAI,GAAIA,IACpBgwC,EAAW/oC,OAAOjH,IAAMiH,OAAOjH,GAEnC,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACpBgwC,EAAW/oC,OAAOC,aAAa,GAAKlH,IAAMiH,OAAO,GAAKjH,GAG1D,IAAIiwC,EAAarrC,KAAKC,OAhBPqU,EADU,iBAEjBtU,KAAKsrC,MACEtrC,KAAKsrC,MAAMh3B,GAEftU,KAAK6C,IAAIyR,GAAKtU,KAAKurC,OAJ9B,IAAej3B,EAiBf,SAASk3B,EAAatkB,GAElBA,GADAA,EAAUA,EAAQ+W,eACAt/B,UAAU,GAAKuoB,EAAQvoB,UAAU,EAAG,GAAK,KAC3D,IAAI8sC,EAAW,GAKf,IAJAvkB,EAAQjJ,MAAM,IAAIzd,SAAQ,SAAU/E,GAChCgwC,GAAYL,EAAW3vC,MAGpBgwC,EAASztC,QAAUqtC,GAAY,CAClC,IAAIpqB,EAAQwqB,EAAS9sC,UAAU,EAAG0sC,GAClCI,EAAWzsC,SAASiiB,EAAO,IAAM,GAAKwqB,EAAS9sC,UAAUsiB,EAAMjjB,QAEnE,IAAI0tC,EAAWrpC,OAAO,GAAMrD,SAASysC,EAAU,IAAM,IACrD,KAAOC,EAAS1tC,OAAS,GACrB0tC,EAAW,IAAMA,EAErB,OAAOA,EAGJ,SAASvkB,EAAWD,GACvB,IAAI3oB,EAAS,KAIb,GAHyB,iBAAd,GACPnB,EAAO2B,mBAAmB,kBAAmB,UAAWmoB,GAExDA,EAAQrnB,MAAM,0BAEkB,OAA5BqnB,EAAQvoB,UAAU,EAAG,KACrBuoB,EAAU,KAAOA,GAErB3oB,EAAS0sC,EAAmB/jB,GAExBA,EAAQrnB,MAAM,kCAAoCtB,IAAW2oB,GAC7D9pB,EAAO2B,mBAAmB,uBAAwB,UAAWmoB,QAIhE,GAAIA,EAAQrnB,MAAM,kCAAmC,CAMtD,IAJIqnB,EAAQvoB,UAAU,EAAG,KAAO6sC,EAAatkB,IACzC9pB,EAAO2B,mBAAmB,oBAAqB,UAAWmoB,GAE9D3oB,EAAS,IAAK,KAAG2oB,EAAQvoB,UAAU,GAAI,IAAKgF,SAAS,IAC9CpF,EAAOP,OAAS,IACnBO,EAAS,IAAMA,EAEnBA,EAAS0sC,EAAmB,KAAO1sC,QAGnCnB,EAAO2B,mBAAmB,kBAAmB,UAAWmoB,GAE5D,OAAO3oB,EAEJ,SAASotC,EAAUzkB,GACtB,IAEI,OADAC,EAAWD,IACJ,EAEX,MAAOvlB,IACP,OAAO,EAEJ,SAASiqC,EAAe1kB,GAC3B,IAAI2kB,EAAS,IAAK,KAAG1kB,EAAWD,GAASvoB,UAAU,GAAI,IAAKgF,SAAS,IAAIs6B,cACzE,KAAO4N,EAAO7tC,OAAS,IACnB6tC,EAAS,IAAMA,EAEnB,MAAO,KAAOL,EAAa,OAASK,GAAUA,EAG3C,SAASC,EAAmBC,GAC/B,IAAIzlC,EAAO,KACX,IACIA,EAAO6gB,EAAW4kB,EAAYzlC,MAElC,MAAO3E,GACHvE,EAAO2B,mBAAmB,uBAAwB,cAAegtC,GAErE,IAAIlhB,EAAQ,qBAAW,mBAAS,IAAUvkB,KAAKylC,EAAYlhB,OAAOjsB,gBAClE,OAAOuoB,EAAW,uBAAaujB,EAAUG,EAAO,CAACvkC,EAAMukB,KAAU","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WalletConnectUtils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WalletConnectUtils\"] = factory();\n\telse\n\t\troot[\"WalletConnectUtils\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        let args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (value.length == null) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        let v = value[i];\n        if (v < 0 || v >= 256 || (v % 1)) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        let result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value /= 256;\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        let result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    let objects = items.map(item => arrayify(item));\n    let length = objects.reduce((accum, item) => (accum + item.length), 0);\n    let result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    let result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0x0f] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    let trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    let result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        if (bytes.length !== 65) {\n            logger.throwArgumentError(\"invalid signature string; must be 65 bytes\", \"signature\", signature);\n        }\n        // Get the r and s\n        result.r = hexlify(bytes.slice(0, 32));\n        result.s = hexlify(bytes.slice(32, 64));\n        // Reduce v to the canonical 27 or 28\n        result.v = bytes[64];\n        if (result.v !== 27 && result.v !== 28) {\n            result.v = 27 + (result.v % 2);\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = (result.v - 27);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // Normalize v into a canonical 27 or 28\n        if (result.v != null && !(result.v == 27 || result.v == 28)) {\n            result.v = 27 + (result.v % 2);\n        }\n        // Populate a missing v or recoveryParam if possible\n        if (result.recoveryParam == null && result.v != null) {\n            result.recoveryParam = 1 - (result.v % 2);\n        }\n        else if (result.recoveryParam != null && result.v == null) {\n            result.v = 27 + result.recoveryParam;\n        }\n        else if (result.recoveryParam != null && result.v != null) {\n            if (result.v !== 27 + result.recoveryParam) {\n                logger.throwArgumentError(\"signature v mismatch recoveryParam\", \"signature\", signature);\n            }\n        }\n        // Make sure r and s are padded properly\n        if (result.r != null) {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s != null) {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            result._vs = hexZeroPad(result._vs, 32);\n            if (result._vs.length > 66) {\n                logger.throwArgumentError(\"signature _vs overflow\", \"signature\", signature);\n            }\n            let vs = arrayify(result._vs);\n            let recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            let v = 27 + result.recoveryParam;\n            // Use _vs to compute s\n            vs[0] &= 0x7f;\n            let s = hexlify(vs);\n            // Check _vs aggress with other parameters\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n            if (result.v == null) {\n                result.v = v;\n            }\n            else if (result.v !== v) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n            if (recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // After all populating, both v and recoveryParam are still missing...\n        if (result.v == null && result.recoveryParam == null) {\n            logger.throwArgumentError(\"signature requires at least one of recoveryParam, v or _vs\", \"signature\", signature);\n        }\n        // Check for canonical v\n        if (result.v !== 27 && result.v !== 28) {\n            logger.throwArgumentError(\"signature v not canonical\", \"signature\", signature);\n        }\n        // Check that r and s are in range\n        if (result.r.length > 66 || result.s.length > 66) {\n            logger.throwArgumentError(\"signature overflow r or s\", \"signature\", signature);\n        }\n        if (result._vs == null) {\n            let vs = arrayify(result.s);\n            if (vs[0] >= 128) {\n                logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n            }\n            if (result.recoveryParam) {\n                vs[0] |= 0x80;\n            }\n            result._vs = hexlify(vs);\n        }\n    }\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n","export const version = \"bytes/5.0.0-beta.132\";\n","export const version = \"logger/5.0.0-beta.131\";\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warn: 3, error: 4, off: 5 };\nlet LogLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        let missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nlet _normalizeError = _checkNormalize();\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    setLogLevel(logLevel) {\n        let level = LogLevels[logLevel];\n        if (level == null) {\n            this.warn(\"invliad log level - \" + logLevel);\n            return;\n        }\n        LogLevel = level;\n    }\n    _log(logLevel, args) {\n        if (LogLevel > LogLevels[logLevel]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        if (_censorErrors) {\n            return new Error(\"unknown error\");\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        let messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            try {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(\"version=\" + this.version);\n        let reason = message;\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        let error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n}\nLogger.errors = {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    UNKNOWN_ERROR: \"UNKNOWN_ERROR\",\n    // Not Implemented\n    NOT_IMPLEMENTED: \"NOT_IMPLEMENTED\",\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION: \"UNSUPPORTED_OPERATION\",\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    NETWORK_ERROR: \"NETWORK_ERROR\",\n    // Some sort of bad response from the server\n    SERVER_ERROR: \"SERVER_ERROR\",\n    // Timeout\n    TIMEOUT: \"TIMEOUT\",\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    BUFFER_OVERRUN: \"BUFFER_OVERRUN\",\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT: \"NUMERIC_FAULT\",\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW: \"MISSING_NEW\",\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT: \"INVALID_ARGUMENT\",\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT: \"MISSING_ARGUMENT\",\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT: \"UNEXPECTED_ARGUMENT\",\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION: \"CALL_EXCEPTION\",\n    // Insufficien funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS: \"INSUFFICIENT_FUNDS\",\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED: \"NONCE_EXPIRED\",\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED: \"REPLACEMENT_UNDERPRICED\",\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT: \"UNPREDICTABLE_GAS_LIMIT\",\n};\nLogger.levels = {\n    DEBUG: \"DEBUG\",\n    INFO: \"INFO\",\n    WARNING: \"WARNING\",\n    ERROR: \"ERROR\",\n    OFF: \"OFF\"\n};\n","export const version = \"bignumber/5.0.0-beta.133\";\n","\"use strict\";\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardles.\n *\n */\nimport { BN } from \"bn.js\";\nimport { hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst _constructorGuard = {};\nconst MAX_SAFE = 0x1fffffffffffff;\nexport function isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof (value) === \"bigint\") ||\n        isBytes(value));\n}\nexport class BigNumber {\n    constructor(constructorGuard, hex) {\n        logger.checkNew(new.target, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call consturtor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    fromTwos(value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n    toTwos(value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n    abs() {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n    add(other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n    sub(other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n    div(other) {\n        let o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division by zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n    mul(other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n    mod(other) {\n        return toBigNumber(toBN(this).mod(toBN(other)));\n    }\n    pow(other) {\n        return toBigNumber(toBN(this).pow(toBN(other)));\n    }\n    maskn(value) {\n        return toBigNumber(toBN(this).maskn(value));\n    }\n    eq(other) {\n        return toBN(this).eq(toBN(other));\n    }\n    lt(other) {\n        return toBN(this).lt(toBN(other));\n    }\n    lte(other) {\n        return toBN(this).lte(toBN(other));\n    }\n    gt(other) {\n        return toBN(this).gt(toBN(other));\n    }\n    gte(other) {\n        return toBN(this).gte(toBN(other));\n    }\n    isZero() {\n        return toBN(this).isZero();\n    }\n    toNumber() {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n    toString() {\n        // Lots of people expect this, which we do not support, so check\n        if (arguments.length !== 0) {\n            logger.throwError(\"bigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, {});\n        }\n        return toBN(this).toString(10);\n    }\n    toHexString() {\n        return this._hex;\n    }\n    static from(value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/-?0x[0-9a-f]+/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        if (typeof (value) === \"bigint\") {\n            return BigNumber.from(value.toString());\n        }\n        if (isBytes(value)) {\n            return BigNumber.from(hexlify(value));\n        }\n        if (value._hex && isHexString(value._hex)) {\n            return BigNumber.from(value._hex);\n        }\n        if (value.toHexString) {\n            value = value.toHexString();\n            if (typeof (value) === \"string\") {\n                return BigNumber.from(value);\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n    static isBigNumber(value) {\n        return !!(value && value._isBigNumber);\n    }\n}\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have mulitple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    let hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    let params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    let params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    let multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    let negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    let whole = value.div(multiplier).toString();\n    value = whole + \".\" + fraction;\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    let multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.,]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    if (multiplier.length - 1 === 0) {\n        return BigNumber.from(value);\n    }\n    // Is it negative?\n    let negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    let comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Prevent underflow\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    let wholeValue = BigNumber.from(whole);\n    let fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else if (value != null) {\n                let match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            let check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        let a = parseFixed(this._value, this.format.decimals);\n        let b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        let a = parseFixed(this._value, this.format.decimals);\n        let b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        let a = parseFixed(this._value, this.format.decimals);\n        let b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        let a = parseFixed(this._value, this.format.decimals);\n        let b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal cound\", \"decimals\", decimals);\n        }\n        // If we are already in range, we're done\n        let comps = this.toString().split(\".\");\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        // Bump the value up by the 0.00...0005\n        let bump = \"0.\" + zeros.substring(0, decimals) + \"5\";\n        comps = this.addUnsafe(FixedNumber.fromString(bump, this.format))._value.split(\".\");\n        // Now it is safe to truncate\n        return FixedNumber.fromString(comps[0] + \".\" + comps[1].substring(0, decimals));\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        let hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        let fixedFormat = FixedFormat.from(format);\n        let numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        let decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        let fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        let hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        let decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\n","export { BigNumber } from \"./bignumber\";\nexport { formatFixed, FixedFormat, FixedNumber, parseFixed } from \"./fixednumber\";\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\r\n *\r\n * @version 0.5.7\r\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\r\n * @copyright Chen, Yi-Cyuan 2015-2016\r\n * @license MIT\r\n */\r\n/*jslint bitwise: true */\r\n(function () {\r\n  'use strict';\r\n\r\n  var root = typeof window === 'object' ? window : {};\r\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\r\n  if (NODE_JS) {\r\n    root = global;\r\n  }\r\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\r\n  var HEX_CHARS = '0123456789abcdef'.split('');\r\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\r\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\r\n  var PADDING = [6, 1536, 393216, 100663296];\r\n  var SHIFT = [0, 8, 16, 24];\r\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\r\n            0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\r\n            2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\r\n            2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\r\n            2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\r\n  var BITS = [224, 256, 384, 512];\r\n  var SHAKE_BITS = [128, 256];\r\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array'];\r\n\r\n  var createOutputMethod = function (bits, padding, outputType) {\r\n    return function (message) {\r\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createShakeOutputMethod = function (bits, padding, outputType) {\r\n    return function (message, outputBits) {\r\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\r\n    };\r\n  };\r\n\r\n  var createMethod = function (bits, padding) {\r\n    var method = createOutputMethod(bits, padding, 'hex');\r\n    method.create = function () {\r\n      return new Keccak(bits, padding, bits);\r\n    };\r\n    method.update = function (message) {\r\n      return method.create().update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var createShakeMethod = function (bits, padding) {\r\n    var method = createShakeOutputMethod(bits, padding, 'hex');\r\n    method.create = function (outputBits) {\r\n      return new Keccak(bits, padding, outputBits);\r\n    };\r\n    method.update = function (message, outputBits) {\r\n      return method.create(outputBits).update(message);\r\n    };\r\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\r\n      var type = OUTPUT_TYPES[i];\r\n      method[type] = createShakeOutputMethod(bits, padding, type);\r\n    }\r\n    return method;\r\n  };\r\n\r\n  var algorithms = [\r\n    {name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod},\r\n    {name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod}\r\n  ];\r\n\r\n  var methods = {}, methodNames = [];\r\n\r\n  for (var i = 0; i < algorithms.length; ++i) {\r\n    var algorithm = algorithms[i];\r\n    var bits  = algorithm.bits;\r\n    for (var j = 0; j < bits.length; ++j) {\r\n      var methodName = algorithm.name +'_' + bits[j];\r\n      methodNames.push(methodName);\r\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\r\n    }\r\n  }\r\n\r\n  function Keccak(bits, padding, outputBits) {\r\n    this.blocks = [];\r\n    this.s = [];\r\n    this.padding = padding;\r\n    this.outputBits = outputBits;\r\n    this.reset = true;\r\n    this.block = 0;\r\n    this.start = 0;\r\n    this.blockCount = (1600 - (bits << 1)) >> 5;\r\n    this.byteCount = this.blockCount << 2;\r\n    this.outputBlocks = outputBits >> 5;\r\n    this.extraBytes = (outputBits & 31) >> 3;\r\n\r\n    for (var i = 0; i < 50; ++i) {\r\n      this.s[i] = 0;\r\n    }\r\n  }\r\n\r\n  Keccak.prototype.update = function (message) {\r\n    var notString = typeof message !== 'string';\r\n    if (notString && message.constructor === ArrayBuffer) {\r\n      message = new Uint8Array(message);\r\n    }\r\n    var length = message.length, blocks = this.blocks, byteCount = this.byteCount,\r\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\r\n\r\n    while (index < length) {\r\n      if (this.reset) {\r\n        this.reset = false;\r\n        blocks[0] = this.block;\r\n        for (i = 1; i < blockCount + 1; ++i) {\r\n          blocks[i] = 0;\r\n        }\r\n      }\r\n      if (notString) {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\r\n        }\r\n      } else {\r\n        for (i = this.start; index < length && i < byteCount; ++index) {\r\n          code = message.charCodeAt(index);\r\n          if (code < 0x80) {\r\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\r\n          } else if (code < 0x800) {\r\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else if (code < 0xd800 || code >= 0xe000) {\r\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          } else {\r\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\r\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\r\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\r\n          }\r\n        }\r\n      }\r\n      this.lastByteIndex = i;\r\n      if (i >= byteCount) {\r\n        this.start = i - byteCount;\r\n        this.block = blocks[blockCount];\r\n        for (i = 0; i < blockCount; ++i) {\r\n          s[i] ^= blocks[i];\r\n        }\r\n        f(s);\r\n        this.reset = true;\r\n      } else {\r\n        this.start = i;\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n\r\n  Keccak.prototype.finalize = function () {\r\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\r\n    blocks[i >> 2] |= this.padding[i & 3];\r\n    if (this.lastByteIndex === this.byteCount) {\r\n      blocks[0] = blocks[blockCount];\r\n      for (i = 1; i < blockCount + 1; ++i) {\r\n        blocks[i] = 0;\r\n      }\r\n    }\r\n    blocks[blockCount - 1] |= 0x80000000;\r\n    for (i = 0; i < blockCount; ++i) {\r\n      s[i] ^= blocks[i];\r\n    }\r\n    f(s);\r\n  };\r\n\r\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var hex = '', block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        block = s[i];\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\r\n               HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\r\n               HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\r\n               HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n        i = 0;\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\r\n      }\r\n      if (extraBytes > 1) {\r\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\r\n      }\r\n      if (extraBytes > 2) {\r\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\r\n      }\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  Keccak.prototype.arrayBuffer = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var bytes = this.outputBits >> 3;\r\n    var buffer;\r\n    if (extraBytes) {\r\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\r\n    } else {\r\n      buffer = new ArrayBuffer(bytes);\r\n    }\r\n    var array = new Uint32Array(buffer);\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        array[j] = s[i];\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      array[i] = s[i];\r\n      buffer = buffer.slice(0, bytes);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\r\n\r\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\r\n    this.finalize();\r\n\r\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\r\n        extraBytes = this.extraBytes, i = 0, j = 0;\r\n    var array = [], offset, block;\r\n    while (j < outputBlocks) {\r\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\r\n        offset = j << 2;\r\n        block = s[i];\r\n        array[offset] = block & 0xFF;\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n        array[offset + 3] = (block >> 24) & 0xFF;\r\n      }\r\n      if (j % blockCount === 0) {\r\n        f(s);\r\n      }\r\n    }\r\n    if (extraBytes) {\r\n      offset = j << 2;\r\n      block = s[i];\r\n      if (extraBytes > 0) {\r\n        array[offset] = block & 0xFF;\r\n      }\r\n      if (extraBytes > 1) {\r\n        array[offset + 1] = (block >> 8) & 0xFF;\r\n      }\r\n      if (extraBytes > 2) {\r\n        array[offset + 2] = (block >> 16) & 0xFF;\r\n      }\r\n    }\r\n    return array;\r\n  };\r\n\r\n  var f = function (s) {\r\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\r\n        b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\r\n        b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\r\n        b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\r\n    for (n = 0; n < 48; n += 2) {\r\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\r\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\r\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\r\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\r\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\r\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\r\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\r\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\r\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\r\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\r\n\r\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\r\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\r\n      s[0] ^= h;\r\n      s[1] ^= l;\r\n      s[10] ^= h;\r\n      s[11] ^= l;\r\n      s[20] ^= h;\r\n      s[21] ^= l;\r\n      s[30] ^= h;\r\n      s[31] ^= l;\r\n      s[40] ^= h;\r\n      s[41] ^= l;\r\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\r\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\r\n      s[2] ^= h;\r\n      s[3] ^= l;\r\n      s[12] ^= h;\r\n      s[13] ^= l;\r\n      s[22] ^= h;\r\n      s[23] ^= l;\r\n      s[32] ^= h;\r\n      s[33] ^= l;\r\n      s[42] ^= h;\r\n      s[43] ^= l;\r\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\r\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\r\n      s[4] ^= h;\r\n      s[5] ^= l;\r\n      s[14] ^= h;\r\n      s[15] ^= l;\r\n      s[24] ^= h;\r\n      s[25] ^= l;\r\n      s[34] ^= h;\r\n      s[35] ^= l;\r\n      s[44] ^= h;\r\n      s[45] ^= l;\r\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\r\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\r\n      s[6] ^= h;\r\n      s[7] ^= l;\r\n      s[16] ^= h;\r\n      s[17] ^= l;\r\n      s[26] ^= h;\r\n      s[27] ^= l;\r\n      s[36] ^= h;\r\n      s[37] ^= l;\r\n      s[46] ^= h;\r\n      s[47] ^= l;\r\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\r\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\r\n      s[8] ^= h;\r\n      s[9] ^= l;\r\n      s[18] ^= h;\r\n      s[19] ^= l;\r\n      s[28] ^= h;\r\n      s[29] ^= l;\r\n      s[38] ^= h;\r\n      s[39] ^= l;\r\n      s[48] ^= h;\r\n      s[49] ^= l;\r\n\r\n      b0 = s[0];\r\n      b1 = s[1];\r\n      b32 = (s[11] << 4) | (s[10] >>> 28);\r\n      b33 = (s[10] << 4) | (s[11] >>> 28);\r\n      b14 = (s[20] << 3) | (s[21] >>> 29);\r\n      b15 = (s[21] << 3) | (s[20] >>> 29);\r\n      b46 = (s[31] << 9) | (s[30] >>> 23);\r\n      b47 = (s[30] << 9) | (s[31] >>> 23);\r\n      b28 = (s[40] << 18) | (s[41] >>> 14);\r\n      b29 = (s[41] << 18) | (s[40] >>> 14);\r\n      b20 = (s[2] << 1) | (s[3] >>> 31);\r\n      b21 = (s[3] << 1) | (s[2] >>> 31);\r\n      b2 = (s[13] << 12) | (s[12] >>> 20);\r\n      b3 = (s[12] << 12) | (s[13] >>> 20);\r\n      b34 = (s[22] << 10) | (s[23] >>> 22);\r\n      b35 = (s[23] << 10) | (s[22] >>> 22);\r\n      b16 = (s[33] << 13) | (s[32] >>> 19);\r\n      b17 = (s[32] << 13) | (s[33] >>> 19);\r\n      b48 = (s[42] << 2) | (s[43] >>> 30);\r\n      b49 = (s[43] << 2) | (s[42] >>> 30);\r\n      b40 = (s[5] << 30) | (s[4] >>> 2);\r\n      b41 = (s[4] << 30) | (s[5] >>> 2);\r\n      b22 = (s[14] << 6) | (s[15] >>> 26);\r\n      b23 = (s[15] << 6) | (s[14] >>> 26);\r\n      b4 = (s[25] << 11) | (s[24] >>> 21);\r\n      b5 = (s[24] << 11) | (s[25] >>> 21);\r\n      b36 = (s[34] << 15) | (s[35] >>> 17);\r\n      b37 = (s[35] << 15) | (s[34] >>> 17);\r\n      b18 = (s[45] << 29) | (s[44] >>> 3);\r\n      b19 = (s[44] << 29) | (s[45] >>> 3);\r\n      b10 = (s[6] << 28) | (s[7] >>> 4);\r\n      b11 = (s[7] << 28) | (s[6] >>> 4);\r\n      b42 = (s[17] << 23) | (s[16] >>> 9);\r\n      b43 = (s[16] << 23) | (s[17] >>> 9);\r\n      b24 = (s[26] << 25) | (s[27] >>> 7);\r\n      b25 = (s[27] << 25) | (s[26] >>> 7);\r\n      b6 = (s[36] << 21) | (s[37] >>> 11);\r\n      b7 = (s[37] << 21) | (s[36] >>> 11);\r\n      b38 = (s[47] << 24) | (s[46] >>> 8);\r\n      b39 = (s[46] << 24) | (s[47] >>> 8);\r\n      b30 = (s[8] << 27) | (s[9] >>> 5);\r\n      b31 = (s[9] << 27) | (s[8] >>> 5);\r\n      b12 = (s[18] << 20) | (s[19] >>> 12);\r\n      b13 = (s[19] << 20) | (s[18] >>> 12);\r\n      b44 = (s[29] << 7) | (s[28] >>> 25);\r\n      b45 = (s[28] << 7) | (s[29] >>> 25);\r\n      b26 = (s[38] << 8) | (s[39] >>> 24);\r\n      b27 = (s[39] << 8) | (s[38] >>> 24);\r\n      b8 = (s[48] << 14) | (s[49] >>> 18);\r\n      b9 = (s[49] << 14) | (s[48] >>> 18);\r\n\r\n      s[0] = b0 ^ (~b2 & b4);\r\n      s[1] = b1 ^ (~b3 & b5);\r\n      s[10] = b10 ^ (~b12 & b14);\r\n      s[11] = b11 ^ (~b13 & b15);\r\n      s[20] = b20 ^ (~b22 & b24);\r\n      s[21] = b21 ^ (~b23 & b25);\r\n      s[30] = b30 ^ (~b32 & b34);\r\n      s[31] = b31 ^ (~b33 & b35);\r\n      s[40] = b40 ^ (~b42 & b44);\r\n      s[41] = b41 ^ (~b43 & b45);\r\n      s[2] = b2 ^ (~b4 & b6);\r\n      s[3] = b3 ^ (~b5 & b7);\r\n      s[12] = b12 ^ (~b14 & b16);\r\n      s[13] = b13 ^ (~b15 & b17);\r\n      s[22] = b22 ^ (~b24 & b26);\r\n      s[23] = b23 ^ (~b25 & b27);\r\n      s[32] = b32 ^ (~b34 & b36);\r\n      s[33] = b33 ^ (~b35 & b37);\r\n      s[42] = b42 ^ (~b44 & b46);\r\n      s[43] = b43 ^ (~b45 & b47);\r\n      s[4] = b4 ^ (~b6 & b8);\r\n      s[5] = b5 ^ (~b7 & b9);\r\n      s[14] = b14 ^ (~b16 & b18);\r\n      s[15] = b15 ^ (~b17 & b19);\r\n      s[24] = b24 ^ (~b26 & b28);\r\n      s[25] = b25 ^ (~b27 & b29);\r\n      s[34] = b34 ^ (~b36 & b38);\r\n      s[35] = b35 ^ (~b37 & b39);\r\n      s[44] = b44 ^ (~b46 & b48);\r\n      s[45] = b45 ^ (~b47 & b49);\r\n      s[6] = b6 ^ (~b8 & b0);\r\n      s[7] = b7 ^ (~b9 & b1);\r\n      s[16] = b16 ^ (~b18 & b10);\r\n      s[17] = b17 ^ (~b19 & b11);\r\n      s[26] = b26 ^ (~b28 & b20);\r\n      s[27] = b27 ^ (~b29 & b21);\r\n      s[36] = b36 ^ (~b38 & b30);\r\n      s[37] = b37 ^ (~b39 & b31);\r\n      s[46] = b46 ^ (~b48 & b40);\r\n      s[47] = b47 ^ (~b49 & b41);\r\n      s[8] = b8 ^ (~b0 & b2);\r\n      s[9] = b9 ^ (~b1 & b3);\r\n      s[18] = b18 ^ (~b10 & b12);\r\n      s[19] = b19 ^ (~b11 & b13);\r\n      s[28] = b28 ^ (~b20 & b22);\r\n      s[29] = b29 ^ (~b21 & b23);\r\n      s[38] = b38 ^ (~b30 & b32);\r\n      s[39] = b39 ^ (~b31 & b33);\r\n      s[48] = b48 ^ (~b40 & b42);\r\n      s[49] = b49 ^ (~b41 & b43);\r\n\r\n      s[0] ^= RC[n];\r\n      s[1] ^= RC[n + 1];\r\n    }\r\n  };\r\n\r\n  if (COMMON_JS) {\r\n    module.exports = methods;\r\n  } else {\r\n    for (var i = 0; i < methodNames.length; ++i) {\r\n      root[methodNames[i]] = methods[methodNames[i]];\r\n    }\r\n  }\r\n})();\r\n","import BigNumber from 'bignumber.js'\nimport {\n  isHexString as _isHexString,\n  hexlify,\n  arrayify\n} from '@ethersproject/bytes'\nimport { getAddress } from '@ethersproject/address'\nimport { toUtf8Bytes, toUtf8String } from '@ethersproject/strings'\n\nimport {\n  ITxData,\n  IClientMeta,\n  IParseURIResult,\n  IRequiredParamsResult,\n  IQueryParamsResult,\n  IJsonRpcSubscription,\n  IJsonRpcRequest,\n  IJsonRpcResponseSuccess,\n  IJsonRpcResponseError,\n  IJsonRpcErrorMessage,\n  IInternalEvent,\n  IWalletConnectSession\n} from '@walletconnect/types'\n\n// -- ArrayBuffer ------------------------------------------ //\n\nexport function convertArrayBufferToBuffer (arrayBuffer: ArrayBuffer): Buffer {\n  const hex = convertArrayBufferToHex(arrayBuffer)\n  const result = convertHexToBuffer(hex)\n  return result\n}\n\nexport function convertArrayBufferToUtf8 (arrayBuffer: ArrayBuffer): string {\n  const utf8 = toUtf8String(new Uint8Array(arrayBuffer))\n  return utf8\n}\n\nexport function convertArrayBufferToHex (\n  arrayBuffer: ArrayBuffer,\n  noPrefix?: boolean\n): string {\n  let hex = hexlify(new Uint8Array(arrayBuffer))\n  if (noPrefix) {\n    hex = removeHexPrefix(hex)\n  }\n  return hex\n}\n\nexport function convertArrayBufferToNumber (arrayBuffer: ArrayBuffer): number {\n  const hex = convertArrayBufferToHex(arrayBuffer)\n  const num = convertHexToNumber(hex)\n  return num\n}\n\nexport function concatArrayBuffers (...args: ArrayBuffer[]): ArrayBuffer {\n  const hex: string = args.map(b => convertArrayBufferToHex(b, true)).join('')\n  const result: ArrayBuffer = convertHexToArrayBuffer(hex)\n  return result\n}\n\n// -- Buffer ----------------------------------------------- //\n\nexport function convertBufferToArrayBuffer (buffer: Buffer): ArrayBuffer {\n  const hex = convertBufferToHex(buffer)\n  const result = convertHexToArrayBuffer(hex)\n  return result\n}\n\nexport function convertBufferToUtf8 (buffer: Buffer): string {\n  const result = buffer.toString('utf8')\n  return result\n}\n\nexport function convertBufferToHex (buffer: Buffer, noPrefix?: boolean): string {\n  let hex = buffer.toString('hex')\n  if (!noPrefix) {\n    hex = addHexPrefix(hex)\n  }\n  return hex\n}\n\nexport function convertBufferToNumber (buffer: Buffer): number {\n  const hex = convertBufferToHex(buffer)\n  const num = convertHexToNumber(hex)\n  return num\n}\n\nexport function concatBuffers (...args: Buffer[]): Buffer {\n  const hex: string = args.map(b => convertBufferToHex(b, true)).join('')\n  const result: Buffer = convertHexToBuffer(hex)\n  return result\n}\n\n// -- Utf8 ------------------------------------------------- //\n\nexport function convertUtf8ToArrayBuffer (utf8: string): ArrayBuffer {\n  const arrayBuffer = toUtf8Bytes(utf8).buffer\n  return arrayBuffer\n}\n\nexport function convertUtf8ToBuffer (utf8: string): Buffer {\n  const result = Buffer.from(utf8, 'utf8')\n  return result\n}\n\nexport function convertUtf8ToHex (utf8: string, noPrefix?: boolean): string {\n  const arrayBuffer = convertUtf8ToArrayBuffer(utf8)\n  const hex = convertArrayBufferToHex(arrayBuffer, noPrefix)\n  return hex\n}\n\nexport function convertUtf8ToNumber (utf8: string): number {\n  const num = new BigNumber(utf8).toNumber()\n  return num\n}\n\n// -- Number ----------------------------------------------- //\n\nexport function convertNumberToBuffer (num: number): Buffer {\n  const hex = convertNumberToHex(num)\n  const buffer = convertHexToBuffer(hex)\n  return buffer\n}\n\nexport function convertNumberToArrayBuffer (num: number): ArrayBuffer {\n  const hex = convertNumberToHex(num)\n  const arrayBuffer = convertHexToArrayBuffer(hex)\n  return arrayBuffer\n}\n\nexport function convertNumberToUtf8 (num: number): string {\n  const utf8 = new BigNumber(num).toString()\n  return utf8\n}\n\nexport function convertNumberToHex (\n  num: number | string,\n  noPrefix?: boolean\n): string {\n  let hex = new BigNumber(num).toString(16)\n  hex = sanitizeHex(hex)\n  if (noPrefix) {\n    hex = removeHexPrefix(hex)\n  }\n  return hex\n}\n\n// -- Hex -------------------------------------------------- //\n\nexport function convertHexToBuffer (hex: string): Buffer {\n  hex = removeHexPrefix(hex)\n  const buffer = Buffer.from(hex, 'hex')\n  return buffer\n}\n\nexport function convertHexToArrayBuffer (hex: string): ArrayBuffer {\n  hex = addHexPrefix(hex)\n  const arrayBuffer = arrayify(hex).buffer\n  return arrayBuffer\n}\n\nexport function convertHexToUtf8 (hex: string): string {\n  const arrayBuffer = convertHexToArrayBuffer(hex)\n  const utf8 = convertArrayBufferToUtf8(arrayBuffer)\n  return utf8\n}\n\nexport function convertHexToNumber (hex: string): number {\n  const num = new BigNumber(hex).toNumber()\n  return num\n}\n\n// -- Misc ------------------------------------------------- //\n\nexport function sanitizeHex (hex: string): string {\n  hex = removeHexPrefix(hex)\n  hex = hex.length % 2 !== 0 ? '0' + hex : hex\n  if (hex) {\n    hex = addHexPrefix(hex)\n  }\n  return hex\n}\n\nexport function addHexPrefix (hex: string): string {\n  if (hex.toLowerCase().substring(0, 2) === '0x') {\n    return hex\n  }\n  return '0x' + hex\n}\n\nexport function removeHexPrefix (hex: string): string {\n  if (hex.toLowerCase().substring(0, 2) === '0x') {\n    return hex.substring(2)\n  }\n  return hex\n}\n\nexport function removeHexLeadingZeros (hex: string): string {\n  hex = removeHexPrefix(hex)\n  hex = hex.startsWith('0') ? hex.substring(1) : hex\n  hex = addHexPrefix(hex)\n  return hex\n}\n\nexport function isHexString (value: any): boolean {\n  return _isHexString(value)\n}\n\nexport function isEmptyString (value: string): boolean {\n  return value === '' || (typeof value === 'string' && value.trim() === '')\n}\n\nexport function payloadId (): number {\n  const datePart: number = new Date().getTime() * Math.pow(10, 3)\n  const extraPart: number = Math.floor(Math.random() * Math.pow(10, 3))\n  const id: number = datePart + extraPart\n  return id\n}\n\nexport function uuid (): string {\n  const result: string = ((a?: any, b?: any) => {\n    for (\n      b = a = '';\n      a++ < 36;\n      b +=\n        (a * 51) & 52\n          ? (a ^ 15 ? 8 ^ (Math.random() * (a ^ 20 ? 16 : 4)) : 4).toString(16)\n          : '-'\n    ) {\n      // empty\n    }\n    return b\n  })()\n  return result\n}\n\nexport const toChecksumAddress = (address: string) => {\n  return getAddress(address)\n}\n\nexport const isValidAddress = (address?: string) => {\n  if (!address) {\n    return false\n  } else if (address.toLowerCase().substring(0, 2) !== '0x') {\n    return false\n  } else if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    return false\n  } else if (\n    /^(0x)?[0-9a-f]{40}$/.test(address) ||\n    /^(0x)?[0-9A-F]{40}$/.test(address)\n  ) {\n    return true\n  } else {\n    return address === toChecksumAddress(address)\n  }\n}\n\nexport function getMeta (): IClientMeta | null {\n  if (\n    typeof window === 'undefined' ||\n    typeof document === 'undefined' ||\n    typeof window.location === 'undefined'\n  ) {\n    return null\n  }\n\n  function getIcons (): string[] {\n    const links: HTMLCollectionOf<\n      HTMLLinkElement\n    > = document.getElementsByTagName('link')\n    const icons: string[] = []\n\n    for (let i = 0; i < links.length; i++) {\n      const link: HTMLLinkElement = links[i]\n\n      const rel: string | null = link.getAttribute('rel')\n      if (rel) {\n        if (rel.toLowerCase().indexOf('icon') > -1) {\n          const href: string | null = link.getAttribute('href')\n\n          if (href) {\n            if (\n              href.toLowerCase().indexOf('https:') === -1 &&\n              href.toLowerCase().indexOf('http:') === -1 &&\n              href.indexOf('//') !== 0\n            ) {\n              let absoluteHref: string =\n                window.location.protocol + '//' + window.location.host\n\n              if (href.indexOf('/') === 0) {\n                absoluteHref += href\n              } else {\n                const path: string[] = window.location.pathname.split('/')\n                path.pop()\n                const finalPath: string = path.join('/')\n                absoluteHref += finalPath + '/' + href\n              }\n\n              icons.push(absoluteHref)\n            } else if (href.indexOf('//') === 0) {\n              const absoluteUrl: string = window.location.protocol + href\n\n              icons.push(absoluteUrl)\n            } else {\n              icons.push(href)\n            }\n          }\n        }\n      }\n    }\n\n    return icons\n  }\n\n  function getMetaOfAny (...args: string[]): string {\n    const metaTags: HTMLCollectionOf<\n      HTMLMetaElement\n    > = document.getElementsByTagName('meta')\n\n    for (let i = 0; i < metaTags.length; i++) {\n      const tag: HTMLMetaElement = metaTags[i]\n      const attributes: Array<string | null> = ['itemprop', 'property', 'name']\n        .map(target => tag.getAttribute(target))\n        .filter(attr => {\n          if (attr) {\n            args.includes(attr)\n          }\n        })\n\n      if (attributes.length && attributes) {\n        const content: string | null = tag.getAttribute('content')\n        if (content) {\n          return content\n        }\n      }\n    }\n\n    return ''\n  }\n\n  function getName (): string {\n    let name: string = getMetaOfAny(\n      'name',\n      'og:site_name',\n      'og:title',\n      'twitter:title'\n    )\n\n    if (!name) {\n      name = document.title\n    }\n\n    return name\n  }\n\n  function getDescription (): string {\n    const description: string = getMetaOfAny(\n      'description',\n      'og:description',\n      'twitter:description',\n      'keywords'\n    )\n\n    return description\n  }\n\n  const name: string = getName()\n  const description: string = getDescription()\n  const url: string = window.location.origin\n  const icons: string[] = getIcons()\n\n  const meta: IClientMeta = {\n    description,\n    url,\n    icons,\n    name\n  }\n\n  return meta\n}\n\nexport function parseQueryString (queryString: string): any {\n  const result: any = {}\n\n  const pairs = (queryString[0] === '?'\n    ? queryString.substr(1)\n    : queryString\n  ).split('&')\n\n  for (let i = 0; i < pairs.length; i++) {\n    const keyArr: string[] = pairs[i].match(/\\w+(?==)/i) || []\n    const valueArr: string[] = pairs[i].match(/=.+/i) || []\n    if (keyArr[0]) {\n      result[decodeURIComponent(keyArr[0])] = decodeURIComponent(\n        valueArr[0].substr(1)\n      )\n    }\n  }\n\n  return result\n}\n\nexport function parseWalletConnectUri (str: string): IParseURIResult {\n  const pathStart: number = str.indexOf(':')\n\n  const pathEnd: number | undefined =\n    str.indexOf('?') !== -1 ? str.indexOf('?') : undefined\n\n  const protocol: string = str.substring(0, pathStart)\n\n  const path: string = str.substring(pathStart + 1, pathEnd)\n\n  function parseRequiredParams (path: string): IRequiredParamsResult {\n    const separator = '@'\n\n    const values = path.split(separator)\n\n    const requiredParams = {\n      handshakeTopic: values[0],\n      version: parseInt(values[1], 10)\n    }\n\n    return requiredParams\n  }\n\n  const requiredParams: IRequiredParamsResult = parseRequiredParams(path)\n\n  const queryString: string =\n    typeof pathEnd !== 'undefined' ? str.substr(pathEnd) : ''\n\n  function parseQueryParams (queryString: string): IQueryParamsResult {\n    const result = parseQueryString(queryString)\n\n    const parameters: IQueryParamsResult = {\n      key: result.key || '',\n      bridge: result.bridge || ''\n    }\n\n    return parameters\n  }\n\n  const queryParams: IQueryParamsResult = parseQueryParams(queryString)\n\n  const result: IParseURIResult = {\n    protocol,\n    ...requiredParams,\n    ...queryParams\n  }\n\n  return result\n}\n\nexport function promisify (\n  originalFn: (...args: any[]) => void,\n  thisArg?: any\n): (\n  ...callArgs: any[]\n) => Promise<IJsonRpcResponseSuccess | IJsonRpcResponseError> {\n  const promisifiedFunction = async (\n    ...callArgs: any[]\n  ): Promise<IJsonRpcResponseSuccess | IJsonRpcResponseError> => {\n    return new Promise((resolve, reject) => {\n      const callback = (\n        err: Error | null,\n        data: IJsonRpcResponseSuccess | IJsonRpcResponseError\n      ) => {\n        if (err === null || typeof err === 'undefined') {\n          reject(err)\n        }\n        resolve(data)\n      }\n      originalFn.apply(thisArg, [...callArgs, callback])\n    })\n  }\n  return promisifiedFunction\n}\n\nexport function isEmptyArray (array: any[]): boolean {\n  return !(array && array.length)\n}\n\nexport function parsePersonalSign (params: string[]): string[] {\n  if (!isEmptyArray(params) && !isHexString(params[0])) {\n    params[0] = convertUtf8ToHex(params[0])\n  }\n  return params\n}\n\nexport function parseTransactionData (\n  txData: Partial<ITxData>\n): Partial<ITxData> {\n  if (typeof txData.from === 'undefined' || !isValidAddress(txData.from)) {\n    throw new Error(`Transaction object must include a valid 'from' value.`)\n  }\n\n  function parseHexValues (value: number | string) {\n    let result = value\n    if (\n      typeof value === 'number' ||\n      (typeof value === 'string' && !isEmptyString(value))\n    ) {\n      if (!isHexString(value)) {\n        result = convertNumberToHex(value)\n      } else if (typeof value === 'string') {\n        result = sanitizeHex(value)\n      }\n    }\n    if (typeof result === 'string') {\n      result = removeHexLeadingZeros(result)\n    }\n    return result\n  }\n\n  const txDataRPC = {\n    from: sanitizeHex(txData.from),\n    to: typeof txData.to === 'undefined' ? '' : sanitizeHex(txData.to),\n    gasPrice:\n      typeof txData.gasPrice === 'undefined'\n        ? ''\n        : parseHexValues(txData.gasPrice),\n    gasLimit:\n      typeof txData.gasLimit === 'undefined'\n        ? typeof txData.gas === 'undefined'\n          ? ''\n          : parseHexValues(txData.gas)\n        : parseHexValues(txData.gasLimit),\n    value:\n      typeof txData.value === 'undefined' ? '' : parseHexValues(txData.value),\n    nonce:\n      typeof txData.nonce === 'undefined' ? '' : parseHexValues(txData.nonce),\n    data:\n      typeof txData.data === 'undefined' ? '' : sanitizeHex(txData.data) || '0x'\n  }\n\n  const prunable = ['gasPrice', 'gasLimit', 'value', 'nonce']\n  Object.keys(txDataRPC).forEach((key: string) => {\n    if (!txDataRPC[key].trim().length && prunable.includes(key)) {\n      delete txDataRPC[key]\n    }\n  })\n\n  return txDataRPC\n}\n\nexport function formatRpcError (\n  error: Partial<IJsonRpcErrorMessage>\n): { code: number; message: string } {\n  const message = error.message || 'Failed or Rejected Request'\n  let code: number = -32000\n  if (error && !error.code) {\n    switch (message) {\n      case 'Parse error':\n        code = -32700\n        break\n      case 'Invalid request':\n        code = -32600\n        break\n      case 'Method not found':\n        code = -32601\n        break\n      case 'Invalid params':\n        code = -32602\n        break\n      case 'Internal error':\n        code = -32603\n        break\n      default:\n        code = -32000\n        break\n    }\n  }\n  const result = {\n    code,\n    message\n  }\n  return result\n}\n\n// -- typeGuards ----------------------------------------------------------- //\n\nexport function isJsonRpcSubscription (\n  object: any\n): object is IJsonRpcSubscription {\n  return typeof object.params === 'object'\n}\n\nexport function isJsonRpcRequest (object: any): object is IJsonRpcRequest {\n  return typeof object.method !== 'undefined'\n}\n\nexport function isJsonRpcResponseSuccess (\n  object: any\n): object is IJsonRpcResponseSuccess {\n  return typeof object.result !== 'undefined'\n}\n\nexport function isJsonRpcResponseError (\n  object: any\n): object is IJsonRpcResponseError {\n  return typeof object.error !== 'undefined'\n}\n\nexport function isInternalEvent (object: any): object is IInternalEvent {\n  return typeof object.event !== 'undefined'\n}\n\nexport function isWalletConnectSession (\n  object: any\n): object is IWalletConnectSession {\n  return typeof object.bridge !== 'undefined'\n}\n\nexport function isReservedEvent (event: string) {\n  const reservedEvents = [\n    'session_request',\n    'session_update',\n    'exchange_key',\n    'connect',\n    'disconnect'\n  ]\n  return reservedEvents.includes(event) || event.startsWith('wc_')\n}\n\nexport const signingMethods = [\n  'eth_sendTransaction',\n  'eth_signTransaction',\n  'eth_sign',\n  'eth_signTypedData',\n  'eth_signTypedData_v1',\n  'eth_signTypedData_v3',\n  'personal_sign'\n]\n\nexport const stateMethods = ['eth_accounts', 'eth_chainId', 'net_version']\n\nexport function isSilentPayload (request: IJsonRpcRequest): boolean {\n  if (request.method.startsWith('wc_')) {\n    return true\n  }\n  if (signingMethods.includes(request.method)) {\n    return false\n  }\n  return true\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v8.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    hasSymbol = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol',\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (hasSymbol) {\r\n      P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n      // Node.js v10.12.0+\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n    }\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nconst AddressZero = \"0x0000000000000000000000000000000000000000\";\nconst HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n// NFKD (decomposed)\n//const EtherSymbol = \"\\uD835\\uDF63\";\n// NFKC (composed)\nconst EtherSymbol = \"\\u039e\";\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst Two = BigNumber.from(2);\nconst WeiPerEther = BigNumber.from(\"1000000000000000000\");\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nexport { AddressZero, HashZero, EtherSymbol, NegativeOne, Zero, One, Two, WeiPerEther, MaxUint256 };\n","export const version = \"strings/5.0.0-beta.133\";\n","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nexport var UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));\n;\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, ignoreErrors) {\n    bytes = arrayify(bytes);\n    let result = [];\n    let i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        let c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        let extraLength = null;\n        let overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if (!ignoreErrors) {\n                if ((c & 0xc0) === 0x80) {\n                    throw new Error(\"invalid utf8 byte sequence; unexpected continuation byte\");\n                }\n                throw new Error(\"invalid utf8 byte sequence; invalid prefix\");\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i + extraLength > bytes.length) {\n            if (!ignoreErrors) {\n                throw new Error(\"invalid utf8 byte sequence; too short\");\n            }\n            // If there is an invalid unprocessed byte, skip continuation bytes\n            for (; i < bytes.length; i++) {\n                if (bytes[i] >> 6 !== 0x02) {\n                    break;\n                }\n            }\n            continue;\n        }\n        // Remove the length prefix from the char\n        let res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        if (res === null) {\n            if (!ignoreErrors) {\n                throw new Error(\"invalid utf8 byte sequence; invalid continuation byte\");\n            }\n            continue;\n        }\n        // Check for overlong seuences (more bytes than needed)\n        if (res <= overlongMask) {\n            if (!ignoreErrors) {\n                throw new Error(\"invalid utf8 byte sequence; overlong\");\n            }\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            if (!ignoreErrors) {\n                throw new Error(\"invalid utf8 byte sequence; out-of-range\");\n            }\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            if (!ignoreErrors) {\n                throw new Error(\"invalid utf8 byte sequence; utf-16 surrogate\");\n            }\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nexport function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            let c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((c >> 18) | 0xf0);\n            result.push(((c >> 12) & 0x3f) | 0x80);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return arrayify(result);\n}\n;\nfunction escapeChar(value) {\n    let hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nexport function _toEscapedUtf8String(bytes, ignoreErrors) {\n    return '\"' + getUtf8CodePoints(bytes, ignoreErrors).map((codePoint) => {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexport function _toUtf8String(codePoints) {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexport function toUtf8String(bytes, ignoreErrors) {\n    return _toUtf8String(getUtf8CodePoints(bytes, ignoreErrors));\n}\nexport function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    let bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    let data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n","\"use strict\";\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nexport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, formatBytes32String, parseBytes32String, nameprep };\n","\"use strict\";\nimport sha3 from \"js-sha3\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function keccak256(data) {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","\"use strict\";\n//See: https://github.com/ethereum/wiki/wiki/RLP\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nfunction arrayifyInteger(value) {\n    let result = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\nfunction unarrayifyInteger(data, offset, length) {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\nfunction _encode(object) {\n    if (Array.isArray(object)) {\n        let payload = [];\n        object.forEach(function (child) {\n            payload = payload.concat(_encode(child));\n        });\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length);\n            return payload;\n        }\n        let length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n        return length.concat(payload);\n    }\n    let data = Array.prototype.slice.call(arrayify(object));\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n    }\n    else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n    let length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n    return length.concat(data);\n}\nexport function encode(object) {\n    return hexlify(_encode(object));\n}\nfunction _decodeChildren(data, offset, childOffset, length) {\n    let result = [];\n    while (childOffset < offset + 1 + length) {\n        let decoded = _decode(data, childOffset);\n        result.push(decoded.result);\n        childOffset += decoded.consumed;\n        if (childOffset > offset + 1 + length) {\n            throw new Error(\"invalid rlp\");\n        }\n    }\n    return { consumed: (1 + length), result: result };\n}\n// returns { consumed: number, result: Object }\nfunction _decode(data, offset) {\n    if (data.length === 0) {\n        throw new Error(\"invalid rlp data\");\n    }\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        let lengthLength = data[offset] - 0xf7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error(\"too short\");\n        }\n        let length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error(\"to short\");\n        }\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n    }\n    else if (data[offset] >= 0xc0) {\n        let length = data[offset] - 0xc0;\n        if (offset + 1 + length > data.length) {\n            throw new Error(\"invalid rlp data\");\n        }\n        return _decodeChildren(data, offset, offset + 1, length);\n    }\n    else if (data[offset] >= 0xb8) {\n        let lengthLength = data[offset] - 0xb7;\n        if (offset + 1 + lengthLength > data.length) {\n            throw new Error(\"invalid rlp data\");\n        }\n        let length = unarrayifyInteger(data, offset + 1, lengthLength);\n        if (offset + 1 + lengthLength + length > data.length) {\n            throw new Error(\"invalid rlp data\");\n        }\n        let result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result };\n    }\n    else if (data[offset] >= 0x80) {\n        let length = data[offset] - 0x80;\n        if (offset + 1 + length > data.length) {\n            throw new Error(\"invalid rlp data\");\n        }\n        let result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result };\n    }\n    return { consumed: 1, result: hexlify(data[offset]) };\n}\nexport function decode(data) {\n    let bytes = arrayify(data);\n    let decoded = _decode(bytes, 0);\n    if (decoded.consumed !== bytes.length) {\n        throw new Error(\"invalid rlp data\");\n    }\n    return decoded.result;\n}\n","\"use strict\";\n// We use this for base 36 maths\nimport { BN } from \"bn.js\";\nimport { arrayify, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction getChecksumAddress(address) {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    address = address.toLowerCase();\n    let chars = address.substring(2).split(\"\");\n    let hashed = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        hashed[i] = chars[i].charCodeAt(0);\n    }\n    hashed = arrayify(keccak256(hashed));\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n    return \"0x\" + chars.join(\"\");\n}\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER = 0x1fffffffffffff;\nfunction log10(x) {\n    if (Math.log10) {\n        return Math.log10(x);\n    }\n    return Math.log(x) / Math.LN10;\n}\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n// Create lookup table\nlet ibanLookup = {};\nfor (let i = 0; i < 10; i++) {\n    ibanLookup[String(i)] = String(i);\n}\nfor (let i = 0; i < 26; i++) {\n    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);\n}\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nlet safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\nfunction ibanChecksum(address) {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n    let expanded = \"\";\n    address.split(\"\").forEach(function (c) {\n        expanded += ibanLookup[c];\n    });\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits) {\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) {\n        checksum = \"0\" + checksum;\n    }\n    return checksum;\n}\n;\nexport function getAddress(address) {\n    let result = null;\n    if (typeof (address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") {\n            address = \"0x\" + address;\n        }\n        result = getChecksumAddress(address);\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n        // Maybe ICAP? (we only support direct mode)\n    }\n    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n        result = (new BN(address.substring(4), 36)).toString(16);\n        while (result.length < 40) {\n            result = \"0\" + result;\n        }\n        result = getChecksumAddress(\"0x\" + result);\n    }\n    else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n    return result;\n}\nexport function isAddress(address) {\n    try {\n        getAddress(address);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getIcapAddress(address) {\n    let base36 = (new BN(getAddress(address).substring(2), 16)).toString(36).toUpperCase();\n    while (base36.length < 30) {\n        base36 = \"0\" + base36;\n    }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction) {\n    let from = null;\n    try {\n        from = getAddress(transaction.from);\n    }\n    catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n    let nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n    return getAddress(hexDataSlice(keccak256(encode([from, nonce])), 12));\n}\n","export const version = \"address/5.0.0-beta.131\";\n"],"sourceRoot":""}